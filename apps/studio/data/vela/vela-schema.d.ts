/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/health": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Health */
        get: operations["health_health_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/organizations/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Organizations:List
         * @description List all organizations the authenticated user belongs to.
         */
        get: operations["organizations_list_organizations__get"];
        put?: never;
        /** Organizations:Create */
        post: operations["organizations_create_organizations__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/{user_ref}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get */
        get: operations["get_users__user_ref___get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Add */
        post: operations["add_users__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/roles/organizations/{org_id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create Role */
        post: operations["create_role_roles_organizations__org_id___post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/roles/organizations/{org_id}/{role_id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Modify Role */
        put: operations["modify_role_roles_organizations__org_id___role_id___put"];
        post?: never;
        /** Delete Role */
        delete: operations["delete_role_roles_organizations__org_id___role_id___delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/roles/organizations/{org_id}/{role_id}/assign/{user_id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Assign Role
         * @description Assign a role to a user in one or more contexts. The context is passed as JSON.
         */
        post: operations["assign_role_roles_organizations__org_id___role_id__assign__user_id___post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/roles/organizations/{org_id}/{role_id}/unassign/{user_id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Unassign Role
         * @description Remove a role assignment for a user in a specific context.
         *     If context is None, remove all assignments of this role for the user.
         */
        post: operations["unassign_role_roles_organizations__org_id___role_id__unassign__user_id___post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/roles/organizations/{org_id}/check_access/{user_id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Api Check Access
         * @description Example POST JSON:
         *     {
         *         "access": "project:settings:update",
         *         "project_id": "01ABCDEF2345XYZ"
         *     }
         */
        post: operations["api_check_access_roles_organizations__org_id__check_access__user_id___post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/roles/organizations/{org_id}/roles/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List Roles
         * @description List all roles and their access rights within an organization
         */
        get: operations["list_roles_roles_organizations__org_id__roles__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/roles/organizations/{org_id}/role-assignments/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List Role Assignments
         * @description List role-user assignments within an organization.
         *     Optionally filter by user_id.
         */
        get: operations["list_role_assignments_roles_organizations__org_id__role_assignments__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/roles/access-rights/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List Access Rights
         * @description List all access rights defined in the system.
         */
        get: operations["list_access_rights_roles_access_rights__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/backup/branches/{branch_ref}/schedule": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Schedules */
        get: operations["list_schedules_backup_branches__branch_ref__schedule_get"];
        /** Add Or Replace Backup Schedule */
        put: operations["add_or_replace_backup_schedule_backup_branches__branch_ref__schedule_put"];
        /** Add Or Replace Backup Schedule */
        post: operations["add_or_replace_backup_schedule_backup_branches__branch_ref__schedule_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/backup/organizations/{org_ref}/schedule": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Schedules */
        get: operations["list_schedules_backup_organizations__org_ref__schedule_get"];
        /** Add Or Replace Backup Schedule */
        put: operations["add_or_replace_backup_schedule_backup_organizations__org_ref__schedule_put"];
        /** Add Or Replace Backup Schedule */
        post: operations["add_or_replace_backup_schedule_backup_organizations__org_ref__schedule_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/backup/branches/{branch_ref}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Backups */
        get: operations["list_backups_backup_branches__branch_ref___get"];
        put?: never;
        /** Manual Backup */
        post: operations["manual_backup_backup_branches__branch_ref___post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/backup/organizations/{org_ref}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Backups */
        get: operations["list_backups_backup_organizations__org_ref___get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/backup/schedule/{schedule_ref}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** Delete Schedule */
        delete: operations["delete_schedule_backup_schedule__schedule_ref___delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/backup/{backup_ref}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** Delete Backup */
        delete: operations["delete_backup_backup__backup_ref__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/resources/branches/{branch_id}/provision": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Branch Provisioning Api */
        get: operations["get_branch_provisioning_api_resources_branches__branch_id__provision_get"];
        put?: never;
        /** Provision Branch */
        post: operations["provision_branch_resources_branches__branch_id__provision_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/resources/projects/{project_id}/usage": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Project Usage */
        get: operations["get_project_usage_resources_projects__project_id__usage_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/resources/organizations/{org_id}/usage": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Org Usage */
        get: operations["get_org_usage_resources_organizations__org_id__usage_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/resources/limits/provisioning/{entity_type}/{entity_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Provisioning Limits */
        get: operations["get_provisioning_limits_resources_limits_provisioning__entity_type___entity_id__get"];
        put?: never;
        /** Set Provisioning Limit */
        post: operations["set_provisioning_limit_resources_limits_provisioning__entity_type___entity_id__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/resources/limits/consumption/{entity_type}/{entity_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Consumption Limits */
        get: operations["get_consumption_limits_resources_limits_consumption__entity_type___entity_id__get"];
        put?: never;
        /** Set Consumption Limit */
        post: operations["set_consumption_limit_resources_limits_consumption__entity_type___entity_id__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/resources/branches/{branch_id}/limits/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Branch Effective Limit */
        get: operations["branch_effective_limit_resources_branches__branch_id__limits__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/organizations/{organization_id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Organizations:Detail */
        get: operations["organizations_detail_organizations__organization_id___get"];
        /** Organizations:Update */
        put: operations["organizations_update_organizations__organization_id___put"];
        post?: never;
        /** Organizations:Delete */
        delete: operations["organizations_delete_organizations__organization_id___delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/organizations/{organization_id}/audit": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Organizations:Audits:List */
        get: operations["organizations_audits_list_organizations__organization_id__audit_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/organizations/{organization_id}/projects/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Organizations:Projects:List */
        get: operations["organizations_projects_list_organizations__organization_id__projects__get"];
        put?: never;
        /** Organizations:Projects:Create */
        post: operations["organizations_projects_create_organizations__organization_id__projects__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/organizations/{organization_id}/projects/{project_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Organizations:Projects:Detail */
        get: operations["organizations_projects_detail_organizations__organization_id__projects__project_id__get"];
        /** Organizations:Projects:Update */
        put: operations["organizations_projects_update_organizations__organization_id__projects__project_id__put"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/organizations/{organization_id}/projects/{project_id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** Organizations:Projects:Delete */
        delete: operations["organizations_projects_delete_organizations__organization_id__projects__project_id___delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/organizations/{organization_id}/projects/{project_id}/pause": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Organizations:Projects:Pause */
        post: operations["organizations_projects_pause_organizations__organization_id__projects__project_id__pause_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/organizations/{organization_id}/projects/{project_id}/resume": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Organizations:Projects:Resume */
        post: operations["organizations_projects_resume_organizations__organization_id__projects__project_id__resume_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/organizations/{organization_id}/projects/{project_id}/branches/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Organizations:Projects:Branch:List */
        get: operations["organizations_projects_branch_list_organizations__organization_id__projects__project_id__branches__get"];
        put?: never;
        /** Organizations:Projects:Branch:Create */
        post: operations["organizations_projects_branch_create_organizations__organization_id__projects__project_id__branches__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Organizations:Projects:Branch:Detail */
        get: operations["organizations_projects_branch_detail_organizations__organization_id__projects__project_id__branches__branch_id__get"];
        /** Organizations:Projects:Branch:Update */
        put: operations["organizations_projects_branch_update_organizations__organization_id__projects__project_id__branches__branch_id__put"];
        post?: never;
        /** Organizations:Projects:Branch:Delete */
        delete: operations["organizations_projects_branch_delete_organizations__organization_id__projects__project_id__branches__branch_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/resize": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Organizations:Projects:Branch:Resize */
        post: operations["organizations_projects_branch_resize_organizations__organization_id__projects__project_id__branches__branch_id__resize_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/stop": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Organizations:Projects:Branch:Stop */
        post: operations["organizations_projects_branch_stop_organizations__organization_id__projects__project_id__branches__branch_id__stop_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/start": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Organizations:Projects:Branch:Start */
        post: operations["organizations_projects_branch_start_organizations__organization_id__projects__project_id__branches__branch_id__start_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/resume": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Organizations:Projects:Branch:Resume */
        post: operations["organizations_projects_branch_resume_organizations__organization_id__projects__project_id__branches__branch_id__resume_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/pause": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Organizations:Projects:Branch:Pause */
        post: operations["organizations_projects_branch_pause_organizations__organization_id__projects__project_id__branches__branch_id__pause_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** AccessCheckRequest */
        AccessCheckRequest: {
            /** Access */
            access: string;
            /** Project Id */
            project_id?: string | null;
            /** Branch Id */
            branch_id?: string | null;
            /** Environment Id */
            environment_id?: string | null;
        };
        /** Action */
        Action: {
            /** Metadata */
            metadata: components["schemas"]["ActionMetadata"][];
            /** Name */
            name: string;
        };
        /** ActionMetadata */
        ActionMetadata: {
            /** Method */
            method: string | null;
            /** Status */
            status: string | null;
        };
        /** Actor */
        Actor: {
            /** Id */
            id: string;
            /** Type */
            type: "user" | string;
            /** Metadata */
            metadata: (string | null)[];
        };
        /** AuditLog */
        "AuditLog-Input": {
            action: components["schemas"]["Action"];
            actor: components["schemas"]["Actor"];
            target: components["schemas"]["Target"];
            /**
             * Occurred At
             * Format: date-time
             */
            occurred_at: string;
        };
        /** AuditLog */
        "AuditLog-Output": {
            action: components["schemas"]["Action"];
            actor: components["schemas"]["Actor"];
            target: components["schemas"]["Target"];
            /**
             * Occurred At
             * Format: date-time
             */
            occurred_at: string;
        };
        /** BranchApiKeys */
        BranchApiKeys: {
            /** Anon */
            anon: string;
            /** Service Role */
            service_role: string;
        };
        /** BranchCreate */
        BranchCreate: {
            /** Name */
            name: string;
            /**
             * ULID
             * Format: ulid
             * @description A ULID (Universally Unique Lexicographically Sortable Identifier)
             */
            source: string;
            /** Env Type */
            env_type?: string | null;
            /**
             * Config Copy
             * @default false
             */
            config_copy?: boolean;
            /**
             * Data Copy
             * @default false
             */
            data_copy?: boolean;
        };
        /** BranchPublic */
        BranchPublic: {
            /**
             * ULID
             * Format: ulid
             * @description A ULID (Universally Unique Lexicographically Sortable Identifier)
             */
            id: string;
            /** Name */
            name: string;
            /** Env Type */
            env_type: string;
            /**
             * ULID
             * Format: ulid
             * @description A ULID (Universally Unique Lexicographically Sortable Identifier)
             */
            project_id: string;
            /**
             * ULID
             * Format: ulid
             * @description A ULID (Universally Unique Lexicographically Sortable Identifier)
             */
            organization_id: string;
            database: components["schemas"]["DatabaseInformation"];
            max_resources: components["schemas"]["ResourcesDefinition"];
            /** Assigned Labels */
            assigned_labels: string[];
            api_keys: components["schemas"]["BranchApiKeys"];
            status: components["schemas"]["BranchStatus"];
            /** Ptir Enabled */
            ptir_enabled: boolean;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /** Created By */
            created_by: string;
            /** Updated At */
            updated_at?: string | null;
            /** Updated By */
            updated_by?: string | null;
        };
        /** BranchStatus */
        BranchStatus: {
            /**
             * Database
             * @enum {string}
             */
            database: "ACTIVE_HEALTHY" | "STOPPED" | "STARTING" | "ACTIVE_UNHEALTHY" | "CREATING" | "DELETING" | "UPDATING" | "RESTARTING" | "STOPPING" | "UNKNOWN";
            /**
             * Storage
             * @enum {string}
             */
            storage: "ACTIVE_HEALTHY" | "STOPPED" | "STARTING" | "ACTIVE_UNHEALTHY" | "CREATING" | "DELETING" | "UPDATING" | "RESTARTING" | "STOPPING" | "UNKNOWN";
            /**
             * Realtime
             * @enum {string}
             */
            realtime: "ACTIVE_HEALTHY" | "STOPPED" | "STARTING" | "ACTIVE_UNHEALTHY" | "CREATING" | "DELETING" | "UPDATING" | "RESTARTING" | "STOPPING" | "UNKNOWN";
        };
        /** BranchUpdate */
        BranchUpdate: {
            /** Name */
            name?: string | null;
            /** Env Type */
            env_type?: string | null;
        };
        /** ConsumptionPayload */
        ConsumptionPayload: {
            resource: components["schemas"]["ResourceType"];
            /** Max Total Minutes */
            max_total_minutes: number;
        };
        /** DatabaseInformation */
        DatabaseInformation: {
            /** Host */
            host: string;
            /** Port */
            port: number;
            /** Username */
            username: string;
            /** Name */
            name: string;
            /** Encrypted Connection String */
            encrypted_connection_string: string;
            /** Service Endpoint Uri */
            service_endpoint_uri: string;
            /** Version */
            version: string;
            /** Has Replicas */
            has_replicas: boolean;
        };
        /** DeploymentParameters */
        DeploymentParameters: {
            /** Database */
            database: string;
            /** Database User */
            database_user: string;
            /** Database Password */
            database_password: string;
            /** Database Size */
            database_size: number;
            /** Vcpu */
            vcpu: number;
            /** Memory */
            memory: number;
            /** Iops */
            iops: number;
            /**
             * Database Image Tag
             * @constant
             */
            database_image_tag: "15.1.0.147";
        };
        /**
         * EntityType
         * @enum {string}
         */
        EntityType: "org" | "org_env" | "project";
        /** HTTPError */
        HTTPError: {
            /** Detail */
            detail: string | {
                [key: string]: unknown;
            };
        };
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components["schemas"]["ValidationError"][];
        };
        /** Organization */
        Organization: {
            /**
             * ULID
             * Format: ulid
             * @description A ULID (Universally Unique Lexicographically Sortable Identifier)
             */
            id?: string;
            /** Name */
            name: string;
            /**
             * Locked
             * @default false
             */
            locked?: boolean;
            /** Max Backups */
            max_backups: number;
            /**
             * Require Mfa
             * @default false
             */
            require_mfa?: boolean;
            /** Envs */
            envs: string;
        };
        /** OrganizationAuditLog */
        OrganizationAuditLog: {
            /** Result */
            result: components["schemas"]["AuditLog-Output"][];
            /** Retention Period */
            retention_period: number;
        };
        /** OrganizationCreate */
        OrganizationCreate: {
            /** Name */
            name: string;
            /**
             * Locked
             * @default false
             */
            locked?: boolean;
            /**
             * Require Mfa
             * @default false
             */
            require_mfa?: boolean;
            /** Max Backups */
            max_backups: number;
            /** Envs */
            envs: string;
        };
        /** OrganizationUpdate */
        OrganizationUpdate: {
            /** Name */
            name?: string | null;
            /** Locked */
            locked?: boolean | null;
            /** Require Mfa */
            require_mfa?: boolean | null;
            /** Max Backups */
            max_backups?: number | null;
            /** Envs */
            envs?: string | null;
        };
        /** ProjectCreate */
        ProjectCreate: {
            /** Name */
            name: string;
            /** Max Backups */
            max_backups: number;
            /** Env Type */
            env_type: string;
            deployment: components["schemas"]["DeploymentParameters"];
        };
        /** ProjectPublic */
        ProjectPublic: {
            /**
             * ULID
             * Format: ulid
             * @description A ULID (Universally Unique Lexicographically Sortable Identifier)
             */
            organization_id: string;
            /**
             * ULID
             * Format: ulid
             * @description A ULID (Universally Unique Lexicographically Sortable Identifier)
             */
            id: string;
            /** Name */
            name: string;
            /** Max Backups */
            max_backups: number;
            /** Branch Status */
            branch_status: {
                [key: string]: "ACTIVE_HEALTHY" | "ACTIVE_UNHEALTHY" | "COMING_UP" | "INACTIVE" | "UNKNOWN";
            };
        };
        /** ProjectUpdate */
        ProjectUpdate: {
            /** Name */
            name?: string | null;
            /** Max Backups */
            max_backups?: number | null;
        };
        /** ProvLimitPayload */
        ProvLimitPayload: {
            resource: components["schemas"]["ResourceType"];
            /** Max Total */
            max_total: number;
            /** Max Per Branch */
            max_per_branch: number;
        };
        /** ResizeParameters */
        ResizeParameters: {
            /** Database Size */
            database_size?: number | null;
        };
        /**
         * ResourceType
         * @enum {string}
         */
        ResourceType: "milli_vcpu" | "ram" | "iops" | "storage_size" | "database_size";
        /** ResourcesDefinition */
        ResourcesDefinition: {
            /**
             * Vcpu
             * @description Number of virtual CPUs provisioned (matches Branch.vcpu constraints).
             */
            vcpu: number;
            /**
             * Ram Bytes
             * @description Guest memory expressed in bytes (mirrors Branch.memory).
             */
            ram_bytes: number;
            /**
             * Nvme Bytes
             * @description Provisioned NVMe volume capacity in bytes (derived from Branch.database_size).
             */
            nvme_bytes: number;
            /**
             * Iops
             * @description Configured storage IOPS budget (matches Branch.iops constraints).
             */
            iops: number;
            /**
             * Storage Bytes
             * @description Database storage capacity in bytes (mirrors Branch.database_size).
             */
            storage_bytes?: number | null;
        };
        /** RessourcesPayload */
        RessourcesPayload: {
            /** Ressources */
            ressources: {
                [key: string]: number;
            };
        };
        /** RoleAssignmentPayload */
        RoleAssignmentPayload: {
            /** Project Ids */
            project_ids?: string[] | null;
            /** Branch Ids */
            branch_ids?: string[] | null;
            /** Environment Ids */
            environment_ids?: string[] | null;
        };
        /** RolePayload */
        RolePayload: {
            /** Role Id */
            role_id: string;
            /** Role Type */
            role_type: string;
            /**
             * Is Active
             * @default true
             */
            is_active?: boolean;
            /**
             * Access Rights
             * @default []
             */
            access_rights?: string[] | null;
        };
        /** RolePayloadUpdate */
        RolePayloadUpdate: {
            /** Role Type */
            role_type: string;
            /**
             * Is Active
             * @default true
             */
            is_active?: boolean;
            /**
             * Access Rights
             * @default []
             */
            access_rights?: string[] | null;
        };
        /** SchedulePayload */
        SchedulePayload: {
            /** Rows */
            rows: components["schemas"]["ScheduleRow"][];
            /** Env Type */
            env_type?: string | null;
        };
        /** ScheduleRow */
        ScheduleRow: {
            /** Row Index */
            row_index: number;
            /** Interval */
            interval: number;
            /** Unit */
            unit: string;
            /** Retention */
            retention: number;
        };
        /** Target */
        Target: {
            /** Description */
            description: string;
            /** Metadata */
            metadata: components["schemas"]["TargetMetadata"][];
        };
        /** TargetMetadata */
        TargetMetadata: {
            /** Organization */
            organization: string | null;
            /** Project */
            project: string | null;
        };
        /** ToFromPayload */
        ToFromPayload: {
            /** Cycle Start */
            cycle_start?: string | null;
            /** Cycle End */
            cycle_end?: string | null;
        };
        /** UserCreationResult */
        UserCreationResult: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Password */
            password: string;
        };
        /** UserParameters */
        UserParameters: {
            /**
             * Email
             * Format: email
             */
            email: string;
            /** First Name */
            first_name: string;
            /** Last Name */
            last_name: string;
        };
        /** UserPublic */
        UserPublic: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /**
             * Email
             * Format: email
             */
            email: string;
            /** Email Verified */
            email_verified: boolean;
            /** First Name */
            first_name: string;
            /** Last Name */
            last_name: string;
        };
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    health_health_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    organizations_list_organizations__get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Organization"][];
                };
            };
            /** @description Not authenticated */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
        };
    };
    organizations_create_organizations__post: {
        parameters: {
            query?: {
                response?: "empty" | "full";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["OrganizationCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    /** @description URL of the created item */
                    Location?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Organization"] | null;
                };
            };
            /** @description Not authenticated */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Conflict */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_users__user_ref___get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                user_ref: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserPublic"];
                };
            };
            /** @description Not authenticated */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    add_users__post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserParameters"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": [
                        components["schemas"]["UserCreationResult"],
                        number
                    ];
                };
            };
            /** @description Not authenticated */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_role_roles_organizations__org_id___post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                org_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["RolePayload"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    modify_role_roles_organizations__org_id___role_id___put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                org_id: string;
                role_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["RolePayloadUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_role_roles_organizations__org_id___role_id___delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                org_id: string;
                role_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    assign_role_roles_organizations__org_id___role_id__assign__user_id___post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                role_id: string;
                org_id: string;
                user_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["RoleAssignmentPayload"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    unassign_role_roles_organizations__org_id___role_id__unassign__user_id___post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                role_id: string;
                org_id: string;
                user_id: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    [key: string]: string;
                } | null;
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    api_check_access_roles_organizations__org_id__check_access__user_id___post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                org_id: string;
                user_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["AccessCheckRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    list_roles_roles_organizations__org_id__roles__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                org_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RolePayload"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    list_role_assignments_roles_organizations__org_id__role_assignments__get: {
        parameters: {
            query?: {
                user_id?: string | null;
            };
            header?: never;
            path: {
                org_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    list_access_rights_roles_access_rights__get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string[];
                };
            };
        };
    };
    list_schedules_backup_branches__branch_ref__schedule_get: {
        parameters: {
            query?: {
                org_ref?: string | null;
                env_type?: string | null;
            };
            header?: never;
            path: {
                branch_ref: string | null;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    add_or_replace_backup_schedule_backup_branches__branch_ref__schedule_put: {
        parameters: {
            query?: {
                org_ref?: string | null;
            };
            header?: never;
            path: {
                branch_ref: string | null;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SchedulePayload"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    add_or_replace_backup_schedule_backup_branches__branch_ref__schedule_post: {
        parameters: {
            query?: {
                org_ref?: string | null;
            };
            header?: never;
            path: {
                branch_ref: string | null;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SchedulePayload"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    list_schedules_backup_organizations__org_ref__schedule_get: {
        parameters: {
            query?: {
                branch_ref?: string | null;
                env_type?: string | null;
            };
            header?: never;
            path: {
                org_ref: string | null;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    add_or_replace_backup_schedule_backup_organizations__org_ref__schedule_put: {
        parameters: {
            query?: {
                branch_ref?: string | null;
            };
            header?: never;
            path: {
                org_ref: string | null;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SchedulePayload"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    add_or_replace_backup_schedule_backup_organizations__org_ref__schedule_post: {
        parameters: {
            query?: {
                branch_ref?: string | null;
            };
            header?: never;
            path: {
                org_ref: string | null;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SchedulePayload"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    list_backups_backup_branches__branch_ref___get: {
        parameters: {
            query?: {
                org_ref?: string | null;
                env_type?: string | null;
            };
            header?: never;
            path: {
                branch_ref: string | null;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    manual_backup_backup_branches__branch_ref___post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                branch_ref: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    list_backups_backup_organizations__org_ref___get: {
        parameters: {
            query?: {
                branch_ref?: string | null;
                env_type?: string | null;
            };
            header?: never;
            path: {
                org_ref: string | null;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_schedule_backup_schedule__schedule_ref___delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                schedule_ref: string | null;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_backup_backup__backup_ref__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                backup_ref: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_branch_provisioning_api_resources_branches__branch_id__provision_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                branch_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    provision_branch_resources_branches__branch_id__provision_post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                branch_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["RessourcesPayload"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_project_usage_resources_projects__project_id__usage_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                project_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ToFromPayload"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_org_usage_resources_organizations__org_id__usage_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                org_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ToFromPayload"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_provisioning_limits_resources_limits_provisioning__entity_type___entity_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                entity_type: components["schemas"]["EntityType"];
                entity_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    set_provisioning_limit_resources_limits_provisioning__entity_type___entity_id__post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                entity_type: components["schemas"]["EntityType"];
                entity_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ProvLimitPayload"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_consumption_limits_resources_limits_consumption__entity_type___entity_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                entity_type: components["schemas"]["EntityType"];
                entity_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    set_consumption_limit_resources_limits_consumption__entity_type___entity_id__post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                entity_type: components["schemas"]["EntityType"];
                entity_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ConsumptionPayload"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    branch_effective_limit_resources_branches__branch_id__limits__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                branch_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    organizations_detail_organizations__organization_id___get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Not authenticated */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    organizations_update_organizations__organization_id___put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["OrganizationUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    /** @description URL of the updated item */
                    Location?: string;
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not authenticated */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Conflict */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    organizations_delete_organizations__organization_id___delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not authenticated */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    organizations_audits_list_organizations__organization_id__audit_get: {
        parameters: {
            query: {
                from: string;
                to: string;
            };
            header?: never;
            path: {
                organization_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["OrganizationAuditLog"];
                };
            };
            /** @description Not authenticated */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    organizations_projects_list_organizations__organization_id__projects__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProjectPublic"][];
                };
            };
            /** @description Not authenticated */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    organizations_projects_create_organizations__organization_id__projects__post: {
        parameters: {
            query?: {
                response?: "empty" | "full";
            };
            header?: never;
            path: {
                organization_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ProjectCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    /** @description URL of the created item */
                    Location?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProjectPublic"] | null;
                };
            };
            /** @description Not authenticated */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Conflict */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    organizations_projects_detail_organizations__organization_id__projects__project_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_id: string;
                project_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProjectPublic"];
                };
            };
            /** @description Not authenticated */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    organizations_projects_update_organizations__organization_id__projects__project_id__put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_id: string;
                project_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ProjectUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    /** @description URL of the created item */
                    Location?: string;
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not authenticated */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Conflict */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    organizations_projects_delete_organizations__organization_id__projects__project_id___delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_id: string;
                project_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not authenticated */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    organizations_projects_pause_organizations__organization_id__projects__project_id__pause_post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_id: string;
                project_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not authenticated */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    organizations_projects_resume_organizations__organization_id__projects__project_id__resume_post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_id: string;
                project_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not authenticated */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    organizations_projects_branch_list_organizations__organization_id__projects__project_id__branches__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_id: string;
                project_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BranchPublic"][];
                };
            };
            /** @description Not authenticated */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    organizations_projects_branch_create_organizations__organization_id__projects__project_id__branches__post: {
        parameters: {
            query?: {
                response?: "empty" | "full";
            };
            header?: never;
            path: {
                organization_id: string;
                project_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["BranchCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    /** @description URL of the created item */
                    Location?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BranchPublic"] | null;
                };
            };
            /** @description Not authenticated */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Conflict */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    organizations_projects_branch_detail_organizations__organization_id__projects__project_id__branches__branch_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_id: string;
                project_id: string;
                branch_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BranchPublic"];
                };
            };
            /** @description Not authenticated */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    organizations_projects_branch_update_organizations__organization_id__projects__project_id__branches__branch_id__put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_id: string;
                project_id: string;
                branch_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["BranchUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    /** @description URL of the created item */
                    Location?: string;
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not authenticated */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Conflict */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    organizations_projects_branch_delete_organizations__organization_id__projects__project_id__branches__branch_id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_id: string;
                project_id: string;
                branch_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not authenticated */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    organizations_projects_branch_resize_organizations__organization_id__projects__project_id__branches__branch_id__resize_post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_id: string;
                project_id: string;
                branch_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ResizeParameters"];
            };
        };
        responses: {
            /** @description Successful Response */
            202: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Not authenticated */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    organizations_projects_branch_stop_organizations__organization_id__projects__project_id__branches__branch_id__stop_post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_id: string;
                project_id: string;
                branch_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not authenticated */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    organizations_projects_branch_start_organizations__organization_id__projects__project_id__branches__branch_id__start_post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_id: string;
                project_id: string;
                branch_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not authenticated */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    organizations_projects_branch_resume_organizations__organization_id__projects__project_id__branches__branch_id__resume_post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_id: string;
                project_id: string;
                branch_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not authenticated */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    organizations_projects_branch_pause_organizations__organization_id__projects__project_id__branches__branch_id__pause_post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_id: string;
                project_id: string;
                branch_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not authenticated */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPError"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
}
