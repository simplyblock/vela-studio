{
  "openapi": "3.1.0",
  "info": {
    "title": "FastAPI",
    "version": "0.1.0"
  },
  "servers": [
    {
      "url": "/vela"
    }
  ],
  "paths": {
    "/health": {
      "get": {
        "summary": "Health",
        "operationId": "health",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/": {
      "get": {
        "summary": "Organizations:List",
        "operationId": "organizations:list",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Organization"
                  },
                  "title": "Response Organizations List Organizations  Get"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Organizations:Create",
        "operationId": "organizations:create",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "response",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "empty",
                "full"
              ],
              "type": "string",
              "default": "empty",
              "title": "Response"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "headers": {
              "Location": {
                "description": "URL of the created item",
                "schema": {
                  "type": "string"
                }
              }
            },
            "links": {
              "detail": {
                "operationId": "organizations:detail",
                "parameters": {
                  "organization_slug": "$response.header.Location#regex:/organizations/(.+)/"
                }
              },
              "update": {
                "operationId": "organizations:update",
                "parameters": {
                  "organization_slug": "$response.header.Location#regex:/organizations/(.+)/"
                }
              },
              "delete": {
                "operationId": "organizations:delete",
                "parameters": {
                  "organization_slug": "$response.header.Location#regex:/organizations/(.+)/"
                }
              },
              "create_project": {
                "operationId": "organizations:projects:create",
                "parameters": {
                  "organization_slug": "$response.header.Location#regex:/organizations/(.+)/"
                }
              },
              "list_projects": {
                "operationId": "organizations:projects:list",
                "parameters": {
                  "organization_slug": "$response.header.Location#regex:/organizations/(.+)/"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_slug}/": {
      "get": {
        "summary": "Organizations:Detail",
        "operationId": "organizations:detail",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 50,
              "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$",
              "title": "Organization Slug"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organization"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Organizations:Update",
        "operationId": "organizations:update",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 50,
              "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$",
              "title": "Organization Slug"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationUpdate"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful Response",
            "headers": {
              "Location": {
                "description": "URL of the created item",
                "schema": {
                  "type": "string"
                }
              }
            },
            "links": {
              "detail": {
                "operationId": "organizations:detail",
                "parameters": {
                  "organization_slug": "$response.header.Location#regex:/organizations/(.+)/"
                }
              },
              "update": {
                "operationId": "organizations:update",
                "parameters": {
                  "organization_slug": "$response.header.Location#regex:/organizations/(.+)/"
                }
              },
              "delete": {
                "operationId": "organizations:delete",
                "parameters": {
                  "organization_slug": "$response.header.Location#regex:/organizations/(.+)/"
                }
              },
              "create_project": {
                "operationId": "organizations:projects:create",
                "parameters": {
                  "organization_slug": "$response.header.Location#regex:/organizations/(.+)/"
                }
              },
              "list_projects": {
                "operationId": "organizations:projects:list",
                "parameters": {
                  "organization_slug": "$response.header.Location#regex:/organizations/(.+)/"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Organizations:Delete",
        "operationId": "organizations:delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 50,
              "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$",
              "title": "Organization Slug"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_slug}/audit": {
      "get": {
        "summary": "Organizations:Audits:List",
        "operationId": "organizations:audits:list",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 50,
              "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$",
              "title": "Organization Slug"
            }
          },
          {
            "name": "from",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time",
              "title": "From"
            }
          },
          {
            "name": "to",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time",
              "title": "To"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationAuditLog"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_slug}/projects/": {
      "get": {
        "summary": "Organizations:Projects:List",
        "operationId": "organizations:projects:list",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 50,
              "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$",
              "title": "Organization Slug"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectPublic"
                  },
                  "title": "Response Organizations Projects List Organizations  Organization Slug  Projects  Get"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Organizations:Projects:Create",
        "operationId": "organizations:projects:create",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 50,
              "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$",
              "title": "Organization Slug"
            }
          },
          {
            "name": "response",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "empty",
                "full"
              ],
              "type": "string",
              "default": "empty",
              "title": "Response"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "headers": {
              "Location": {
                "description": "URL of the created item",
                "schema": {
                  "type": "string"
                }
              }
            },
            "links": {
              "detail": {
                "operationId": "organizations:projects:detail",
                "parameters": {
                  "project_slug": "$response.header.Location#regex:/projects/(.+)/"
                }
              },
              "update": {
                "operationId": "organizations:projects:update",
                "parameters": {
                  "project_slug": "$response.header.Location#regex:/projects/(.+)/"
                }
              },
              "delete": {
                "operationId": "organizations:projects:delete",
                "parameters": {
                  "project_slug": "$response.header.Location#regex:/projects/(.+)/"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_slug}/projects/{project_slug}/": {
      "get": {
        "summary": "Organizations:Projects:Detail",
        "operationId": "organizations:projects:detail",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 50,
              "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$",
              "title": "Organization Slug"
            }
          },
          {
            "name": "project_slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 50,
              "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$",
              "title": "Project Slug"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectPublic"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Organizations:Projects:Update",
        "operationId": "organizations:projects:update",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 50,
              "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$",
              "title": "Organization Slug"
            }
          },
          {
            "name": "project_slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 50,
              "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$",
              "title": "Project Slug"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectUpdate"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful Response",
            "headers": {
              "Location": {
                "description": "URL of the created item",
                "schema": {
                  "type": "string"
                }
              }
            },
            "links": {
              "detail": {
                "operationId": "organizations:projects:detail",
                "parameters": {
                  "project_slug": "$response.header.Location#regex:/projects/(.+)/"
                }
              },
              "update": {
                "operationId": "organizations:projects:update",
                "parameters": {
                  "project_slug": "$response.header.Location#regex:/projects/(.+)/"
                }
              },
              "delete": {
                "operationId": "organizations:projects:delete",
                "parameters": {
                  "project_slug": "$response.header.Location#regex:/projects/(.+)/"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Organizations:Projects:Delete",
        "operationId": "organizations:projects:delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 50,
              "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$",
              "title": "Organization Slug"
            }
          },
          {
            "name": "project_slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 50,
              "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$",
              "title": "Project Slug"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_slug}/projects/{project_slug}/pause": {
      "post": {
        "summary": "Organizations:Projects:Pause",
        "operationId": "organizations:projects:pause",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 50,
              "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$",
              "title": "Organization Slug"
            }
          },
          {
            "name": "project_slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 50,
              "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$",
              "title": "Project Slug"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_slug}/projects/{project_slug}/resume": {
      "post": {
        "summary": "Organizations:Projects:Resume",
        "operationId": "organizations:projects:resume",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 50,
              "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$",
              "title": "Organization Slug"
            }
          },
          {
            "name": "project_slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 50,
              "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$",
              "title": "Project Slug"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_slug}/members/": {
      "get": {
        "summary": "Organizations:Members:List",
        "operationId": "organizations:members:list",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 50,
              "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$",
              "title": "Organization Slug"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserPublic"
                  },
                  "title": "Response Organizations Members List Organizations  Organization Slug  Members  Get"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Organizations:Members:Add",
        "operationId": "organizations:members:add",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 50,
              "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$",
              "title": "Organization Slug"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_slug}/members/{user_id}": {
      "put": {
        "summary": "Organizations:Members:Update",
        "operationId": "organizations:members:update",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 50,
              "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$",
              "title": "Organization Slug"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Organizations:Members:Remove",
        "operationId": "organizations:members:remove",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 50,
              "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$",
              "title": "Organization Slug"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Action": {
        "properties": {
          "metadata": {
            "items": {
              "$ref": "#/components/schemas/ActionMetadata"
            },
            "type": "array",
            "title": "Metadata"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "metadata",
          "name"
        ],
        "title": "Action"
      },
      "ActionMetadata": {
        "properties": {
          "method": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Method"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          }
        },
        "type": "object",
        "required": [
          "method",
          "status"
        ],
        "title": "ActionMetadata"
      },
      "Actor": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "type": {
            "anyOf": [
              {
                "type": "string",
                "const": "user"
              },
              {
                "type": "string"
              }
            ],
            "title": "Type"
          },
          "metadata": {
            "items": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "email"
                },
                {
                  "type": "null"
                }
              ]
            },
            "type": "array",
            "title": "Metadata"
          }
        },
        "type": "object",
        "required": [
          "id",
          "type",
          "metadata"
        ],
        "title": "Actor"
      },
      "AuditLog": {
        "properties": {
          "action": {
            "$ref": "#/components/schemas/Action"
          },
          "actor": {
            "$ref": "#/components/schemas/Actor"
          },
          "target": {
            "$ref": "#/components/schemas/Target"
          },
          "occurred_at": {
            "type": "string",
            "format": "date-time",
            "title": "Occurred At"
          }
        },
        "type": "object",
        "required": [
          "action",
          "actor",
          "target",
          "occurred_at"
        ],
        "title": "AuditLog"
      },
      "DeploymentParameters": {
        "properties": {
          "database": {
            "type": "string",
            "pattern": "^[^\\x00]*$",
            "title": "Database"
          },
          "database_user": {
            "type": "string",
            "pattern": "^[^\\x00]*$",
            "title": "Database User"
          },
          "database_password": {
            "type": "string",
            "pattern": "^[^\\x00]*$",
            "title": "Database Password"
          },
          "database_size": {
            "type": "integer",
            "multipleOf": 1073741824,
            "exclusiveMinimum": 0,
            "title": "Database Size"
          },
          "vcpu": {
            "type": "integer",
            "title": "Vcpu"
          },
          "memory": {
            "type": "integer",
            "multipleOf": 1073741824,
            "exclusiveMinimum": 0,
            "title": "Memory"
          },
          "iops": {
            "type": "integer",
            "title": "Iops"
          },
          "database_image_tag": {
            "type": "string",
            "const": "15.1.0.147",
            "title": "Database Image Tag"
          }
        },
        "type": "object",
        "required": [
          "database",
          "database_user",
          "database_password",
          "database_size",
          "vcpu",
          "memory",
          "iops",
          "database_image_tag"
        ],
        "title": "DeploymentParameters"
      },
      "HTTPError": {
        "properties": {
          "detail": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "additionalProperties": true,
                "type": "object"
              }
            ],
            "title": "Detail"
          }
        },
        "type": "object",
        "required": [
          "detail"
        ],
        "title": "HTTPError"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "Organization": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "slug": {
            "type": "string",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$",
            "title": "Slug"
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "pattern": "^[^\\x00]*$",
            "title": "Name"
          },
          "locked": {
            "type": "boolean",
            "title": "Locked",
            "default": false
          },
          "require_mfa": {
            "type": "boolean",
            "title": "Require Mfa",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "slug",
          "name"
        ],
        "title": "Organization"
      },
      "OrganizationAuditLog": {
        "properties": {
          "result": {
            "items": {
              "$ref": "#/components/schemas/AuditLog"
            },
            "type": "array",
            "title": "Result"
          },
          "retention_period": {
            "type": "integer",
            "title": "Retention Period"
          }
        },
        "type": "object",
        "required": [
          "result",
          "retention_period"
        ],
        "title": "OrganizationAuditLog"
      },
      "OrganizationCreate": {
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "pattern": "^[^\\x00]*$",
            "title": "Name"
          },
          "locked": {
            "type": "boolean",
            "title": "Locked",
            "default": false
          },
          "require_mfa": {
            "type": "boolean",
            "title": "Require Mfa",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "OrganizationCreate"
      },
      "OrganizationUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "pattern": "^[^\\x00]*$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "locked": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Locked"
          },
          "require_mfa": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Require Mfa"
          }
        },
        "type": "object",
        "title": "OrganizationUpdate"
      },
      "ProjectCreate": {
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "pattern": "^[^\\x00]*$",
            "title": "Name"
          },
          "deployment": {
            "$ref": "#/components/schemas/DeploymentParameters"
          }
        },
        "type": "object",
        "required": [
          "name",
          "deployment"
        ],
        "title": "ProjectCreate"
      },
      "ProjectPublic": {
        "properties": {
          "organization_id": {
            "type": "integer",
            "title": "Organization Id"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "slug": {
            "type": "string",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$",
            "title": "Slug"
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "pattern": "^[^\\x00]*$",
            "title": "Name"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "deployment_status": {
            "prefixItems": [
              {
                "type": "string"
              },
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              }
            ],
            "type": "array",
            "maxItems": 2,
            "minItems": 2,
            "title": "Deployment Status"
          },
          "database_user": {
            "type": "string",
            "title": "Database User"
          },
          "encrypted_database_connection_string": {
            "type": "string",
            "title": "Encrypted Database Connection String"
          }
        },
        "type": "object",
        "required": [
          "organization_id",
          "id",
          "slug",
          "name",
          "status",
          "deployment_status",
          "database_user",
          "encrypted_database_connection_string"
        ],
        "title": "ProjectPublic"
      },
      "ProjectUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "pattern": "^[^\\x00]*$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          }
        },
        "type": "object",
        "title": "ProjectUpdate"
      },
      "Status": {
        "properties": {
          "service": {
            "type": "string",
            "const": "vela",
            "title": "Service",
            "default": "vela"
          }
        },
        "type": "object",
        "title": "Status"
      },
      "Target": {
        "properties": {
          "description": {
            "type": "string",
            "title": "Description"
          },
          "metadata": {
            "items": {
              "$ref": "#/components/schemas/TargetMetadata"
            },
            "type": "array",
            "title": "Metadata"
          }
        },
        "type": "object",
        "required": [
          "description",
          "metadata"
        ],
        "title": "Target"
      },
      "TargetMetadata": {
        "properties": {
          "organization": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50,
                "minLength": 1,
                "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization"
          },
          "project": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50,
                "minLength": 1,
                "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Project"
          }
        },
        "type": "object",
        "required": [
          "organization",
          "project"
        ],
        "title": "TargetMetadata"
      },
      "UserPublic": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "id"
        ],
        "title": "UserPublic"
      },
      "UserRequest": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "id"
        ],
        "title": "UserRequest"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}