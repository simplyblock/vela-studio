{
  "openapi": "3.1.0",
  "info": {
    "title": "FastAPI",
    "version": "0.1.0"
  },
  "servers": [
    {
      "url": "/vela"
    }
  ],
  "paths": {
    "/health": {
      "get": {
        "summary": "Health",
        "operationId": "health_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/organizations/": {
      "post": {
        "summary": "Organizations:Create",
        "operationId": "organizations_create_organizations__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "response",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "empty",
                "full"
              ],
              "type": "string",
              "default": "empty",
              "title": "Response"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/Organization"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Response Organizations Create Organizations  Post"
                }
              }
            },
            "headers": {
              "Location": {
                "description": "URL of the created item",
                "schema": {
                  "type": "string"
                }
              }
            },
            "links": {
              "detail": {
                "operationId": "organizations:detail",
                "parameters": {
                  "organization_id": "$response.header.Location#regex:/organizations/(.+)/"
                }
              },
              "update": {
                "operationId": "organizations:update",
                "parameters": {
                  "organization_id": "$response.header.Location#regex:/organizations/(.+)/"
                }
              },
              "delete": {
                "operationId": "organizations:delete",
                "parameters": {
                  "organization_id": "$response.header.Location#regex:/organizations/(.+)/"
                }
              },
              "create_project": {
                "operationId": "organizations:projects:create",
                "parameters": {
                  "organization_id": "$response.header.Location#regex:/organizations/(.+)/"
                }
              },
              "list_projects": {
                "operationId": "organizations:projects:list",
                "parameters": {
                  "organization_id": "$response.header.Location#regex:/organizations/(.+)/"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Organizations:List",
        "description": "List all organizations the authenticated user belongs to.",
        "operationId": "organizations_list_organizations__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Organization"
                  },
                  "title": "Response Organizations List Organizations  Get"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_ref}/": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get",
        "operationId": "get_users__user_ref___get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_ref",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string",
                  "format": "email"
                }
              ],
              "title": "User Ref"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPublic"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/users/": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Add",
        "operationId": "add_users__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserParameters"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "prefixItems": [
                    {
                      "$ref": "#/components/schemas/UserCreationResult"
                    },
                    {
                      "type": "integer"
                    }
                  ],
                  "type": "array",
                  "maxItems": 2,
                  "minItems": 2,
                  "title": "Response Add Users  Post"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/roles/organizations/{org_id}/": {
      "post": {
        "summary": "Create Role",
        "operationId": "create_role_roles_organizations__org_id___post",
        "parameters": [
          {
            "name": "org_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Org Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RolePayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/roles/organizations/{org_id}/{role_id}/": {
      "put": {
        "summary": "Modify Role",
        "operationId": "modify_role_roles_organizations__org_id___role_id___put",
        "parameters": [
          {
            "name": "org_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Org Id"
            }
          },
          {
            "name": "role_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Role Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RolePayloadUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Role",
        "operationId": "delete_role_roles_organizations__org_id___role_id___delete",
        "parameters": [
          {
            "name": "org_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Org Id"
            }
          },
          {
            "name": "role_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Role Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/roles/organizations/{org_id}/{role_id}/assign/{user_id}/": {
      "post": {
        "summary": "Assign Role",
        "description": "Assign a role to a user in one or more contexts. The context is passed as JSON.",
        "operationId": "assign_role_roles_organizations__org_id___role_id__assign__user_id___post",
        "parameters": [
          {
            "name": "role_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Role Id"
            }
          },
          {
            "name": "org_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Org Id"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleAssignmentPayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/roles/organizations/{org_id}/{role_id}/unassign/{user_id}/": {
      "post": {
        "summary": "Unassign Role",
        "description": "Remove a role assignment for a user in a specific context.\nIf context is None, remove all assignments of this role for the user.",
        "operationId": "unassign_role_roles_organizations__org_id___role_id__unassign__user_id___post",
        "parameters": [
          {
            "name": "role_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Role Id"
            }
          },
          {
            "name": "org_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Org Id"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string",
                      "format": "uuid"
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Context"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/roles/organizations/{org_id}/check_access/{user_id}/": {
      "post": {
        "summary": "Api Check Access",
        "description": "Example POST JSON:\n{\n    \"access\": \"project:settings:update\",\n    \"project_id\": \"01ABCDEF2345XYZ\"\n}",
        "operationId": "api_check_access_roles_organizations__org_id__check_access__user_id___post",
        "parameters": [
          {
            "name": "org_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Org Id"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccessCheckRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/roles/organizations/{org_id}/roles/": {
      "get": {
        "summary": "List Roles",
        "description": "List all roles and their access rights within an organization",
        "operationId": "list_roles_roles_organizations__org_id__roles__get",
        "parameters": [
          {
            "name": "org_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Org Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RolePayload"
                  },
                  "title": "Response List Roles Roles Organizations  Org Id  Roles  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/roles/organizations/{org_id}/role-assignments/": {
      "get": {
        "summary": "List Role Assignments",
        "description": "List role-user assignments within an organization.\nOptionally filter by user_id.",
        "operationId": "list_role_assignments_roles_organizations__org_id__role_assignments__get",
        "parameters": [
          {
            "name": "org_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Org Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/roles/access-rights/": {
      "get": {
        "summary": "List Access Rights",
        "description": "List all access rights defined in the system.",
        "operationId": "list_access_rights_roles_access_rights__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "title": "Response List Access Rights Roles Access Rights  Get"
                }
              }
            }
          }
        }
      }
    },
    "/backup/branches/{branch_ref}/schedule": {
      "put": {
        "summary": "Add Or Replace Backup Schedule",
        "operationId": "add_or_replace_backup_schedule_backup_branches__branch_ref__schedule_put",
        "parameters": [
          {
            "name": "branch_ref",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "ulid",
                  "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
                  "minLength": 26,
                  "maxLength": 26,
                  "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
                  "examples": [
                    "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                    "01H945P9C3K2QJ8F7N6M4R2E8V"
                  ],
                  "title": "ULID"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Branch Ref"
            }
          },
          {
            "name": "org_ref",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "ulid",
                  "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
                  "minLength": 26,
                  "maxLength": 26,
                  "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
                  "examples": [
                    "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                    "01H945P9C3K2QJ8F7N6M4R2E8V"
                  ],
                  "title": "ULID"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Org Ref"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SchedulePayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add Or Replace Backup Schedule",
        "operationId": "add_or_replace_backup_schedule_backup_branches__branch_ref__schedule_post",
        "parameters": [
          {
            "name": "branch_ref",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "ulid",
                  "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
                  "minLength": 26,
                  "maxLength": 26,
                  "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
                  "examples": [
                    "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                    "01H945P9C3K2QJ8F7N6M4R2E8V"
                  ],
                  "title": "ULID"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Branch Ref"
            }
          },
          {
            "name": "org_ref",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "ulid",
                  "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
                  "minLength": 26,
                  "maxLength": 26,
                  "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
                  "examples": [
                    "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                    "01H945P9C3K2QJ8F7N6M4R2E8V"
                  ],
                  "title": "ULID"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Org Ref"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SchedulePayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List Schedules",
        "operationId": "list_schedules_backup_branches__branch_ref__schedule_get",
        "parameters": [
          {
            "name": "branch_ref",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "ulid",
                  "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
                  "minLength": 26,
                  "maxLength": 26,
                  "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
                  "examples": [
                    "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                    "01H945P9C3K2QJ8F7N6M4R2E8V"
                  ],
                  "title": "ULID"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Branch Ref"
            }
          },
          {
            "name": "org_ref",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "ulid",
                  "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
                  "minLength": 26,
                  "maxLength": 26,
                  "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
                  "examples": [
                    "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                    "01H945P9C3K2QJ8F7N6M4R2E8V"
                  ],
                  "title": "ULID"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Org Ref"
            }
          },
          {
            "name": "env_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Env Type"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/backup/organizations/{org_ref}/schedule": {
      "put": {
        "summary": "Add Or Replace Backup Schedule",
        "operationId": "add_or_replace_backup_schedule_backup_organizations__org_ref__schedule_put",
        "parameters": [
          {
            "name": "org_ref",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "ulid",
                  "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
                  "minLength": 26,
                  "maxLength": 26,
                  "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
                  "examples": [
                    "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                    "01H945P9C3K2QJ8F7N6M4R2E8V"
                  ],
                  "title": "ULID"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Org Ref"
            }
          },
          {
            "name": "branch_ref",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "ulid",
                  "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
                  "minLength": 26,
                  "maxLength": 26,
                  "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
                  "examples": [
                    "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                    "01H945P9C3K2QJ8F7N6M4R2E8V"
                  ],
                  "title": "ULID"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Branch Ref"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SchedulePayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add Or Replace Backup Schedule",
        "operationId": "add_or_replace_backup_schedule_backup_organizations__org_ref__schedule_post",
        "parameters": [
          {
            "name": "org_ref",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "ulid",
                  "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
                  "minLength": 26,
                  "maxLength": 26,
                  "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
                  "examples": [
                    "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                    "01H945P9C3K2QJ8F7N6M4R2E8V"
                  ],
                  "title": "ULID"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Org Ref"
            }
          },
          {
            "name": "branch_ref",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "ulid",
                  "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
                  "minLength": 26,
                  "maxLength": 26,
                  "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
                  "examples": [
                    "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                    "01H945P9C3K2QJ8F7N6M4R2E8V"
                  ],
                  "title": "ULID"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Branch Ref"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SchedulePayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List Schedules",
        "operationId": "list_schedules_backup_organizations__org_ref__schedule_get",
        "parameters": [
          {
            "name": "org_ref",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "ulid",
                  "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
                  "minLength": 26,
                  "maxLength": 26,
                  "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
                  "examples": [
                    "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                    "01H945P9C3K2QJ8F7N6M4R2E8V"
                  ],
                  "title": "ULID"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Org Ref"
            }
          },
          {
            "name": "branch_ref",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "ulid",
                  "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
                  "minLength": 26,
                  "maxLength": 26,
                  "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
                  "examples": [
                    "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                    "01H945P9C3K2QJ8F7N6M4R2E8V"
                  ],
                  "title": "ULID"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Branch Ref"
            }
          },
          {
            "name": "env_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Env Type"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/backup/branches/{branch_ref}/": {
      "get": {
        "summary": "List Backups",
        "operationId": "list_backups_backup_branches__branch_ref___get",
        "parameters": [
          {
            "name": "branch_ref",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "ulid",
                  "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
                  "minLength": 26,
                  "maxLength": 26,
                  "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
                  "examples": [
                    "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                    "01H945P9C3K2QJ8F7N6M4R2E8V"
                  ],
                  "title": "ULID"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Branch Ref"
            }
          },
          {
            "name": "org_ref",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "ulid",
                  "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
                  "minLength": 26,
                  "maxLength": 26,
                  "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
                  "examples": [
                    "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                    "01H945P9C3K2QJ8F7N6M4R2E8V"
                  ],
                  "title": "ULID"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Org Ref"
            }
          },
          {
            "name": "env_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Env Type"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Manual Backup",
        "operationId": "manual_backup_backup_branches__branch_ref___post",
        "parameters": [
          {
            "name": "branch_ref",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Branch Ref"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/backup/organizations/{org_ref}/": {
      "get": {
        "summary": "List Backups",
        "operationId": "list_backups_backup_organizations__org_ref___get",
        "parameters": [
          {
            "name": "org_ref",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "ulid",
                  "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
                  "minLength": 26,
                  "maxLength": 26,
                  "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
                  "examples": [
                    "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                    "01H945P9C3K2QJ8F7N6M4R2E8V"
                  ],
                  "title": "ULID"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Org Ref"
            }
          },
          {
            "name": "branch_ref",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "ulid",
                  "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
                  "minLength": 26,
                  "maxLength": 26,
                  "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
                  "examples": [
                    "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                    "01H945P9C3K2QJ8F7N6M4R2E8V"
                  ],
                  "title": "ULID"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Branch Ref"
            }
          },
          {
            "name": "env_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Env Type"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/backup/schedule/{schedule_ref}/": {
      "delete": {
        "summary": "Delete Schedule",
        "operationId": "delete_schedule_backup_schedule__schedule_ref___delete",
        "parameters": [
          {
            "name": "schedule_ref",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "ulid",
                  "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
                  "minLength": 26,
                  "maxLength": 26,
                  "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
                  "examples": [
                    "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                    "01H945P9C3K2QJ8F7N6M4R2E8V"
                  ],
                  "title": "ULID"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Schedule Ref"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/backup/{backup_ref}": {
      "delete": {
        "summary": "Delete Backup",
        "operationId": "delete_backup_backup__backup_ref__delete",
        "parameters": [
          {
            "name": "backup_ref",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Backup Ref"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/resources/branches/{branch_id}/provision": {
      "post": {
        "summary": "Provision Branch",
        "operationId": "provision_branch_resources_branches__branch_id__provision_post",
        "parameters": [
          {
            "name": "branch_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Branch Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RessourcesPayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get Branch Provisioning Api",
        "operationId": "get_branch_provisioning_api_resources_branches__branch_id__provision_get",
        "parameters": [
          {
            "name": "branch_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Branch Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/resources/projects/{project_id}/usage": {
      "get": {
        "summary": "Get Project Usage",
        "operationId": "get_project_usage_resources_projects__project_id__usage_get",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Project Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ToFromPayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/resources/organizations/{org_id}/usage": {
      "get": {
        "summary": "Get Org Usage",
        "operationId": "get_org_usage_resources_organizations__org_id__usage_get",
        "parameters": [
          {
            "name": "org_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Org Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ToFromPayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/resources/limits/provisioning/{entity_type}/{entity_id}": {
      "post": {
        "summary": "Set Provisioning Limit",
        "operationId": "set_provisioning_limit_resources_limits_provisioning__entity_type___entity_id__post",
        "parameters": [
          {
            "name": "entity_type",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/EntityType"
            }
          },
          {
            "name": "entity_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Entity Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProvLimitPayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get Provisioning Limits",
        "operationId": "get_provisioning_limits_resources_limits_provisioning__entity_type___entity_id__get",
        "parameters": [
          {
            "name": "entity_type",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/EntityType"
            }
          },
          {
            "name": "entity_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Entity Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/resources/limits/consumption/{entity_type}/{entity_id}": {
      "post": {
        "summary": "Set Consumption Limit",
        "operationId": "set_consumption_limit_resources_limits_consumption__entity_type___entity_id__post",
        "parameters": [
          {
            "name": "entity_type",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/EntityType"
            }
          },
          {
            "name": "entity_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Entity Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConsumptionPayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get Consumption Limits",
        "operationId": "get_consumption_limits_resources_limits_consumption__entity_type___entity_id__get",
        "parameters": [
          {
            "name": "entity_type",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/EntityType"
            }
          },
          {
            "name": "entity_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Entity Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/resources/branches/{branch_id}/limits/": {
      "get": {
        "summary": "Branch Effective Limit",
        "operationId": "branch_effective_limit_resources_branches__branch_id__limits__get",
        "parameters": [
          {
            "name": "branch_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Branch Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/": {
      "get": {
        "tags": [
          "organization"
        ],
        "summary": "Organizations:Detail",
        "operationId": "organizations_detail_organizations__organization_id___get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "organization"
        ],
        "summary": "Organizations:Update",
        "operationId": "organizations_update_organizations__organization_id___put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationUpdate"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful Response",
            "headers": {
              "Location": {
                "description": "URL of the updated item",
                "schema": {
                  "type": "string"
                }
              }
            },
            "links": {
              "detail": {
                "operationId": "organizations:detail",
                "parameters": {
                  "organization_id": "$response.header.Location#regex:/organizations/(.+)/"
                }
              },
              "update": {
                "operationId": "organizations:update",
                "parameters": {
                  "organization_id": "$response.header.Location#regex:/organizations/(.+)/"
                }
              },
              "delete": {
                "operationId": "organizations:delete",
                "parameters": {
                  "organization_id": "$response.header.Location#regex:/organizations/(.+)/"
                }
              },
              "create_project": {
                "operationId": "organizations:projects:create",
                "parameters": {
                  "organization_id": "$response.header.Location#regex:/organizations/(.+)/"
                }
              },
              "list_projects": {
                "operationId": "organizations:projects:list",
                "parameters": {
                  "organization_id": "$response.header.Location#regex:/organizations/(.+)/"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "organization"
        ],
        "summary": "Organizations:Delete",
        "operationId": "organizations_delete_organizations__organization_id___delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/audit": {
      "get": {
        "tags": [
          "organization"
        ],
        "summary": "Organizations:Audits:List",
        "operationId": "organizations_audits_list_organizations__organization_id__audit_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "from",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time",
              "title": "From"
            }
          },
          {
            "name": "to",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time",
              "title": "To"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationAuditLog"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/projects/": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "Organizations:Projects:List",
        "operationId": "organizations_projects_list_organizations__organization_id__projects__get",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectPublic"
                  },
                  "title": "Response Organizations Projects List Organizations  Organization Id  Projects  Get"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "Organizations:Projects:Create",
        "operationId": "organizations_projects_create_organizations__organization_id__projects__post",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "response",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "empty",
                "full"
              ],
              "type": "string",
              "default": "empty",
              "title": "Response"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ProjectPublic"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Response Organizations Projects Create Organizations  Organization Id  Projects  Post"
                }
              }
            },
            "headers": {
              "Location": {
                "description": "URL of the created item",
                "schema": {
                  "type": "string"
                }
              }
            },
            "links": {
              "detail": {
                "operationId": "organizations:projects:detail",
                "parameters": {
                  "project_id": "$response.header.Location#regex:/projects/(.+)/"
                }
              },
              "update": {
                "operationId": "organizations:projects:update",
                "parameters": {
                  "project_id": "$response.header.Location#regex:/projects/(.+)/"
                }
              },
              "delete": {
                "operationId": "organizations:projects:delete",
                "parameters": {
                  "project_id": "$response.header.Location#regex:/projects/(.+)/"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/projects/{project_id}": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "Organizations:Projects:Detail",
        "operationId": "organizations_projects_detail_organizations__organization_id__projects__project_id__get",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Project Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectPublic"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "projects"
        ],
        "summary": "Organizations:Projects:Update",
        "operationId": "organizations_projects_update_organizations__organization_id__projects__project_id__put",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Project Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectUpdate"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful Response",
            "headers": {
              "Location": {
                "description": "URL of the created item",
                "schema": {
                  "type": "string"
                }
              }
            },
            "links": {
              "detail": {
                "operationId": "organizations:projects:detail",
                "parameters": {
                  "project_id": "$response.header.Location#regex:/projects/(.+)/"
                }
              },
              "update": {
                "operationId": "organizations:projects:update",
                "parameters": {
                  "project_id": "$response.header.Location#regex:/projects/(.+)/"
                }
              },
              "delete": {
                "operationId": "organizations:projects:delete",
                "parameters": {
                  "project_id": "$response.header.Location#regex:/projects/(.+)/"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/projects/{project_id}/": {
      "delete": {
        "tags": [
          "projects"
        ],
        "summary": "Organizations:Projects:Delete",
        "operationId": "organizations_projects_delete_organizations__organization_id__projects__project_id___delete",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Project Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/projects/{project_id}/pause": {
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "Organizations:Projects:Pause",
        "operationId": "organizations_projects_pause_organizations__organization_id__projects__project_id__pause_post",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Project Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/projects/{project_id}/resume": {
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "Organizations:Projects:Resume",
        "operationId": "organizations_projects_resume_organizations__organization_id__projects__project_id__resume_post",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Project Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "Organizations:Projects:Branch:List",
        "operationId": "organizations_projects_branch_list_organizations__organization_id__projects__project_id__branches__get",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Project Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BranchPublic"
                  },
                  "title": "Response Organizations Projects Branch List Organizations  Organization Id  Projects  Project Id  Branches  Get"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "Organizations:Projects:Branch:Create",
        "operationId": "organizations_projects_branch_create_organizations__organization_id__projects__project_id__branches__post",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "response",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "empty",
                "full"
              ],
              "type": "string",
              "default": "empty",
              "title": "Response"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BranchCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/BranchPublic"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Response Organizations Projects Branch Create Organizations  Organization Id  Projects  Project Id  Branches  Post"
                }
              }
            },
            "headers": {
              "Location": {
                "description": "URL of the created item",
                "schema": {
                  "type": "string"
                }
              }
            },
            "links": {
              "detail": {
                "operationId": "organizations:projects:branch:detail",
                "parameters": {
                  "project_id": "$response.header.Location#regex:/projects/(.+)/",
                  "branch_id": "$response.header.Location#regex:/branches/(.+)/"
                }
              },
              "update": {
                "operationId": "organizations:projects:branch:update",
                "parameters": {
                  "project_id": "$response.header.Location#regex:/projects/(.+)/",
                  "branch_id": "$response.header.Location#regex:/branches/(.+)/"
                }
              },
              "delete": {
                "operationId": "organizations:projects:branch:delete",
                "parameters": {
                  "project_id": "$response.header.Location#regex:/projects/(.+)/",
                  "branch_id": "$response.header.Location#regex:/branches/(.+)/"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "Organizations:Projects:Branch:Detail",
        "operationId": "organizations_projects_branch_detail_organizations__organization_id__projects__project_id__branches__branch_id__get",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "branch_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Branch Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BranchPublic"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "projects"
        ],
        "summary": "Organizations:Projects:Branch:Update",
        "operationId": "organizations_projects_branch_update_organizations__organization_id__projects__project_id__branches__branch_id__put",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "branch_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Branch Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BranchUpdate"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful Response",
            "headers": {
              "Location": {
                "description": "URL of the created item",
                "schema": {
                  "type": "string"
                }
              }
            },
            "links": {
              "detail": {
                "operationId": "organizations:projects:branch:detail",
                "parameters": {
                  "project_id": "$response.header.Location#regex:/projects/(.+)/",
                  "branch_id": "$response.header.Location#regex:/branches/(.+)/"
                }
              },
              "update": {
                "operationId": "organizations:projects:branch:update",
                "parameters": {
                  "project_id": "$response.header.Location#regex:/projects/(.+)/",
                  "branch_id": "$response.header.Location#regex:/branches/(.+)/"
                }
              },
              "delete": {
                "operationId": "organizations:projects:branch:delete",
                "parameters": {
                  "project_id": "$response.header.Location#regex:/projects/(.+)/",
                  "branch_id": "$response.header.Location#regex:/branches/(.+)/"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "projects"
        ],
        "summary": "Organizations:Projects:Branch:Delete",
        "operationId": "organizations_projects_branch_delete_organizations__organization_id__projects__project_id__branches__branch_id__delete",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "branch_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Branch Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/resize": {
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "Organizations:Projects:Branch:Resize",
        "operationId": "organizations_projects_branch_resize_organizations__organization_id__projects__project_id__branches__branch_id__resize_post",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "branch_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Branch Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResizeParameters"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/stop": {
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "Organizations:Projects:Branch:Stop",
        "operationId": "organizations_projects_branch_stop_organizations__organization_id__projects__project_id__branches__branch_id__stop_post",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "branch_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Branch Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/start": {
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "Organizations:Projects:Branch:Start",
        "operationId": "organizations_projects_branch_start_organizations__organization_id__projects__project_id__branches__branch_id__start_post",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "branch_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Branch Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/resume": {
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "Organizations:Projects:Branch:Resume",
        "operationId": "organizations_projects_branch_resume_organizations__organization_id__projects__project_id__branches__branch_id__resume_post",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "branch_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Branch Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/pause": {
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "Organizations:Projects:Branch:Pause",
        "operationId": "organizations_projects_branch_pause_organizations__organization_id__projects__project_id__branches__branch_id__pause_post",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "branch_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Branch Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AccessCheckRequest": {
        "properties": {
          "access": {
            "type": "string",
            "title": "Access"
          },
          "project_id": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 26,
                "minLength": 26,
                "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
                "format": "ulid",
                "title": "ULID",
                "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
                "examples": [
                  "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                  "01H945P9C3K2QJ8F7N6M4R2E8V"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Project Id"
          },
          "branch_id": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 26,
                "minLength": 26,
                "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
                "format": "ulid",
                "title": "ULID",
                "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
                "examples": [
                  "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                  "01H945P9C3K2QJ8F7N6M4R2E8V"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Branch Id"
          },
          "environment_id": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 26,
                "minLength": 26,
                "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
                "format": "ulid",
                "title": "ULID",
                "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
                "examples": [
                  "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                  "01H945P9C3K2QJ8F7N6M4R2E8V"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Environment Id"
          }
        },
        "type": "object",
        "required": [
          "access"
        ],
        "title": "AccessCheckRequest"
      },
      "Action": {
        "properties": {
          "metadata": {
            "items": {
              "$ref": "#/components/schemas/ActionMetadata"
            },
            "type": "array",
            "title": "Metadata"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "metadata",
          "name"
        ],
        "title": "Action"
      },
      "ActionMetadata": {
        "properties": {
          "method": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Method"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          }
        },
        "type": "object",
        "required": [
          "method",
          "status"
        ],
        "title": "ActionMetadata"
      },
      "Actor": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "type": {
            "anyOf": [
              {
                "type": "string",
                "const": "user"
              },
              {
                "type": "string"
              }
            ],
            "title": "Type"
          },
          "metadata": {
            "items": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "email"
                },
                {
                  "type": "null"
                }
              ]
            },
            "type": "array",
            "title": "Metadata"
          }
        },
        "type": "object",
        "required": [
          "id",
          "type",
          "metadata"
        ],
        "title": "Actor"
      },
      "AuditLog-Input": {
        "properties": {
          "action": {
            "$ref": "#/components/schemas/Action"
          },
          "actor": {
            "$ref": "#/components/schemas/Actor"
          },
          "target": {
            "$ref": "#/components/schemas/Target"
          },
          "occurred_at": {
            "type": "string",
            "format": "date-time",
            "title": "Occurred At"
          }
        },
        "type": "object",
        "required": [
          "action",
          "actor",
          "target",
          "occurred_at"
        ],
        "title": "AuditLog"
      },
      "AuditLog-Output": {
        "properties": {
          "action": {
            "$ref": "#/components/schemas/Action"
          },
          "actor": {
            "$ref": "#/components/schemas/Actor"
          },
          "target": {
            "$ref": "#/components/schemas/Target"
          },
          "occurred_at": {
            "type": "string",
            "format": "date-time",
            "title": "Occurred At"
          }
        },
        "type": "object",
        "required": [
          "action",
          "actor",
          "target",
          "occurred_at"
        ],
        "title": "AuditLog"
      },
      "BranchApiKeys": {
        "properties": {
          "anon": {
            "type": "string",
            "title": "Anon"
          },
          "service_role": {
            "type": "string",
            "title": "Service Role"
          }
        },
        "type": "object",
        "required": [
          "anon",
          "service_role"
        ],
        "title": "BranchApiKeys"
      },
      "BranchCreate": {
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "pattern": "^[^\\x00]*$",
            "title": "Name"
          },
          "source": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "format": "ulid",
            "title": "ULID",
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ]
          },
          "env_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Env Type"
          },
          "config_copy": {
            "type": "boolean",
            "title": "Config Copy",
            "default": false
          },
          "data_copy": {
            "type": "boolean",
            "title": "Data Copy",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "name",
          "source"
        ],
        "title": "BranchCreate"
      },
      "BranchPublic": {
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "format": "ulid",
            "title": "ULID",
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ]
          },
          "name": {
            "type": "string",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$",
            "title": "Name"
          },
          "env_type": {
            "type": "string",
            "title": "Env Type"
          },
          "project_id": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "format": "ulid",
            "title": "ULID",
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ]
          },
          "organization_id": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "format": "ulid",
            "title": "ULID",
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ]
          },
          "database": {
            "$ref": "#/components/schemas/DatabaseInformation"
          },
          "max_resources": {
            "$ref": "#/components/schemas/ResourcesDefinition"
          },
          "assigned_labels": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Assigned Labels"
          },
          "api_keys": {
            "$ref": "#/components/schemas/BranchApiKeys"
          },
          "status": {
            "$ref": "#/components/schemas/BranchStatus"
          },
          "ptir_enabled": {
            "type": "boolean",
            "title": "Ptir Enabled"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "env_type",
          "project_id",
          "organization_id",
          "database",
          "max_resources",
          "assigned_labels",
          "api_keys",
          "status",
          "ptir_enabled",
          "created_at",
          "created_by"
        ],
        "title": "BranchPublic"
      },
      "BranchStatus": {
        "properties": {
          "database": {
            "type": "string",
            "enum": [
              "ACTIVE_HEALTHY",
              "STOPPED",
              "STARTING",
              "ACTIVE_UNHEALTHY",
              "CREATING",
              "DELETING",
              "UPDATING",
              "RESTARTING",
              "STOPPING",
              "UNKNOWN"
            ],
            "title": "Database"
          },
          "storage": {
            "type": "string",
            "enum": [
              "ACTIVE_HEALTHY",
              "STOPPED",
              "STARTING",
              "ACTIVE_UNHEALTHY",
              "CREATING",
              "DELETING",
              "UPDATING",
              "RESTARTING",
              "STOPPING",
              "UNKNOWN"
            ],
            "title": "Storage"
          },
          "realtime": {
            "type": "string",
            "enum": [
              "ACTIVE_HEALTHY",
              "STOPPED",
              "STARTING",
              "ACTIVE_UNHEALTHY",
              "CREATING",
              "DELETING",
              "UPDATING",
              "RESTARTING",
              "STOPPING",
              "UNKNOWN"
            ],
            "title": "Realtime"
          }
        },
        "type": "object",
        "required": [
          "database",
          "storage",
          "realtime"
        ],
        "title": "BranchStatus"
      },
      "BranchUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "pattern": "^[^\\x00]*$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "env_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Env Type"
          }
        },
        "type": "object",
        "title": "BranchUpdate"
      },
      "ConsumptionPayload": {
        "properties": {
          "resource": {
            "$ref": "#/components/schemas/ResourceType"
          },
          "max_total_minutes": {
            "type": "integer",
            "title": "Max Total Minutes"
          }
        },
        "type": "object",
        "required": [
          "resource",
          "max_total_minutes"
        ],
        "title": "ConsumptionPayload"
      },
      "DatabaseInformation": {
        "properties": {
          "host": {
            "type": "string",
            "title": "Host"
          },
          "port": {
            "type": "integer",
            "title": "Port"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "encrypted_connection_string": {
            "type": "string",
            "title": "Encrypted Connection String"
          },
          "service_endpoint_uri": {
            "type": "string",
            "title": "Service Endpoint Uri"
          },
          "version": {
            "type": "string",
            "title": "Version"
          },
          "has_replicas": {
            "type": "boolean",
            "title": "Has Replicas"
          }
        },
        "type": "object",
        "required": [
          "host",
          "port",
          "username",
          "name",
          "encrypted_connection_string",
          "service_endpoint_uri",
          "version",
          "has_replicas"
        ],
        "title": "DatabaseInformation"
      },
      "DeploymentParameters": {
        "properties": {
          "database": {
            "type": "string",
            "pattern": "^[^\\x00]*$",
            "title": "Database"
          },
          "database_user": {
            "type": "string",
            "pattern": "^[^\\x00]*$",
            "title": "Database User"
          },
          "database_password": {
            "type": "string",
            "pattern": "^[^\\x00]*$",
            "title": "Database Password"
          },
          "database_size": {
            "type": "integer",
            "multipleOf": 1073741824.0,
            "maximum": 9.223372036854776e+18,
            "exclusiveMinimum": 0.0,
            "title": "Database Size"
          },
          "vcpu": {
            "type": "integer",
            "maximum": 2147483647.0,
            "exclusiveMinimum": 0.0,
            "title": "Vcpu"
          },
          "memory": {
            "type": "integer",
            "multipleOf": 1073741824.0,
            "maximum": 9.223372036854776e+18,
            "exclusiveMinimum": 0.0,
            "title": "Memory"
          },
          "iops": {
            "type": "integer",
            "maximum": 2147483647.0,
            "minimum": 100.0,
            "title": "Iops"
          },
          "database_image_tag": {
            "type": "string",
            "const": "15.1.0.147",
            "title": "Database Image Tag"
          }
        },
        "type": "object",
        "required": [
          "database",
          "database_user",
          "database_password",
          "database_size",
          "vcpu",
          "memory",
          "iops",
          "database_image_tag"
        ],
        "title": "DeploymentParameters"
      },
      "EntityType": {
        "type": "string",
        "enum": [
          "org",
          "org_env",
          "project"
        ],
        "title": "EntityType"
      },
      "HTTPError": {
        "properties": {
          "detail": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "additionalProperties": true,
                "type": "object"
              }
            ],
            "title": "Detail"
          }
        },
        "type": "object",
        "required": [
          "detail"
        ],
        "title": "HTTPError"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "Organization": {
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "format": "ulid",
            "title": "ULID",
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ]
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "pattern": "^[^\\x00]*$",
            "title": "Name"
          },
          "locked": {
            "type": "boolean",
            "title": "Locked",
            "default": false
          },
          "max_backups": {
            "type": "integer",
            "title": "Max Backups"
          },
          "require_mfa": {
            "type": "boolean",
            "title": "Require Mfa",
            "default": false
          },
          "envs": {
            "type": "string",
            "title": "Envs"
          }
        },
        "type": "object",
        "required": [
          "name",
          "max_backups",
          "envs"
        ],
        "title": "Organization"
      },
      "OrganizationAuditLog": {
        "properties": {
          "result": {
            "items": {
              "$ref": "#/components/schemas/AuditLog-Output"
            },
            "type": "array",
            "title": "Result"
          },
          "retention_period": {
            "type": "integer",
            "title": "Retention Period"
          }
        },
        "type": "object",
        "required": [
          "result",
          "retention_period"
        ],
        "title": "OrganizationAuditLog"
      },
      "OrganizationCreate": {
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "pattern": "^[^\\x00]*$",
            "title": "Name"
          },
          "locked": {
            "type": "boolean",
            "title": "Locked",
            "default": false
          },
          "require_mfa": {
            "type": "boolean",
            "title": "Require Mfa",
            "default": false
          },
          "max_backups": {
            "type": "integer",
            "title": "Max Backups"
          },
          "envs": {
            "type": "string",
            "title": "Envs"
          }
        },
        "type": "object",
        "required": [
          "name",
          "max_backups",
          "envs"
        ],
        "title": "OrganizationCreate"
      },
      "OrganizationUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "pattern": "^[^\\x00]*$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "locked": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Locked"
          },
          "require_mfa": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Require Mfa"
          },
          "max_backups": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Backups"
          },
          "envs": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Envs"
          }
        },
        "type": "object",
        "title": "OrganizationUpdate"
      },
      "ProjectCreate": {
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "pattern": "^[^\\x00]*$",
            "title": "Name"
          },
          "max_backups": {
            "type": "integer",
            "title": "Max Backups"
          },
          "env_type": {
            "type": "string",
            "title": "Env Type"
          },
          "deployment": {
            "$ref": "#/components/schemas/DeploymentParameters"
          }
        },
        "type": "object",
        "required": [
          "name",
          "max_backups",
          "env_type",
          "deployment"
        ],
        "title": "ProjectCreate"
      },
      "ProjectPublic": {
        "properties": {
          "organization_id": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "format": "ulid",
            "title": "ULID",
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ]
          },
          "id": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "format": "ulid",
            "title": "ULID",
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ]
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "pattern": "^[^\\x00]*$",
            "title": "Name"
          },
          "max_backups": {
            "type": "integer",
            "title": "Max Backups"
          },
          "branch_status": {
            "additionalProperties": {
              "type": "string",
              "enum": [
                "ACTIVE_HEALTHY",
                "ACTIVE_UNHEALTHY",
                "COMING_UP",
                "INACTIVE",
                "UNKNOWN"
              ]
            },
            "type": "object",
            "title": "Branch Status"
          }
        },
        "type": "object",
        "required": [
          "organization_id",
          "id",
          "name",
          "max_backups",
          "branch_status"
        ],
        "title": "ProjectPublic"
      },
      "ProjectUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "pattern": "^[^\\x00]*$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "max_backups": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Backups"
          }
        },
        "type": "object",
        "title": "ProjectUpdate"
      },
      "ProvLimitPayload": {
        "properties": {
          "resource": {
            "$ref": "#/components/schemas/ResourceType"
          },
          "max_total": {
            "type": "integer",
            "title": "Max Total"
          },
          "max_per_branch": {
            "type": "integer",
            "title": "Max Per Branch"
          }
        },
        "type": "object",
        "required": [
          "resource",
          "max_total",
          "max_per_branch"
        ],
        "title": "ProvLimitPayload"
      },
      "ResizeParameters": {
        "properties": {
          "database_size": {
            "anyOf": [
              {
                "type": "integer",
                "multipleOf": 1073741824.0,
                "exclusiveMinimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Database Size"
          }
        },
        "type": "object",
        "title": "ResizeParameters"
      },
      "ResourceType": {
        "type": "string",
        "enum": [
          "milli_vcpu",
          "ram",
          "iops",
          "storage_size",
          "database_size"
        ],
        "title": "ResourceType"
      },
      "ResourcesDefinition": {
        "properties": {
          "vcpu": {
            "type": "integer",
            "maximum": 2147483647.0,
            "minimum": 1.0,
            "title": "Vcpu",
            "description": "Number of virtual CPUs provisioned (matches Branch.vcpu constraints)."
          },
          "ram_bytes": {
            "type": "integer",
            "multipleOf": 1024.0,
            "minimum": 1024.0,
            "title": "Ram Bytes",
            "description": "Guest memory expressed in bytes (mirrors Branch.memory)."
          },
          "nvme_bytes": {
            "type": "integer",
            "minimum": 1073741824.0,
            "title": "Nvme Bytes",
            "description": "Provisioned NVMe volume capacity in bytes (derived from Branch.database_size)."
          },
          "iops": {
            "type": "integer",
            "maximum": 2147483647.0,
            "minimum": 100.0,
            "title": "Iops",
            "description": "Configured storage IOPS budget (matches Branch.iops constraints)."
          },
          "storage_bytes": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1073741824.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Storage Bytes",
            "description": "Database storage capacity in bytes (mirrors Branch.database_size)."
          }
        },
        "type": "object",
        "required": [
          "vcpu",
          "ram_bytes",
          "nvme_bytes",
          "iops"
        ],
        "title": "ResourcesDefinition"
      },
      "RessourcesPayload": {
        "properties": {
          "ressources": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Ressources"
          }
        },
        "type": "object",
        "required": [
          "ressources"
        ],
        "title": "RessourcesPayload"
      },
      "RoleAssignmentPayload": {
        "properties": {
          "project_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "maxLength": 26,
                  "minLength": 26,
                  "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
                  "format": "ulid",
                  "title": "ULID",
                  "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
                  "examples": [
                    "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                    "01H945P9C3K2QJ8F7N6M4R2E8V"
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Project Ids"
          },
          "branch_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "maxLength": 26,
                  "minLength": 26,
                  "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
                  "format": "ulid",
                  "title": "ULID",
                  "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
                  "examples": [
                    "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                    "01H945P9C3K2QJ8F7N6M4R2E8V"
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Branch Ids"
          },
          "environment_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Environment Ids"
          }
        },
        "type": "object",
        "title": "RoleAssignmentPayload"
      },
      "RolePayload": {
        "properties": {
          "role_id": {
            "type": "string",
            "title": "Role Id"
          },
          "role_type": {
            "type": "string",
            "title": "Role Type"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "access_rights": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Access Rights",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "role_id",
          "role_type"
        ],
        "title": "RolePayload"
      },
      "RolePayloadUpdate": {
        "properties": {
          "role_type": {
            "type": "string",
            "title": "Role Type"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "access_rights": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Access Rights",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "role_type"
        ],
        "title": "RolePayloadUpdate"
      },
      "SchedulePayload": {
        "properties": {
          "rows": {
            "items": {
              "$ref": "#/components/schemas/ScheduleRow"
            },
            "type": "array",
            "title": "Rows"
          },
          "env_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Env Type"
          }
        },
        "type": "object",
        "required": [
          "rows"
        ],
        "title": "SchedulePayload"
      },
      "ScheduleRow": {
        "properties": {
          "row_index": {
            "type": "integer",
            "title": "Row Index"
          },
          "interval": {
            "type": "integer",
            "title": "Interval"
          },
          "unit": {
            "type": "string",
            "title": "Unit"
          },
          "retention": {
            "type": "integer",
            "title": "Retention"
          }
        },
        "type": "object",
        "required": [
          "row_index",
          "interval",
          "unit",
          "retention"
        ],
        "title": "ScheduleRow"
      },
      "Target": {
        "properties": {
          "description": {
            "type": "string",
            "title": "Description"
          },
          "metadata": {
            "items": {
              "$ref": "#/components/schemas/TargetMetadata"
            },
            "type": "array",
            "title": "Metadata"
          }
        },
        "type": "object",
        "required": [
          "description",
          "metadata"
        ],
        "title": "Target"
      },
      "TargetMetadata": {
        "properties": {
          "organization": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50,
                "minLength": 1,
                "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization"
          },
          "project": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50,
                "minLength": 1,
                "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Project"
          }
        },
        "type": "object",
        "required": [
          "organization",
          "project"
        ],
        "title": "TargetMetadata"
      },
      "ToFromPayload": {
        "properties": {
          "cycle_start": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cycle Start"
          },
          "cycle_end": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cycle End"
          }
        },
        "type": "object",
        "title": "ToFromPayload"
      },
      "UserCreationResult": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "id",
          "password"
        ],
        "title": "UserCreationResult"
      },
      "UserParameters": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "first_name": {
            "type": "string",
            "title": "First Name"
          },
          "last_name": {
            "type": "string",
            "title": "Last Name"
          }
        },
        "type": "object",
        "required": [
          "email",
          "first_name",
          "last_name"
        ],
        "title": "UserParameters"
      },
      "UserPublic": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "email_verified": {
            "type": "boolean",
            "title": "Email Verified"
          },
          "first_name": {
            "type": "string",
            "title": "First Name"
          },
          "last_name": {
            "type": "string",
            "title": "Last Name"
          }
        },
        "type": "object",
        "required": [
          "id",
          "email",
          "email_verified",
          "first_name",
          "last_name"
        ],
        "title": "UserPublic"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "tags": [
    {
      "name": "user"
    },
    {
      "name": "organization"
    },
    {
      "name": "role",
      "parent": "organization"
    },
    {
      "name": "project",
      "parent": "organization"
    },
    {
      "name": "branch",
      "parent": "project"
    }
  ]
}