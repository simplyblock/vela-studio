{
  "openapi": "3.1.0",
  "info": {
    "title": "FastAPI",
    "version": "0.1.0"
  },
  "servers": [
    {
      "url": "/vela"
    }
  ],
  "paths": {
    "/health": {
      "get": {
        "summary": "Health",
        "operationId": "health",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/": {
      "get": {
        "summary": "Organizations:List",
        "operationId": "organizations:list",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Organization"
                  },
                  "title": "Response Organizations List Organizations  Get"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Organizations:Create",
        "operationId": "organizations:create",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "response",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "empty",
                "full"
              ],
              "type": "string",
              "default": "empty",
              "title": "Response"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/Organization"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Response Organizations Create Organizations  Post"
                }
              }
            },
            "headers": {
              "Location": {
                "description": "URL of the created item",
                "schema": {
                  "type": "string"
                }
              }
            },
            "links": {
              "detail": {
                "operationId": "organizations:detail",
                "parameters": {
                  "organization_id": "$response.header.Location#regex:/organizations/(.+)/"
                }
              },
              "update": {
                "operationId": "organizations:update",
                "parameters": {
                  "organization_id": "$response.header.Location#regex:/organizations/(.+)/"
                }
              },
              "delete": {
                "operationId": "organizations:delete",
                "parameters": {
                  "organization_id": "$response.header.Location#regex:/organizations/(.+)/"
                }
              },
              "create_project": {
                "operationId": "organizations:projects:create",
                "parameters": {
                  "organization_id": "$response.header.Location#regex:/organizations/(.+)/"
                }
              },
              "list_projects": {
                "operationId": "organizations:projects:list",
                "parameters": {
                  "organization_id": "$response.header.Location#regex:/organizations/(.+)/"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/": {
      "get": {
        "summary": "Organizations:Detail",
        "operationId": "organizations:detail",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organization"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Organizations:Update",
        "operationId": "organizations:update",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationUpdate"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful Response",
            "headers": {
              "Location": {
                "description": "URL of the created item",
                "schema": {
                  "type": "string"
                }
              }
            },
            "links": {
              "detail": {
                "operationId": "organizations:detail",
                "parameters": {
                  "organization_id": "$response.header.Location#regex:/organizations/(.+)/"
                }
              },
              "update": {
                "operationId": "organizations:update",
                "parameters": {
                  "organization_id": "$response.header.Location#regex:/organizations/(.+)/"
                }
              },
              "delete": {
                "operationId": "organizations:delete",
                "parameters": {
                  "organization_id": "$response.header.Location#regex:/organizations/(.+)/"
                }
              },
              "create_project": {
                "operationId": "organizations:projects:create",
                "parameters": {
                  "organization_id": "$response.header.Location#regex:/organizations/(.+)/"
                }
              },
              "list_projects": {
                "operationId": "organizations:projects:list",
                "parameters": {
                  "organization_id": "$response.header.Location#regex:/organizations/(.+)/"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Organizations:Delete",
        "operationId": "organizations:delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/audit": {
      "get": {
        "summary": "Organizations:Audits:List",
        "operationId": "organizations:audits:list",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "from",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time",
              "title": "From"
            }
          },
          {
            "name": "to",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time",
              "title": "To"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationAuditLog"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/projects/": {
      "get": {
        "summary": "Organizations:Projects:List",
        "operationId": "organizations:projects:list",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectPublic"
                  },
                  "title": "Response Organizations Projects List Organizations  Organization Id  Projects  Get"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Organizations:Projects:Create",
        "operationId": "organizations:projects:create",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "response",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "empty",
                "full"
              ],
              "type": "string",
              "default": "empty",
              "title": "Response"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ProjectPublic"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Response Organizations Projects Create Organizations  Organization Id  Projects  Post"
                }
              }
            },
            "headers": {
              "Location": {
                "description": "URL of the created item",
                "schema": {
                  "type": "string"
                }
              }
            },
            "links": {
              "detail": {
                "operationId": "organizations:projects:detail",
                "parameters": {
                  "project_id": "$response.header.Location#regex:/projects/(.+)/"
                }
              },
              "update": {
                "operationId": "organizations:projects:update",
                "parameters": {
                  "project_id": "$response.header.Location#regex:/projects/(.+)/"
                }
              },
              "delete": {
                "operationId": "organizations:projects:delete",
                "parameters": {
                  "project_id": "$response.header.Location#regex:/projects/(.+)/"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/": {
      "get": {
        "summary": "Organizations:Projects:Branch:List",
        "operationId": "organizations:projects:branch:list",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Project Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BranchPublic"
                  },
                  "title": "Response Organizations Projects Branch List Organizations  Organization Id  Projects  Project Id  Branches  Get"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Organizations:Projects:Branch:Create",
        "operationId": "organizations:projects:branch:create",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "response",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "empty",
                "full"
              ],
              "type": "string",
              "default": "empty",
              "title": "Response"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BranchCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/BranchPublic"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Response Organizations Projects Branch Create Organizations  Organization Id  Projects  Project Id  Branches  Post"
                }
              }
            },
            "headers": {
              "Location": {
                "description": "URL of the created item",
                "schema": {
                  "type": "string"
                }
              }
            },
            "links": {
              "detail": {
                "operationId": "organizations:projects:branch:detail",
                "parameters": {
                  "project_id": "$response.header.Location#regex:/projects/(.+)/",
                  "branch_id": "$response.header.Location#regex:/branches/(.+)/"
                }
              },
              "update": {
                "operationId": "organizations:projects:branch:update",
                "parameters": {
                  "project_id": "$response.header.Location#regex:/projects/(.+)/",
                  "branch_id": "$response.header.Location#regex:/branches/(.+)/"
                }
              },
              "delete": {
                "operationId": "organizations:projects:branch:delete",
                "parameters": {
                  "project_id": "$response.header.Location#regex:/projects/(.+)/",
                  "branch_id": "$response.header.Location#regex:/branches/(.+)/"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/": {
      "get": {
        "summary": "Organizations:Projects:Branch:Detail",
        "operationId": "organizations:projects:branch:detail",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "branch_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Branch Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BranchPublic"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Organizations:Projects:Branch:Update",
        "operationId": "organizations:projects:branch:update",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "branch_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Branch Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BranchUpdate"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful Response",
            "headers": {
              "Location": {
                "description": "URL of the created item",
                "schema": {
                  "type": "string"
                }
              }
            },
            "links": {
              "detail": {
                "operationId": "organizations:projects:branch:detail",
                "parameters": {
                  "project_id": "$response.header.Location#regex:/projects/(.+)/",
                  "branch_id": "$response.header.Location#regex:/branches/(.+)/"
                }
              },
              "update": {
                "operationId": "organizations:projects:branch:update",
                "parameters": {
                  "project_id": "$response.header.Location#regex:/projects/(.+)/",
                  "branch_id": "$response.header.Location#regex:/branches/(.+)/"
                }
              },
              "delete": {
                "operationId": "organizations:projects:branch:delete",
                "parameters": {
                  "project_id": "$response.header.Location#regex:/projects/(.+)/",
                  "branch_id": "$response.header.Location#regex:/branches/(.+)/"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Organizations:Projects:Branch:Delete",
        "operationId": "organizations:projects:branch:delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "branch_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Branch Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/resize": {
      "post": {
        "summary": "Organizations:Projects:Branch:Resize",
        "operationId": "organizations:projects:branch:resize",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "branch_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Branch Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResizeParameters"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/stop": {
      "post": {
        "summary": "Organizations:Projects:Branch:Stop",
        "operationId": "organizations:projects:branch:stop",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "branch_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Branch Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/start": {
      "post": {
        "summary": "Organizations:Projects:Branch:Start",
        "operationId": "organizations:projects:branch:start",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "branch_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Branch Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/resume": {
      "post": {
        "summary": "Organizations:Projects:Branch:Resume",
        "operationId": "organizations:projects:branch:resume",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "branch_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Branch Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/pause": {
      "post": {
        "summary": "Organizations:Projects:Branch:Pause",
        "operationId": "organizations:projects:branch:pause",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "branch_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Branch Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/projects/{project_id}/": {
      "get": {
        "summary": "Organizations:Projects:Detail",
        "operationId": "organizations:projects:detail",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Project Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectPublic"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Organizations:Projects:Update",
        "operationId": "organizations:projects:update",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Project Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectUpdate"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful Response",
            "headers": {
              "Location": {
                "description": "URL of the created item",
                "schema": {
                  "type": "string"
                }
              }
            },
            "links": {
              "detail": {
                "operationId": "organizations:projects:detail",
                "parameters": {
                  "project_id": "$response.header.Location#regex:/projects/(.+)/"
                }
              },
              "update": {
                "operationId": "organizations:projects:update",
                "parameters": {
                  "project_id": "$response.header.Location#regex:/projects/(.+)/"
                }
              },
              "delete": {
                "operationId": "organizations:projects:delete",
                "parameters": {
                  "project_id": "$response.header.Location#regex:/projects/(.+)/"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Organizations:Projects:Delete",
        "operationId": "organizations:projects:delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Project Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/projects/{project_id}/suspend": {
      "post": {
        "summary": "Organizations:Projects:Suspend",
        "operationId": "organizations:projects:suspend",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Project Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/projects/{project_id}/resume": {
      "post": {
        "summary": "Organizations:Projects:Resume",
        "operationId": "organizations:projects:resume",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Project Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/members/": {
      "get": {
        "summary": "Organizations:Members:List",
        "operationId": "organizations:members:list",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "response",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "shallow",
                "deep"
              ],
              "type": "string",
              "default": "shallow",
              "title": "Response"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string",
                        "format": "uuid"
                      },
                      {
                        "$ref": "#/components/schemas/UserPublic"
                      }
                    ]
                  },
                  "title": "Response Organizations Members List Organizations  Organization Id  Members  Get"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Organizations:Members:Add",
        "operationId": "organizations:members:add",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserID"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "headers": {
              "Location": {
                "description": "URL of the created item",
                "schema": {
                  "type": "string"
                }
              }
            },
            "links": {
              "update": {
                "operationId": "organizations:members:update",
                "parameters": {
                  "user_id": "$request.body#/id"
                }
              },
              "delete": {
                "operationId": "organizations:members:remove",
                "parameters": {
                  "user_id": "$request.body#/id"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/members/{user_id}": {
      "put": {
        "summary": "Organizations:Members:Update",
        "operationId": "organizations:members:update",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Organizations:Members:Remove",
        "operationId": "organizations:members:remove",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/roles/": {
      "get": {
        "summary": "Organizations:Roles:List",
        "operationId": "organizations:roles:list",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Role"
                  },
                  "title": "Response Organizations Roles List Organizations  Organization Id  Roles  Get"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Organizations:Roles:Create",
        "operationId": "organizations:roles:create",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "response",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "empty",
                "full"
              ],
              "type": "string",
              "default": "empty",
              "title": "Response"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/Role"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Response Organizations Roles Create Organizations  Organization Id  Roles  Post"
                }
              }
            },
            "headers": {
              "Location": {
                "description": "URL of the created item",
                "schema": {
                  "type": "string"
                }
              }
            },
            "links": {
              "detail": {
                "operationId": "organizations:roles:detail",
                "parameters": {
                  "role_id": "$response.header.Location#regex:/roles/(.+)/"
                }
              },
              "update": {
                "operationId": "organizations:roles:update",
                "parameters": {
                  "role_id": "$response.header.Location#regex:/roles/(.+)/"
                }
              },
              "delete": {
                "operationId": "organizations:roles:delete",
                "parameters": {
                  "role_id": "$response.header.Location#regex:/roles/(.+)/"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/roles/{role_id}/": {
      "get": {
        "summary": "Organizations:Roles:Detail",
        "operationId": "organizations:roles:detail",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "role_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Role Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Organizations:Roles:Update",
        "operationId": "organizations:roles:update",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "role_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Role Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Organizations:Roles:Delete",
        "operationId": "organizations:roles:delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "role_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Role Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/roles/{role_id}/users/": {
      "get": {
        "summary": "Organizations:Roles:Users:List",
        "operationId": "organizations:roles:users:list",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "role_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Role Id"
            }
          },
          {
            "name": "response",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "shallow",
                "deep"
              ],
              "type": "string",
              "default": "shallow",
              "title": "Response"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string",
                        "format": "uuid"
                      },
                      {
                        "$ref": "#/components/schemas/UserPublic"
                      }
                    ]
                  },
                  "title": "Response Organizations Roles Users List Organizations  Organization Id  Roles  Role Id  Users  Get"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Organizations:Roles:Users:Add",
        "operationId": "organizations:roles:users:add",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "role_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Role Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/roles/{role_id}/users/{user_id}/": {
      "delete": {
        "summary": "Organizations:Roles:Users:Delete",
        "operationId": "organizations:roles:users:delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "role_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Role Id"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          },
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_ref}/": {
      "get": {
        "summary": "Get",
        "operationId": "get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_ref",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string",
                  "format": "email"
                }
              ],
              "title": "User Ref"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPublic"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/users/": {
      "post": {
        "summary": "Add",
        "operationId": "add",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserParameters"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "prefixItems": [
                    {
                      "$ref": "#/components/schemas/UserCreationResult"
                    },
                    {
                      "type": "integer"
                    }
                  ],
                  "type": "array",
                  "maxItems": 2,
                  "minItems": 2,
                  "title": "Response Add Users  Post"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Action": {
        "properties": {
          "metadata": {
            "items": {
              "$ref": "#/components/schemas/ActionMetadata"
            },
            "type": "array",
            "title": "Metadata"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "metadata",
          "name"
        ],
        "title": "Action"
      },
      "ActionMetadata": {
        "properties": {
          "method": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Method"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          }
        },
        "type": "object",
        "required": [
          "method",
          "status"
        ],
        "title": "ActionMetadata"
      },
      "Actor": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "type": {
            "anyOf": [
              {
                "type": "string",
                "const": "user"
              },
              {
                "type": "string"
              }
            ],
            "title": "Type"
          },
          "metadata": {
            "items": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "email"
                },
                {
                  "type": "null"
                }
              ]
            },
            "type": "array",
            "title": "Metadata"
          }
        },
        "type": "object",
        "required": [
          "id",
          "type",
          "metadata"
        ],
        "title": "Actor"
      },
      "AuditLog": {
        "properties": {
          "action": {
            "$ref": "#/components/schemas/Action"
          },
          "actor": {
            "$ref": "#/components/schemas/Actor"
          },
          "target": {
            "$ref": "#/components/schemas/Target"
          },
          "occurred_at": {
            "type": "string",
            "format": "date-time",
            "title": "Occurred At"
          }
        },
        "type": "object",
        "required": [
          "action",
          "actor",
          "target",
          "occurred_at"
        ],
        "title": "AuditLog"
      },
      "BranchApiKeys": {
        "properties": {
          "anon": {
            "type": "string",
            "title": "Anon"
          },
          "service_role": {
            "type": "string",
            "title": "Service Role"
          }
        },
        "type": "object",
        "required": [
          "anon",
          "service_role"
        ],
        "title": "BranchApiKeys"
      },
      "BranchCreate": {
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "pattern": "^[^\\x00]*$",
            "title": "Name"
          },
          "source": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "format": "ulid",
            "title": "ULID",
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ]
          },
          "config_copy": {
            "type": "boolean",
            "title": "Config Copy",
            "default": false
          },
          "data_copy": {
            "type": "boolean",
            "title": "Data Copy",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "name",
          "source"
        ],
        "title": "BranchCreate"
      },
      "BranchPublic": {
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "format": "ulid",
            "title": "ULID",
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ]
          },
          "name": {
            "type": "string",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$",
            "title": "Name"
          },
          "project_id": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "format": "ulid",
            "title": "ULID",
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ]
          },
          "organization_id": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "format": "ulid",
            "title": "ULID",
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ]
          },
          "database": {
            "$ref": "#/components/schemas/DatabaseInformation"
          },
          "max_resources": {
            "$ref": "#/components/schemas/ResourcesDefinition"
          },
          "assigned_labels": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Assigned Labels"
          },
          "used_resources": {
            "$ref": "#/components/schemas/ResourceUsageDefinition"
          },
          "api_keys": {
            "$ref": "#/components/schemas/BranchApiKeys"
          },
          "service_health": {
            "$ref": "#/components/schemas/BranchStatus"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "ptir_enabled": {
            "type": "boolean",
            "title": "Ptir Enabled"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "project_id",
          "organization_id",
          "database",
          "max_resources",
          "assigned_labels",
          "used_resources",
          "api_keys",
          "service_health",
          "status",
          "ptir_enabled",
          "created_at",
          "created_by"
        ],
        "title": "BranchPublic"
      },
      "BranchStatus": {
        "properties": {
          "database": {
            "type": "string",
            "enum": [
              "ACTIVE_HEALTHY",
              "STOPPED",
              "STARTING",
              "ACTIVE_UNHEALTHY",
              "CREATING",
              "DELETING",
              "UPDATING",
              "RESTARTING",
              "STOPPING",
              "UNKNOWN"
            ],
            "title": "Database"
          },
          "storage": {
            "type": "string",
            "enum": [
              "ACTIVE_HEALTHY",
              "STOPPED",
              "STARTING",
              "ACTIVE_UNHEALTHY",
              "CREATING",
              "DELETING",
              "UPDATING",
              "RESTARTING",
              "STOPPING",
              "UNKNOWN"
            ],
            "title": "Storage"
          },
          "realtime": {
            "type": "string",
            "enum": [
              "ACTIVE_HEALTHY",
              "STOPPED",
              "STARTING",
              "ACTIVE_UNHEALTHY",
              "CREATING",
              "DELETING",
              "UPDATING",
              "RESTARTING",
              "STOPPING",
              "UNKNOWN"
            ],
            "title": "Realtime"
          },
          "meta": {
            "type": "string",
            "enum": [
              "ACTIVE_HEALTHY",
              "STOPPED",
              "STARTING",
              "ACTIVE_UNHEALTHY",
              "CREATING",
              "DELETING",
              "UPDATING",
              "RESTARTING",
              "STOPPING",
              "UNKNOWN"
            ],
            "title": "Meta"
          },
          "rest": {
            "type": "string",
            "enum": [
              "ACTIVE_HEALTHY",
              "STOPPED",
              "STARTING",
              "ACTIVE_UNHEALTHY",
              "CREATING",
              "DELETING",
              "UPDATING",
              "RESTARTING",
              "STOPPING",
              "UNKNOWN"
            ],
            "title": "Rest"
          }
        },
        "type": "object",
        "required": [
          "database",
          "storage",
          "realtime",
          "meta",
          "rest"
        ],
        "title": "BranchStatus"
      },
      "BranchUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "pattern": "^[^\\x00]*$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          }
        },
        "type": "object",
        "title": "BranchUpdate"
      },
      "DatabaseInformation": {
        "properties": {
          "host": {
            "type": "string",
            "title": "Host"
          },
          "port": {
            "type": "integer",
            "title": "Port"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "encrypted_connection_string": {
            "type": "string",
            "title": "Encrypted Connection String"
          },
          "service_endpoint_uri": {
            "type": "string",
            "title": "Service Endpoint Uri"
          },
          "version": {
            "type": "string",
            "title": "Version"
          },
          "has_replicas": {
            "type": "boolean",
            "title": "Has Replicas"
          }
        },
        "type": "object",
        "required": [
          "host",
          "port",
          "username",
          "name",
          "encrypted_connection_string",
          "service_endpoint_uri",
          "version",
          "has_replicas"
        ],
        "title": "DatabaseInformation"
      },
      "DeploymentParameters": {
        "properties": {
          "database": {
            "type": "string",
            "pattern": "^[^\\x00]*$",
            "title": "Database"
          },
          "database_user": {
            "type": "string",
            "pattern": "^[^\\x00]*$",
            "title": "Database User"
          },
          "database_password": {
            "type": "string",
            "pattern": "^[^\\x00]*$",
            "title": "Database Password"
          },
          "database_size": {
            "type": "integer",
            "multipleOf": 1000000000.0,
            "exclusiveMinimum": 0.0,
            "title": "Database Size"
          },
          "storage_size": {
            "type": "integer",
            "multipleOf": 1000000000.0,
            "exclusiveMinimum": 0.0,
            "title": "Storage Size"
          },
          "vcpu": {
            "type": "integer",
            "multipleOf": 100.0,
            "maximum": 64000.0,
            "minimum": 1000.0,
            "title": "Vcpu"
          },
          "memory_bytes": {
            "type": "integer",
            "multipleOf": 100000000.0,
            "minimum": 500000000.0,
            "title": "Memory Bytes"
          },
          "iops": {
            "type": "integer",
            "maximum": 2147483647.0,
            "minimum": 100.0,
            "title": "Iops"
          },
          "database_image_tag": {
            "type": "string",
            "const": "15.1.0.147",
            "title": "Database Image Tag"
          }
        },
        "type": "object",
        "required": [
          "database",
          "database_user",
          "database_password",
          "database_size",
          "storage_size",
          "vcpu",
          "memory_bytes",
          "iops",
          "database_image_tag"
        ],
        "title": "DeploymentParameters"
      },
      "HTTPError": {
        "properties": {
          "detail": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "additionalProperties": true,
                "type": "object"
              }
            ],
            "title": "Detail"
          }
        },
        "type": "object",
        "required": [
          "detail"
        ],
        "title": "HTTPError"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "Organization": {
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "format": "ulid",
            "title": "ULID",
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ]
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "pattern": "^[^\\x00]*$",
            "title": "Name"
          },
          "locked": {
            "type": "boolean",
            "title": "Locked",
            "default": false
          },
          "require_mfa": {
            "type": "boolean",
            "title": "Require Mfa",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "Organization"
      },
      "OrganizationAuditLog": {
        "properties": {
          "result": {
            "items": {
              "$ref": "#/components/schemas/AuditLog"
            },
            "type": "array",
            "title": "Result"
          },
          "retention_period": {
            "type": "integer",
            "title": "Retention Period"
          }
        },
        "type": "object",
        "required": [
          "result",
          "retention_period"
        ],
        "title": "OrganizationAuditLog"
      },
      "OrganizationCreate": {
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "pattern": "^[^\\x00]*$",
            "title": "Name"
          },
          "locked": {
            "type": "boolean",
            "title": "Locked",
            "default": false
          },
          "require_mfa": {
            "type": "boolean",
            "title": "Require Mfa",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "OrganizationCreate"
      },
      "OrganizationUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "pattern": "^[^\\x00]*$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "locked": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Locked"
          },
          "require_mfa": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Require Mfa"
          }
        },
        "type": "object",
        "title": "OrganizationUpdate"
      },
      "ProjectCreate": {
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "pattern": "^[^\\x00]*$",
            "title": "Name"
          },
          "deployment": {
            "$ref": "#/components/schemas/DeploymentParameters"
          }
        },
        "type": "object",
        "required": [
          "name",
          "deployment"
        ],
        "title": "ProjectCreate"
      },
      "ProjectPublic": {
        "properties": {
          "organization_id": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "format": "ulid",
            "title": "ULID",
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ]
          },
          "id": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "format": "ulid",
            "title": "ULID",
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ]
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "pattern": "^[^\\x00]*$",
            "title": "Name"
          },
          "branch_status": {
            "additionalProperties": {
              "type": "string",
              "enum": [
                "Stopped",
                "Provisioning",
                "Starting",
                "Running",
                "Paused",
                "Stopping",
                "Terminating",
                "CrashLoopBackOff",
                "Migrating",
                "Unknown",
                "ErrorUnschedulable",
                "ErrImagePull",
                "ImagePullBackOff",
                "ErrorPvcNotFound",
                "DataVolumeError",
                "WaitingForVolumeBinding",
                "WaitingForReceiver",
                "UNKNOWN"
              ]
            },
            "type": "object",
            "title": "Branch Status"
          }
        },
        "type": "object",
        "required": [
          "organization_id",
          "id",
          "name",
          "branch_status"
        ],
        "title": "ProjectPublic"
      },
      "ProjectUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "pattern": "^[^\\x00]*$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          }
        },
        "type": "object",
        "title": "ProjectUpdate"
      },
      "ResizeParameters": {
        "properties": {
          "database_size": {
            "anyOf": [
              {
                "type": "integer",
                "multipleOf": 1000000000.0,
                "exclusiveMinimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Database Size"
          },
          "storage_size": {
            "anyOf": [
              {
                "type": "integer",
                "multipleOf": 1000000000.0,
                "exclusiveMinimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Storage Size"
          }
        },
        "type": "object",
        "required": [
          "database_size",
          "storage_size"
        ],
        "title": "ResizeParameters"
      },
      "ResourceUsageDefinition": {
        "properties": {
          "vcpu": {
            "type": "integer",
            "multipleOf": 100.0,
            "maximum": 64000.0,
            "minimum": 1000.0,
            "title": "Vcpu",
            "description": "Measured vCPU consumption for the branch."
          },
          "ram_bytes": {
            "type": "integer",
            "multipleOf": 100000000.0,
            "minimum": 500000000.0,
            "title": "Ram Bytes",
            "description": "Measured RAM usage in bytes."
          },
          "nvme_bytes": {
            "type": "integer",
            "multipleOf": 1000000000.0,
            "exclusiveMinimum": 0.0,
            "title": "Nvme Bytes",
            "description": "Measured NVMe usage in bytes."
          },
          "iops": {
            "type": "integer",
            "maximum": 2147483647.0,
            "minimum": 100.0,
            "title": "Iops",
            "description": "Measured IOPS consumption."
          },
          "storage_bytes": {
            "anyOf": [
              {
                "type": "integer",
                "multipleOf": 1000000000.0,
                "exclusiveMinimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Storage Bytes",
            "description": "Measured storage usage in bytes, if available."
          }
        },
        "type": "object",
        "required": [
          "vcpu",
          "ram_bytes",
          "nvme_bytes",
          "iops"
        ],
        "title": "ResourceUsageDefinition"
      },
      "ResourcesDefinition": {
        "properties": {
          "vcpu": {
            "type": "integer",
            "multipleOf": 100.0,
            "maximum": 64000.0,
            "minimum": 1000.0,
            "title": "Vcpu",
            "description": "Number of virtual CPUs provisioned (matches Branch.vcpu constraints)."
          },
          "ram_bytes": {
            "type": "integer",
            "multipleOf": 100000000.0,
            "minimum": 500000000.0,
            "title": "Ram Bytes",
            "description": "Guest memory expressed in bytes (mirrors Branch.memory)."
          },
          "nvme_bytes": {
            "type": "integer",
            "multipleOf": 1000000000.0,
            "exclusiveMinimum": 0.0,
            "title": "Nvme Bytes",
            "description": "Provisioned NVMe volume capacity in bytes (derived from Branch.database_size)."
          },
          "iops": {
            "type": "integer",
            "maximum": 2147483647.0,
            "minimum": 100.0,
            "title": "Iops",
            "description": "Configured storage IOPS budget (matches Branch.iops constraints)."
          },
          "storage_bytes": {
            "anyOf": [
              {
                "type": "integer",
                "multipleOf": 1000000000.0,
                "exclusiveMinimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Storage Bytes",
            "description": "Storage capacity in bytes to be used for Storage API (mirrors Branch.storage_size)."
          }
        },
        "type": "object",
        "required": [
          "vcpu",
          "ram_bytes",
          "nvme_bytes",
          "iops"
        ],
        "title": "ResourcesDefinition"
      },
      "Role": {
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "format": "ulid",
            "title": "ULID",
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ]
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          }
        },
        "type": "object",
        "title": "Role"
      },
      "Status": {
        "properties": {
          "service": {
            "type": "string",
            "const": "vela",
            "title": "Service",
            "default": "vela"
          }
        },
        "type": "object",
        "title": "Status"
      },
      "Target": {
        "properties": {
          "description": {
            "type": "string",
            "title": "Description"
          },
          "metadata": {
            "items": {
              "$ref": "#/components/schemas/TargetMetadata"
            },
            "type": "array",
            "title": "Metadata"
          }
        },
        "type": "object",
        "required": [
          "description",
          "metadata"
        ],
        "title": "Target"
      },
      "TargetMetadata": {
        "properties": {
          "organization": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50,
                "minLength": 1,
                "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization"
          },
          "project": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50,
                "minLength": 1,
                "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Project"
          }
        },
        "type": "object",
        "required": [
          "organization",
          "project"
        ],
        "title": "TargetMetadata"
      },
      "UserCreationResult": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "id",
          "password"
        ],
        "title": "UserCreationResult"
      },
      "UserID": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "id"
        ],
        "title": "UserID"
      },
      "UserParameters": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "first_name": {
            "type": "string",
            "title": "First Name"
          },
          "last_name": {
            "type": "string",
            "title": "Last Name"
          }
        },
        "type": "object",
        "required": [
          "email",
          "first_name",
          "last_name"
        ],
        "title": "UserParameters"
      },
      "UserPublic": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "email_verified": {
            "type": "boolean",
            "title": "Email Verified"
          },
          "first_name": {
            "type": "string",
            "title": "First Name"
          },
          "last_name": {
            "type": "string",
            "title": "Last Name"
          }
        },
        "type": "object",
        "required": [
          "id",
          "email",
          "email_verified",
          "first_name",
          "last_name"
        ],
        "title": "UserPublic"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}