{
  "openapi": "3.1.0",
  "info": {
    "title": "FastAPI",
    "version": "0.1.0"
  },
  "servers": [
    {
      "url": "/vela"
    }
  ],
  "paths": {
    "/health": {
      "get": {
        "summary": "Health",
        "operationId": "health",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/": {
      "get": {
        "tags": [
          "organization"
        ],
        "summary": "Organizations:List",
        "operationId": "organizations:list",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Organization"
                  },
                  "title": "Response Organizations List Organizations  Get"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "organization"
        ],
        "summary": "Organizations:Create",
        "operationId": "organizations:create",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "response",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "empty",
                "full"
              ],
              "type": "string",
              "default": "empty",
              "title": "Response"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/Organization"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Response Organizations Create Organizations  Post"
                }
              }
            },
            "headers": {
              "Location": {
                "description": "URL of the created item",
                "schema": {
                  "type": "string"
                }
              }
            },
            "links": {
              "detail": {
                "operationId": "organizations:detail",
                "parameters": {
                  "organization_id": "$response.header.Location#regex:/organizations/(.+)/"
                }
              },
              "update": {
                "operationId": "organizations:update",
                "parameters": {
                  "organization_id": "$response.header.Location#regex:/organizations/(.+)/"
                }
              },
              "delete": {
                "operationId": "organizations:delete",
                "parameters": {
                  "organization_id": "$response.header.Location#regex:/organizations/(.+)/"
                }
              },
              "create_project": {
                "operationId": "organizations:projects:create",
                "parameters": {
                  "organization_id": "$response.header.Location#regex:/organizations/(.+)/"
                }
              },
              "list_projects": {
                "operationId": "organizations:projects:list",
                "parameters": {
                  "organization_id": "$response.header.Location#regex:/organizations/(.+)/"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/": {
      "get": {
        "tags": [
          "organization",
          "organization"
        ],
        "summary": "Organizations:Detail",
        "operationId": "organizations:detail",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organization"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "organization",
          "organization"
        ],
        "summary": "Organizations:Update",
        "operationId": "organizations:update",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationUpdate"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful Response",
            "headers": {
              "Location": {
                "description": "URL of the created item",
                "schema": {
                  "type": "string"
                }
              }
            },
            "links": {
              "detail": {
                "operationId": "organizations:detail",
                "parameters": {
                  "organization_id": "$response.header.Location#regex:/organizations/(.+)/"
                }
              },
              "update": {
                "operationId": "organizations:update",
                "parameters": {
                  "organization_id": "$response.header.Location#regex:/organizations/(.+)/"
                }
              },
              "delete": {
                "operationId": "organizations:delete",
                "parameters": {
                  "organization_id": "$response.header.Location#regex:/organizations/(.+)/"
                }
              },
              "create_project": {
                "operationId": "organizations:projects:create",
                "parameters": {
                  "organization_id": "$response.header.Location#regex:/organizations/(.+)/"
                }
              },
              "list_projects": {
                "operationId": "organizations:projects:list",
                "parameters": {
                  "organization_id": "$response.header.Location#regex:/organizations/(.+)/"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "organization",
          "organization"
        ],
        "summary": "Organizations:Delete",
        "operationId": "organizations:delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/audit": {
      "get": {
        "tags": [
          "organization",
          "organization"
        ],
        "summary": "Organizations:Audits:List",
        "operationId": "organizations:audits:list",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "from",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time",
              "title": "From"
            }
          },
          {
            "name": "to",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time",
              "title": "To"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationAuditLog"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/projects/": {
      "get": {
        "tags": [
          "organization",
          "organization",
          "project"
        ],
        "summary": "Organizations:Projects:List",
        "operationId": "organizations:projects:list",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectPublic"
                  },
                  "title": "Response Organizations Projects List Organizations  Organization Id  Projects  Get"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "organization",
          "organization",
          "project"
        ],
        "summary": "Organizations:Projects:Create",
        "operationId": "organizations:projects:create",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "response",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "empty",
                "full"
              ],
              "type": "string",
              "default": "empty",
              "title": "Response"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ProjectPublic"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Response Organizations Projects Create Organizations  Organization Id  Projects  Post"
                }
              }
            },
            "headers": {
              "Location": {
                "description": "URL of the created item",
                "schema": {
                  "type": "string"
                }
              }
            },
            "links": {
              "detail": {
                "operationId": "organizations:projects:detail",
                "parameters": {
                  "project_id": "$response.header.Location#regex:/projects/(.+)/"
                }
              },
              "update": {
                "operationId": "organizations:projects:update",
                "parameters": {
                  "project_id": "$response.header.Location#regex:/projects/(.+)/"
                }
              },
              "delete": {
                "operationId": "organizations:projects:delete",
                "parameters": {
                  "project_id": "$response.header.Location#regex:/projects/(.+)/"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/": {
      "get": {
        "tags": [
          "organization",
          "organization",
          "project",
          "project",
          "branch"
        ],
        "summary": "Organizations:Projects:Branch:List",
        "operationId": "organizations:projects:branch:list",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Project Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BranchPublic"
                  },
                  "title": "Response Organizations Projects Branch List Organizations  Organization Id  Projects  Project Id  Branches  Get"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "organization",
          "organization",
          "project",
          "project",
          "branch"
        ],
        "summary": "Organizations:Projects:Branch:Create",
        "operationId": "organizations:projects:branch:create",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "response",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "empty",
                "full"
              ],
              "type": "string",
              "default": "empty",
              "title": "Response"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BranchCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/BranchPublic"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Response Organizations Projects Branch Create Organizations  Organization Id  Projects  Project Id  Branches  Post"
                }
              }
            },
            "headers": {
              "Location": {
                "description": "URL of the created item",
                "schema": {
                  "type": "string"
                }
              }
            },
            "links": {
              "detail": {
                "operationId": "organizations:projects:branch:detail",
                "parameters": {
                  "project_id": "$response.header.Location#regex:/projects/(.+)/",
                  "branch_id": "$response.header.Location#regex:/branches/(.+)/"
                }
              },
              "update": {
                "operationId": "organizations:projects:branch:update",
                "parameters": {
                  "project_id": "$response.header.Location#regex:/projects/(.+)/",
                  "branch_id": "$response.header.Location#regex:/branches/(.+)/"
                }
              },
              "delete": {
                "operationId": "organizations:projects:branch:delete",
                "parameters": {
                  "project_id": "$response.header.Location#regex:/projects/(.+)/",
                  "branch_id": "$response.header.Location#regex:/branches/(.+)/"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/": {
      "get": {
        "tags": [
          "organization",
          "organization",
          "project",
          "project",
          "branch",
          "branch"
        ],
        "summary": "Organizations:Projects:Branch:Detail",
        "operationId": "organizations:projects:branch:detail",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "branch_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Branch Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BranchPublic"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "organization",
          "organization",
          "project",
          "project",
          "branch",
          "branch"
        ],
        "summary": "Organizations:Projects:Branch:Update",
        "operationId": "organizations:projects:branch:update",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "branch_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Branch Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BranchUpdate"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful Response",
            "headers": {
              "Location": {
                "description": "URL of the created item",
                "schema": {
                  "type": "string"
                }
              }
            },
            "links": {
              "detail": {
                "operationId": "organizations:projects:branch:detail",
                "parameters": {
                  "project_id": "$response.header.Location#regex:/projects/(.+)/",
                  "branch_id": "$response.header.Location#regex:/branches/(.+)/"
                }
              },
              "update": {
                "operationId": "organizations:projects:branch:update",
                "parameters": {
                  "project_id": "$response.header.Location#regex:/projects/(.+)/",
                  "branch_id": "$response.header.Location#regex:/branches/(.+)/"
                }
              },
              "delete": {
                "operationId": "organizations:projects:branch:delete",
                "parameters": {
                  "project_id": "$response.header.Location#regex:/projects/(.+)/",
                  "branch_id": "$response.header.Location#regex:/branches/(.+)/"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "organization",
          "organization",
          "project",
          "project",
          "branch",
          "branch"
        ],
        "summary": "Organizations:Projects:Branch:Delete",
        "operationId": "organizations:projects:branch:delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "branch_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Branch Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/reset-password": {
      "post": {
        "tags": [
          "organization",
          "organization",
          "project",
          "project",
          "branch",
          "branch"
        ],
        "summary": "Organizations:Projects:Branch:Reset-Password",
        "operationId": "organizations:projects:branch:reset-password",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "branch_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Branch Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BranchPasswordReset"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "500": {
            "description": "Failed to rotate branch database password."
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/pgbouncer-config": {
      "get": {
        "tags": [
          "organization",
          "organization",
          "project",
          "project",
          "branch",
          "branch"
        ],
        "summary": "Organizations:Projects:Branch:Get-Pgbouncer-Config",
        "operationId": "organizations:projects:branch:get-pgbouncer-config",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "branch_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Branch Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BranchPgbouncerConfigStatus"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "organization",
          "organization",
          "project",
          "project",
          "branch",
          "branch"
        ],
        "summary": "Organizations:Projects:Branch:Update-Pgbouncer-Config",
        "operationId": "organizations:projects:branch:update-pgbouncer-config",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "branch_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Branch Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BranchPgbouncerConfigUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BranchPgbouncerConfigStatus"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "500": {
            "description": "PgBouncer configuration template missing required entries."
          },
          "502": {
            "description": "Failed to update PgBouncer configuration."
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/resize": {
      "post": {
        "tags": [
          "organization",
          "organization",
          "project",
          "project",
          "branch",
          "branch"
        ],
        "summary": "Organizations:Projects:Branch:Resize",
        "operationId": "organizations:projects:branch:resize",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "branch_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Branch Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResizeParameters"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/stop": {
      "post": {
        "tags": [
          "organization",
          "organization",
          "project",
          "project",
          "branch",
          "branch"
        ],
        "summary": "Organizations:Projects:Branch:Stop",
        "operationId": "organizations:projects:branch:stop",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "branch_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Branch Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/start": {
      "post": {
        "tags": [
          "organization",
          "organization",
          "project",
          "project",
          "branch",
          "branch"
        ],
        "summary": "Organizations:Projects:Branch:Start",
        "operationId": "organizations:projects:branch:start",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "branch_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Branch Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/resume": {
      "post": {
        "tags": [
          "organization",
          "organization",
          "project",
          "project",
          "branch",
          "branch"
        ],
        "summary": "Organizations:Projects:Branch:Resume",
        "operationId": "organizations:projects:branch:resume",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "branch_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Branch Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/pause": {
      "post": {
        "tags": [
          "organization",
          "organization",
          "project",
          "project",
          "branch",
          "branch"
        ],
        "summary": "Organizations:Projects:Branch:Pause",
        "operationId": "organizations:projects:branch:pause",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "branch_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Branch Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/apikeys": {
      "get": {
        "tags": [
          "organization",
          "organization",
          "project",
          "project",
          "branch",
          "branch"
        ],
        "summary": "Organizations:Projects:Branch:Apikeys",
        "operationId": "organizations:projects:branch:apikeys",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "branch_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Branch Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiKeyDetails"
                  },
                  "title": "Response Organizations Projects Branch Apikeys Organizations  Organization Id  Projects  Project Id  Branches  Branch Id  Apikeys Get"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/projects/{project_id}/": {
      "get": {
        "tags": [
          "organization",
          "organization",
          "project",
          "project"
        ],
        "summary": "Organizations:Projects:Detail",
        "operationId": "organizations:projects:detail",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Project Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectPublic"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "organization",
          "organization",
          "project",
          "project"
        ],
        "summary": "Organizations:Projects:Update",
        "operationId": "organizations:projects:update",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Project Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectUpdate"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful Response",
            "headers": {
              "Location": {
                "description": "URL of the created item",
                "schema": {
                  "type": "string"
                }
              }
            },
            "links": {
              "detail": {
                "operationId": "organizations:projects:detail",
                "parameters": {
                  "project_id": "$response.header.Location#regex:/projects/(.+)/"
                }
              },
              "update": {
                "operationId": "organizations:projects:update",
                "parameters": {
                  "project_id": "$response.header.Location#regex:/projects/(.+)/"
                }
              },
              "delete": {
                "operationId": "organizations:projects:delete",
                "parameters": {
                  "project_id": "$response.header.Location#regex:/projects/(.+)/"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "organization",
          "organization",
          "project",
          "project"
        ],
        "summary": "Organizations:Projects:Delete",
        "operationId": "organizations:projects:delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Project Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/projects/{project_id}/suspend": {
      "post": {
        "tags": [
          "organization",
          "organization",
          "project",
          "project"
        ],
        "summary": "Organizations:Projects:Suspend",
        "operationId": "organizations:projects:suspend",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Project Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/projects/{project_id}/resume": {
      "post": {
        "tags": [
          "organization",
          "organization",
          "project",
          "project"
        ],
        "summary": "Organizations:Projects:Resume",
        "operationId": "organizations:projects:resume",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Project Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/members/": {
      "get": {
        "tags": [
          "organization",
          "organization"
        ],
        "summary": "Organizations:Members:List",
        "operationId": "organizations:members:list",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "response",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "shallow",
                "deep"
              ],
              "type": "string",
              "default": "shallow",
              "title": "Response"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string",
                        "format": "uuid"
                      },
                      {
                        "$ref": "#/components/schemas/UserPublic"
                      }
                    ]
                  },
                  "title": "Response Organizations Members List Organizations  Organization Id  Members  Get"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "organization",
          "organization"
        ],
        "summary": "Organizations:Members:Add",
        "operationId": "organizations:members:add",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserID"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "headers": {
              "Location": {
                "description": "URL of the created item",
                "schema": {
                  "type": "string"
                }
              }
            },
            "links": {
              "update": {
                "operationId": "organizations:members:update",
                "parameters": {
                  "user_id": "$request.body#/id"
                }
              },
              "delete": {
                "operationId": "organizations:members:remove",
                "parameters": {
                  "user_id": "$request.body#/id"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/members/{user_id}": {
      "put": {
        "tags": [
          "organization",
          "organization"
        ],
        "summary": "Organizations:Members:Update",
        "operationId": "organizations:members:update",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "organization",
          "organization"
        ],
        "summary": "Organizations:Members:Remove",
        "operationId": "organizations:members:remove",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/users/": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Add",
        "operationId": "add",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserParameters"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "prefixItems": [
                    {
                      "$ref": "#/components/schemas/UserCreationResult"
                    },
                    {
                      "type": "integer"
                    }
                  ],
                  "type": "array",
                  "maxItems": 2,
                  "minItems": 2,
                  "title": "Response Add Users  Post"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/users/{user_ref}/": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get",
        "operationId": "get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_ref",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string",
                  "format": "email"
                }
              ],
              "title": "User Ref"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPublic"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_ref}/roles/": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "List User Roles",
        "operationId": "list_user_roles",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_ref",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string",
                  "format": "email"
                }
              ],
              "title": "User Ref"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleUserLinkPublic"
                  },
                  "title": "Response List User Roles Users  User Ref  Roles  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_ref}/permissions/": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "List User Permissions",
        "operationId": "list_user_permissions",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_ref",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string",
                  "format": "email"
                }
              ],
              "title": "User Ref"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserPermissionPublic"
                  },
                  "title": "Response List User Permissions Users  User Ref  Permissions  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/resources/branches/{branch_id}/allocations": {
      "post": {
        "tags": [
          "resource"
        ],
        "summary": "Set Branch Allocations",
        "operationId": "set_branch_allocations",
        "parameters": [
          {
            "name": "branch_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Branch Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourcesPayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BranchProvisionPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "resource"
        ],
        "summary": "Get Branch Allocations",
        "operationId": "get_branch_allocations",
        "parameters": [
          {
            "name": "branch_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Branch Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BranchAllocationPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/resources/projects/{project_id}/usage": {
      "get": {
        "tags": [
          "resource"
        ],
        "summary": "Get Project Usage",
        "operationId": "get_project_usage",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "cycle_start",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Cycle Start"
            }
          },
          {
            "name": "cycle_end",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Cycle End"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceLimitsPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/resources/organizations/{organization_id}/usage": {
      "get": {
        "tags": [
          "resource"
        ],
        "summary": "Get Org Usage",
        "operationId": "get_org_usage",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "cycle_start",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Cycle Start"
            }
          },
          {
            "name": "cycle_end",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Cycle End"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceLimitsPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/resources/organizations/{organization_id}/limits/provisioning": {
      "post": {
        "tags": [
          "resource"
        ],
        "summary": "Set Organization Provisioning Limit",
        "operationId": "set_organization_provisioning_limit",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProvLimitPayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LimitResultPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "resource"
        ],
        "summary": "Get Organization Provisioning Limits",
        "operationId": "get_organization_provisioning_limits",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProvisioningLimitPublic"
                  },
                  "title": "Response Get Organization Provisioning Limits Resources Organizations  Organization Id  Limits Provisioning Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/resources/projects/{project_id}/limits/provisioning": {
      "post": {
        "tags": [
          "resource"
        ],
        "summary": "Set Project Provisioning Limit",
        "operationId": "set_project_provisioning_limit",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Project Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProvLimitPayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LimitResultPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "resource"
        ],
        "summary": "Get Project Provisioning Limits",
        "operationId": "get_project_provisioning_limits",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Project Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProvisioningLimitPublic"
                  },
                  "title": "Response Get Project Provisioning Limits Resources Projects  Project Id  Limits Provisioning Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/resources/organizations/{organization_id}/limits/consumption": {
      "post": {
        "tags": [
          "resource"
        ],
        "summary": "Set Organization Consumption Limit",
        "operationId": "set_organization_consumption_limit",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConsumptionPayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LimitResultPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "resource"
        ],
        "summary": "Get Organization Consumption Limits",
        "operationId": "get_organization_consumption_limits",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConsumptionLimitPublic"
                  },
                  "title": "Response Get Organization Consumption Limits Resources Organizations  Organization Id  Limits Consumption Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/resources/projects/{project_id}/limits/consumption": {
      "post": {
        "tags": [
          "resource"
        ],
        "summary": "Set Project Consumption Limit",
        "operationId": "set_project_consumption_limit",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Project Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConsumptionPayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LimitResultPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "resource"
        ],
        "summary": "Get Project Consumption Limits",
        "operationId": "get_project_consumption_limits",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Project Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConsumptionLimitPublic"
                  },
                  "title": "Response Get Project Consumption Limits Resources Projects  Project Id  Limits Consumption Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/resources/branches/{branch_id}/limits/": {
      "get": {
        "tags": [
          "resource"
        ],
        "summary": "Branch Effective Limit",
        "operationId": "branch_effective_limit",
        "parameters": [
          {
            "name": "branch_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Branch Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceLimitsPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/system/available-permissions/": {
      "get": {
        "tags": [
          "system"
        ],
        "summary": "List Available Permissions",
        "description": "List all access rights defined in the system.",
        "operationId": "list_available_permissions",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "title": "Response List Available Permissions System Available Permissions  Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/system/resource-limit-definitions": {
      "get": {
        "tags": [
          "system"
        ],
        "summary": "List Resource Limit Definitions",
        "operationId": "list_resource_limit_definitions",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ResourceLimitDefinitionPublic"
                  },
                  "type": "array",
                  "title": "Response List Resource Limit Definitions System Resource Limit Definitions Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/system/available-postgresql-versions": {
      "get": {
        "tags": [
          "system"
        ],
        "summary": "List Available Postgresql Versions",
        "operationId": "list_available_postgresql_versions",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AvailablePostgresqlVersion"
                  },
                  "type": "array",
                  "title": "Response List Available Postgresql Versions System Available Postgresql Versions Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/backup/organizations/{organization_id}/schedule": {
      "post": {
        "summary": "Add Org Backup Schedule",
        "operationId": "add_org_backup_schedule",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "response",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/ResponseType",
              "default": "empty"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SchedulePayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/BackupScheduleCreatePublic"
                    },
                    {
                      "$ref": "#/components/schemas/BackupSchedulePublic"
                    }
                  ],
                  "title": "Response Add Org Backup Schedule Backup Organizations  Organization Id  Schedule Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Replace Org Backup Schedule",
        "operationId": "replace_org_backup_schedule",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "response",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/ResponseType",
              "default": "empty"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BackupScheduleUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/BackupScheduleCreatePublic"
                    },
                    {
                      "$ref": "#/components/schemas/BackupSchedulePublic"
                    }
                  ],
                  "title": "Response Replace Org Backup Schedule Backup Organizations  Organization Id  Schedule Put"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List Org Schedules",
        "operationId": "list_org_schedules",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "env_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Env Type"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BackupSchedulePublic"
                  },
                  "title": "Response List Org Schedules Backup Organizations  Organization Id  Schedule Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/backup/branches/{branch_id}/schedule": {
      "post": {
        "summary": "Add Branch Backup Schedule",
        "operationId": "add_branch_backup_schedule",
        "parameters": [
          {
            "name": "branch_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 26,
                  "maxLength": 26,
                  "pattern": "[0-7][0123456789ABCDEFGHJKMNPQRSTVWXYZ]{25}"
                },
                {
                  "type": "string",
                  "format": "binary",
                  "minLength": 16,
                  "maxLength": 16
                }
              ],
              "title": "Branch Id"
            }
          },
          {
            "name": "response",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/ResponseType",
              "default": "empty"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SchedulePayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/BackupScheduleCreatePublic"
                    },
                    {
                      "$ref": "#/components/schemas/BackupSchedulePublic"
                    }
                  ],
                  "title": "Response Add Branch Backup Schedule Backup Branches  Branch Id  Schedule Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Replace Branch Backup Schedule",
        "operationId": "replace_branch_backup_schedule",
        "parameters": [
          {
            "name": "branch_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 26,
                  "maxLength": 26,
                  "pattern": "[0-7][0123456789ABCDEFGHJKMNPQRSTVWXYZ]{25}"
                },
                {
                  "type": "string",
                  "format": "binary",
                  "minLength": 16,
                  "maxLength": 16
                }
              ],
              "title": "Branch Id"
            }
          },
          {
            "name": "response",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/ResponseType",
              "default": "empty"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BackupScheduleUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/BackupScheduleCreatePublic"
                    },
                    {
                      "$ref": "#/components/schemas/BackupSchedulePublic"
                    }
                  ],
                  "title": "Response Replace Branch Backup Schedule Backup Branches  Branch Id  Schedule Put"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List Branch Schedules",
        "operationId": "list_branch_schedules",
        "parameters": [
          {
            "name": "branch_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Branch Id"
            }
          },
          {
            "name": "env_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Env Type"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BackupSchedulePublic"
                  },
                  "title": "Response List Branch Schedules Backup Branches  Branch Id  Schedule Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/backup/organizations/{organization_id}/": {
      "get": {
        "summary": "List Org Backups",
        "operationId": "list_org_backups",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "ulid",
                  "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
                  "minLength": 26,
                  "maxLength": 26,
                  "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
                  "examples": [
                    "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                    "01H945P9C3K2QJ8F7N6M4R2E8V"
                  ],
                  "title": "ULID"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "env_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Env Type"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BackupPublic"
                  },
                  "title": "Response List Org Backups Backup Organizations  Organization Id   Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/backup/branches/{branch_id}/": {
      "get": {
        "summary": "List Branch Backups",
        "operationId": "list_branch_backups",
        "parameters": [
          {
            "name": "branch_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "ulid",
                  "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
                  "minLength": 26,
                  "maxLength": 26,
                  "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
                  "examples": [
                    "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                    "01H945P9C3K2QJ8F7N6M4R2E8V"
                  ],
                  "title": "ULID"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Branch Id"
            }
          },
          {
            "name": "env_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Env Type"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BackupPublic"
                  },
                  "title": "Response List Branch Backups Backup Branches  Branch Id   Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Manual Backup",
        "operationId": "manual_backup",
        "parameters": [
          {
            "name": "branch_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Branch Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackupCreatePublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/backup/schedule/{schedule_id}/": {
      "delete": {
        "summary": "Delete Schedule",
        "operationId": "delete_schedule",
        "parameters": [
          {
            "name": "schedule_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "ulid",
                  "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
                  "minLength": 26,
                  "maxLength": 26,
                  "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
                  "examples": [
                    "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                    "01H945P9C3K2QJ8F7N6M4R2E8V"
                  ],
                  "title": "ULID"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Schedule Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackupScheduleDeletePublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/backup/{backup_id}": {
      "delete": {
        "summary": "Delete Backup",
        "operationId": "delete_backup",
        "parameters": [
          {
            "name": "backup_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Backup Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackupDeletePublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/backup/branches/{branch_id}/info": {
      "get": {
        "summary": "Get Branch Backup Info",
        "operationId": "get_branch_backup_info",
        "parameters": [
          {
            "name": "branch_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Branch Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackupInfoPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/roles/": {
      "post": {
        "tags": [
          "role"
        ],
        "summary": "Create Role",
        "operationId": "create_role",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RolePayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RolePublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "role"
        ],
        "summary": "List Roles",
        "description": "List all roles and their access rights within an organization",
        "operationId": "list_roles",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleWithPermissionsPublic"
                  },
                  "title": "Response List Roles Organizations  Organization Id  Roles  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/roles/{role_id}/": {
      "put": {
        "tags": [
          "role"
        ],
        "summary": "Modify Role",
        "operationId": "modify_role",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "role_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Role Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RolePayloadUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RolePublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "role"
        ],
        "summary": "Delete Role",
        "operationId": "delete_role",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "role_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Role Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleDeletePublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/roles/{role_id}/assign/{user_id}/": {
      "post": {
        "tags": [
          "role"
        ],
        "summary": "Assign Role",
        "description": "Assign a role to a user in one or more contexts. The context is passed as JSON.",
        "operationId": "assign_role",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          },
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "role_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Role Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleAssignmentPayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleAssignmentPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/roles/{role_id}/unassign/{user_id}/": {
      "post": {
        "tags": [
          "role"
        ],
        "summary": "Unassign Role",
        "operationId": "unassign_role",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          },
          {
            "name": "role_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Role Id"
            }
          },
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string",
                      "format": "uuid"
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Context"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleUnassignmentPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/roles/check_access/{user_id}/": {
      "post": {
        "tags": [
          "role"
        ],
        "summary": "Api Check Access",
        "description": "Example POST JSON:\n{\n    \"access\": \"project:settings:update\",\n    \"project_id\": \"01ABCDEF2345XYZ\"\n}",
        "operationId": "api_check_access",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccessCheckRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionAccessCheckPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/roles/role-assignments/": {
      "get": {
        "tags": [
          "role"
        ],
        "summary": "List Role Assignments",
        "description": "List role-user assignments within an organization.\nOptionally filter by user_id.",
        "operationId": "list_role_assignments",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ulid",
              "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
              "minLength": 26,
              "maxLength": 26,
              "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
              "examples": [
                "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                "01H945P9C3K2QJ8F7N6M4R2E8V"
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleAssignmentsPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get the top-level representation of the realm It will not include nested information like User and Client representations.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealmRepresentation"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "put": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Update the top-level information of the realm Any user, roles or client information in the representation will be ignored.",
        "description": "This will only update top-level attributes of the realm.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RealmRepresentation"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Delete the realm",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/admin-events": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get admin events Returns all admin events, or filters events based on URL query parameters listed here",
        "parameters": [
          {
            "name": "authClient",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authIpAddress",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authRealm",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authUser",
            "in": "query",
            "description": "user id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateFrom",
            "in": "query",
            "description": "From (inclusive) date (yyyy-MM-dd) or time in Epoch timestamp millis (number of milliseconds since January 1, 1970, 00:00:00 GMT)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateTo",
            "in": "query",
            "description": "To (inclusive) date (yyyy-MM-dd) or time in Epoch timestamp millis (number of milliseconds since January 1, 1970, 00:00:00 GMT)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "direction",
            "in": "query",
            "description": "The direction to sort events by (asc or desc)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "first",
            "in": "query",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "max",
            "in": "query",
            "description": "Maximum results size (defaults to 100)",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "operationTypes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "resourcePath",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceTypes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AdminEventRepresentation"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Delete all admin events",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/attack-detection/brute-force/users": {
      "delete": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Clear any user login failures for all users This can release temporary disabled users",
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/attack-detection/brute-force/users/{userId}": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get status of a username in brute force detection",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {}
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Clear any user login failures for the user This can release temporary disabled user",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/authentication/authenticator-providers": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get authenticator providers Returns a stream of authenticator providers.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {}
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/authentication/client-authenticator-providers": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get client authenticator providers Returns a stream of client authenticator providers.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {}
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/authentication/config": {
      "post": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Create new authenticator configuration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticatorConfigRepresentation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "409": {
            "description": "Conflict"
          }
        },
        "deprecated": true
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/authentication/config-description/{providerId}": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get authenticator provider's configuration description",
        "parameters": [
          {
            "name": "providerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticatorConfigInfoRepresentation"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/authentication/config/{id}": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get authenticator configuration",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Configuration id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticatorConfigRepresentation"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Update authenticator configuration",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Configuration id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticatorConfigRepresentation"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "delete": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Delete authenticator configuration",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Configuration id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/authentication/executions": {
      "post": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Add new authentication execution",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticationExecutionRepresentation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/authentication/executions/{executionId}": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get Single Execution",
        "parameters": [
          {
            "name": "executionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationExecutionRepresentation"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Delete execution",
        "parameters": [
          {
            "name": "executionId",
            "in": "path",
            "description": "Execution id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/authentication/executions/{executionId}/config": {
      "post": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Update execution with new configuration",
        "parameters": [
          {
            "name": "executionId",
            "in": "path",
            "description": "Execution id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticatorConfigRepresentation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "409": {
            "description": "Conflict"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/authentication/executions/{executionId}/config/{id}": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get execution's configuration",
        "parameters": [
          {
            "name": "executionId",
            "in": "path",
            "description": "Execution id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Configuration id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticatorConfigRepresentation"
                }
              }
            }
          }
        },
        "deprecated": true
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/authentication/executions/{executionId}/lower-priority": {
      "post": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Lower execution's priority",
        "parameters": [
          {
            "name": "executionId",
            "in": "path",
            "description": "Execution id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/authentication/executions/{executionId}/raise-priority": {
      "post": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Raise execution's priority",
        "parameters": [
          {
            "name": "executionId",
            "in": "path",
            "description": "Execution id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/authentication/flows": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get authentication flows Returns a stream of authentication flows.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuthenticationFlowRepresentation"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Create a new authentication flow",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticationFlowRepresentation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "409": {
            "description": "Conflict"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/authentication/flows/{flowAlias}/copy": {
      "post": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Copy existing authentication flow under a new name The new name is given as 'newName' attribute of the passed JSON object",
        "parameters": [
          {
            "name": "flowAlias",
            "in": "path",
            "description": "name of the existing authentication flow",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "409": {
            "description": "Conflict"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/authentication/flows/{flowAlias}/executions": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get authentication executions for a flow",
        "parameters": [
          {
            "name": "flowAlias",
            "in": "path",
            "description": "Flow alias",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuthenticationExecutionInfoRepresentation"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Update authentication executions of a Flow",
        "parameters": [
          {
            "name": "flowAlias",
            "in": "path",
            "description": "Flow alias",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticationExecutionInfoRepresentation"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "409": {
            "description": "Conflict"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/authentication/flows/{flowAlias}/executions/execution": {
      "post": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Add new authentication execution to a flow",
        "parameters": [
          {
            "name": "flowAlias",
            "in": "path",
            "description": "Alias of parent flow",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {}
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/authentication/flows/{flowAlias}/executions/flow": {
      "post": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Add new flow with new execution to existing flow",
        "parameters": [
          {
            "name": "flowAlias",
            "in": "path",
            "description": "Alias of parent authentication flow",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {}
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "409": {
            "description": "Conflict"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/authentication/flows/{id}": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get authentication flow for id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Flow id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationFlowRepresentation"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Update an authentication flow",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticationFlowRepresentation"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "409": {
            "description": "Conflict"
          }
        }
      },
      "delete": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Delete an authentication flow",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Flow id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/authentication/form-action-providers": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get form action providers Returns a stream of form action providers.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {}
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/authentication/form-providers": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get form providers Returns a stream of form providers.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {}
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/authentication/per-client-config-description": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get configuration descriptions for all clients",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ConfigPropertyRepresentation"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/authentication/register-required-action": {
      "post": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Register a new required actions",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/authentication/required-actions": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get required actions Returns a stream of required actions.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RequiredActionProviderRepresentation"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/authentication/required-actions/{alias}": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get required action for alias",
        "parameters": [
          {
            "name": "alias",
            "in": "path",
            "description": "Alias of required action",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequiredActionProviderRepresentation"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Update required action",
        "parameters": [
          {
            "name": "alias",
            "in": "path",
            "description": "Alias of required action",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequiredActionProviderRepresentation"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "delete": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Delete required action",
        "parameters": [
          {
            "name": "alias",
            "in": "path",
            "description": "Alias of required action",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/authentication/required-actions/{alias}/config": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get RequiredAction configuration",
        "parameters": [
          {
            "name": "alias",
            "in": "path",
            "description": "Alias of required action",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequiredActionConfigRepresentation"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Update RequiredAction configuration",
        "parameters": [
          {
            "name": "alias",
            "in": "path",
            "description": "Alias of required action",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequiredActionConfigRepresentation"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "delete": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Delete RequiredAction configuration",
        "parameters": [
          {
            "name": "alias",
            "in": "path",
            "description": "Alias of required action",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/authentication/required-actions/{alias}/config-description": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get RequiredAction provider configuration description",
        "parameters": [
          {
            "name": "alias",
            "in": "path",
            "description": "Alias of required action",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequiredActionConfigInfoRepresentation"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/authentication/required-actions/{alias}/lower-priority": {
      "post": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Lower required action's priority",
        "parameters": [
          {
            "name": "alias",
            "in": "path",
            "description": "Alias of required action",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/authentication/required-actions/{alias}/raise-priority": {
      "post": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Raise required action's priority",
        "parameters": [
          {
            "name": "alias",
            "in": "path",
            "description": "Alias of required action",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/authentication/unregistered-required-actions": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get unregistered required actions Returns a stream of unregistered required actions.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/client-description-converter": {
      "post": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Base path for importing clients under this realm.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/xml": {
              "schema": {
                "type": "string"
              }
            },
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientRepresentation"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/client-policies/policies": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "parameters": [
          {
            "name": "include-global-policies",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientPoliciesRepresentation"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "branch-auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientPoliciesRepresentation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/client-policies/profiles": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "parameters": [
          {
            "name": "include-global-profiles",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientProfilesRepresentation"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "branch-auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientProfilesRepresentation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/client-registration-policy/providers": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Base path for retrieve providers with the configProperties properly filled",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ComponentTypeRepresentation"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/client-scopes": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get client scopes belonging to the realm Returns a list of client scopes belonging to the realm",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientScopeRepresentation"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Create a new client scope Client Scope’s name must be unique!",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientScopeRepresentation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "403": {
            "description": "Forbidden"
          },
          "409": {
            "description": "Conflict"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/client-scopes/{client-scope-id}": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get representation of the client scope",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientScopeRepresentation"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "put": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Update the client scope",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientScopeRepresentation"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "409": {
            "description": "Conflict"
          }
        }
      },
      "delete": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Delete the client scope",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "parameters": [
        {
          "name": "client-scope-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/client-scopes/{client-scope-id}/protocol-mappers/add-models": {
      "post": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Create multiple mappers",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProtocolMapperRepresentation"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "parameters": [
        {
          "name": "client-scope-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/client-scopes/{client-scope-id}/protocol-mappers/models": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get mappers",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProtocolMapperRepresentation"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Create a mapper",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProtocolMapperRepresentation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "409": {
            "description": "Conflict"
          }
        }
      },
      "parameters": [
        {
          "name": "client-scope-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/client-scopes/{client-scope-id}/protocol-mappers/models/{id}": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get mapper by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Mapper id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProtocolMapperRepresentation"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Update the mapper",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Mapper id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProtocolMapperRepresentation"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "delete": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Delete the mapper",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Mapper id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "parameters": [
        {
          "name": "client-scope-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/client-scopes/{client-scope-id}/protocol-mappers/protocol/{protocol}": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get mappers by name for a specific protocol",
        "parameters": [
          {
            "name": "protocol",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProtocolMapperRepresentation"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "client-scope-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/client-scopes/{client-scope-id}/scope-mappings": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get all scope mappings for the client",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MappingsRepresentation"
                }
              }
            }
          }
        },
        "deprecated": true
      },
      "parameters": [
        {
          "name": "client-scope-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/client-scopes/{client-scope-id}/scope-mappings/clients/{client}": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get the roles associated with a client's scope Returns roles for the client.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleRepresentation"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Add client-level roles to the client's scope",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RoleRepresentation"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "delete": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Remove client-level roles from the client's scope.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RoleRepresentation"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "parameters": [
        {
          "name": "client-scope-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "client",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/client-scopes/{client-scope-id}/scope-mappings/clients/{client}/available": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "The available client-level roles Returns the roles for the client that can be associated with the client's scope",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleRepresentation"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "client-scope-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "client",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/client-scopes/{client-scope-id}/scope-mappings/clients/{client}/composite": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get effective client roles Returns the roles for the client that are associated with the client's scope.",
        "parameters": [
          {
            "name": "briefRepresentation",
            "in": "query",
            "description": "if false, return roles with their attributes",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleRepresentation"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "client-scope-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "client",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/client-scopes/{client-scope-id}/scope-mappings/realm": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get realm-level roles associated with the client's scope",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleRepresentation"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Add a set of realm-level roles to the client's scope",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RoleRepresentation"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "delete": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Remove a set of realm-level roles from the client's scope",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RoleRepresentation"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "parameters": [
        {
          "name": "client-scope-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/client-scopes/{client-scope-id}/scope-mappings/realm/available": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get realm-level roles that are available to attach to this client's scope",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleRepresentation"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "client-scope-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/client-scopes/{client-scope-id}/scope-mappings/realm/composite": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get effective realm-level roles associated with the client’s scope What this does is recurse any composite roles associated with the client’s scope and adds the roles to this lists.",
        "description": "The method is really to show a comprehensive total view of realm-level roles associated with the client.",
        "parameters": [
          {
            "name": "briefRepresentation",
            "in": "query",
            "description": "if false, return roles with their attributes",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleRepresentation"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "client-scope-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/client-session-stats": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get client session stats Returns a JSON map.",
        "description": "The key is the client id, the value is the number of sessions that currently are active with that client. Only clients that actually have a session associated with them will be in this map.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/client-templates": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get client scopes belonging to the realm Returns a list of client scopes belonging to the realm",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientScopeRepresentation"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Create a new client scope Client Scope’s name must be unique!",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientScopeRepresentation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "403": {
            "description": "Forbidden"
          },
          "409": {
            "description": "Conflict"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/client-templates/{client-scope-id}": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get representation of the client scope",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientScopeRepresentation"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "put": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Update the client scope",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientScopeRepresentation"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "409": {
            "description": "Conflict"
          }
        }
      },
      "delete": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Delete the client scope",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "parameters": [
        {
          "name": "client-scope-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/client-templates/{client-scope-id}/protocol-mappers/add-models": {
      "post": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Create multiple mappers",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProtocolMapperRepresentation"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "parameters": [
        {
          "name": "client-scope-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/client-templates/{client-scope-id}/protocol-mappers/models": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get mappers",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProtocolMapperRepresentation"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Create a mapper",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProtocolMapperRepresentation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "409": {
            "description": "Conflict"
          }
        }
      },
      "parameters": [
        {
          "name": "client-scope-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/client-templates/{client-scope-id}/protocol-mappers/models/{id}": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get mapper by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Mapper id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProtocolMapperRepresentation"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Update the mapper",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Mapper id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProtocolMapperRepresentation"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "delete": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Delete the mapper",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Mapper id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "parameters": [
        {
          "name": "client-scope-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/client-templates/{client-scope-id}/protocol-mappers/protocol/{protocol}": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get mappers by name for a specific protocol",
        "parameters": [
          {
            "name": "protocol",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProtocolMapperRepresentation"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "client-scope-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/client-templates/{client-scope-id}/scope-mappings": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get all scope mappings for the client",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MappingsRepresentation"
                }
              }
            }
          }
        },
        "deprecated": true
      },
      "parameters": [
        {
          "name": "client-scope-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/client-templates/{client-scope-id}/scope-mappings/clients/{client}": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get the roles associated with a client's scope Returns roles for the client.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleRepresentation"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Add client-level roles to the client's scope",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RoleRepresentation"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "delete": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Remove client-level roles from the client's scope.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RoleRepresentation"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "parameters": [
        {
          "name": "client-scope-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "client",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/client-templates/{client-scope-id}/scope-mappings/clients/{client}/available": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "The available client-level roles Returns the roles for the client that can be associated with the client's scope",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleRepresentation"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "client-scope-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "client",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/client-templates/{client-scope-id}/scope-mappings/clients/{client}/composite": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get effective client roles Returns the roles for the client that are associated with the client's scope.",
        "parameters": [
          {
            "name": "briefRepresentation",
            "in": "query",
            "description": "if false, return roles with their attributes",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleRepresentation"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "client-scope-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "client",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/client-templates/{client-scope-id}/scope-mappings/realm": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get realm-level roles associated with the client's scope",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleRepresentation"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Add a set of realm-level roles to the client's scope",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RoleRepresentation"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "delete": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Remove a set of realm-level roles from the client's scope",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RoleRepresentation"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "parameters": [
        {
          "name": "client-scope-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/client-templates/{client-scope-id}/scope-mappings/realm/available": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get realm-level roles that are available to attach to this client's scope",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleRepresentation"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "client-scope-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/client-templates/{client-scope-id}/scope-mappings/realm/composite": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get effective realm-level roles associated with the client’s scope What this does is recurse any composite roles associated with the client’s scope and adds the roles to this lists.",
        "description": "The method is really to show a comprehensive total view of realm-level roles associated with the client.",
        "parameters": [
          {
            "name": "briefRepresentation",
            "in": "query",
            "description": "if false, return roles with their attributes",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleRepresentation"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "client-scope-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/client-types": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "List all client types available in the current realm",
        "description": "This endpoint returns a list of both global and realm level client types and the attributes they set",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientTypesRepresentation"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Update a client type",
        "description": "This endpoint allows you to update a realm level client type",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientTypesRepresentation"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get clients belonging to the realm.",
        "description": "If a client can’t be retrieved from the storage due to a problem with the underlying storage, it is silently removed from the returned list. This ensures that concurrent modifications to the list don’t prevent callers from retrieving this list.",
        "parameters": [
          {
            "name": "clientId",
            "in": "query",
            "description": "filter by clientId",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "first",
            "in": "query",
            "description": "the first result",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "max",
            "in": "query",
            "description": "the max results to return",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "whether this is a search query or a getClientById query",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "name": "viewableOnly",
            "in": "query",
            "description": "filter clients that cannot be viewed in full by admin",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientRepresentation"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Create a new client Client’s client_id must be unique!",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientRepresentation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "409": {
            "description": "Conflict"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients-initial-access": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientInitialAccessPresentation"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Create a new initial access token.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientInitialAccessCreatePresentation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientInitialAccessCreatePresentation"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients-initial-access/{id}": {
      "delete": {
        "tags": [
          "branch-auth"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get representation of the client",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientRepresentation"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Update the client",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientRepresentation"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "409": {
            "description": "Conflict"
          }
        }
      },
      "delete": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Delete the client",
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "parameters": [
        {
          "name": "client-uuid",
          "in": "path",
          "description": "id of client (not client-id!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}/authz/resource-server": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceServerRepresentation"
                }
              }
            }
          }
        },
        "tags": [
          "branch-auth"
        ]
      },
      "put": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceServerRepresentation"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "branch-auth"
        ]
      },
      "parameters": [
        {
          "name": "client-uuid",
          "in": "path",
          "description": "id of client (not client-id!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}/authz/resource-server/import": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceServerRepresentation"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "branch-auth"
        ]
      },
      "parameters": [
        {
          "name": "client-uuid",
          "in": "path",
          "description": "id of client (not client-id!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}/authz/resource-server/permission": {
      "get": {
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "first",
            "in": "query",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "max",
            "in": "query",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "owner",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "permission",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "policyId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resource",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scope",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AbstractPolicyRepresentation"
                  }
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "branch-auth"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "tags": [
          "branch-auth"
        ]
      },
      "parameters": [
        {
          "name": "client-uuid",
          "in": "path",
          "description": "id of client (not client-id!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}/authz/resource-server/permission/evaluate": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyEvaluationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyEvaluationResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "branch-auth"
        ]
      },
      "parameters": [
        {
          "name": "client-uuid",
          "in": "path",
          "description": "id of client (not client-id!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}/authz/resource-server/permission/providers": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PolicyProviderRepresentation"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "branch-auth"
        ]
      },
      "parameters": [
        {
          "name": "client-uuid",
          "in": "path",
          "description": "id of client (not client-id!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}/authz/resource-server/permission/search": {
      "get": {
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbstractPolicyRepresentation"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "tags": [
          "branch-auth"
        ]
      },
      "parameters": [
        {
          "name": "client-uuid",
          "in": "path",
          "description": "id of client (not client-id!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}/authz/resource-server/policy": {
      "get": {
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "first",
            "in": "query",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "max",
            "in": "query",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "owner",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "permission",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "policyId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resource",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scope",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AbstractPolicyRepresentation"
                  }
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "branch-auth"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "tags": [
          "branch-auth"
        ]
      },
      "parameters": [
        {
          "name": "client-uuid",
          "in": "path",
          "description": "id of client (not client-id!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}/authz/resource-server/policy/evaluate": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyEvaluationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyEvaluationResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "branch-auth"
        ]
      },
      "parameters": [
        {
          "name": "client-uuid",
          "in": "path",
          "description": "id of client (not client-id!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}/authz/resource-server/policy/providers": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PolicyProviderRepresentation"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "branch-auth"
        ]
      },
      "parameters": [
        {
          "name": "client-uuid",
          "in": "path",
          "description": "id of client (not client-id!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}/authz/resource-server/policy/search": {
      "get": {
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbstractPolicyRepresentation"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "tags": [
          "branch-auth"
        ]
      },
      "parameters": [
        {
          "name": "client-uuid",
          "in": "path",
          "description": "id of client (not client-id!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}/authz/resource-server/resource": {
      "get": {
        "parameters": [
          {
            "name": "_id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deep",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "exactName",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "first",
            "in": "query",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "matchingUri",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "max",
            "in": "query",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "owner",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scope",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uri",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResourceRepresentation"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "branch-auth"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceRepresentation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceRepresentation"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "tags": [
          "branch-auth"
        ]
      },
      "parameters": [
        {
          "name": "client-uuid",
          "in": "path",
          "description": "id of client (not client-id!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "_id",
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "deep",
          "in": "query",
          "schema": {
            "type": "boolean"
          }
        },
        {
          "name": "exactName",
          "in": "query",
          "schema": {
            "type": "boolean"
          }
        },
        {
          "name": "first",
          "in": "query",
          "schema": {
            "format": "int32",
            "type": "integer"
          }
        },
        {
          "name": "matchingUri",
          "in": "query",
          "schema": {
            "type": "boolean"
          }
        },
        {
          "name": "max",
          "in": "query",
          "schema": {
            "format": "int32",
            "type": "integer"
          }
        },
        {
          "name": "name",
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "owner",
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "scope",
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "type",
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "uri",
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}/authz/resource-server/resource/search": {
      "get": {
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceRepresentation"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "branch-auth"
        ]
      },
      "parameters": [
        {
          "name": "client-uuid",
          "in": "path",
          "description": "id of client (not client-id!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "_id",
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "deep",
          "in": "query",
          "schema": {
            "type": "boolean"
          }
        },
        {
          "name": "exactName",
          "in": "query",
          "schema": {
            "type": "boolean"
          }
        },
        {
          "name": "first",
          "in": "query",
          "schema": {
            "format": "int32",
            "type": "integer"
          }
        },
        {
          "name": "matchingUri",
          "in": "query",
          "schema": {
            "type": "boolean"
          }
        },
        {
          "name": "max",
          "in": "query",
          "schema": {
            "format": "int32",
            "type": "integer"
          }
        },
        {
          "name": "name",
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "owner",
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "scope",
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "type",
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "uri",
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}/authz/resource-server/resource/{resource-id}": {
      "get": {
        "parameters": [
          {
            "name": "resource-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceRepresentation"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        },
        "tags": [
          "branch-auth"
        ]
      },
      "put": {
        "parameters": [
          {
            "name": "resource-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceRepresentation"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "branch-auth"
        ]
      },
      "delete": {
        "parameters": [
          {
            "name": "resource-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "branch-auth"
        ]
      },
      "parameters": [
        {
          "name": "client-uuid",
          "in": "path",
          "description": "id of client (not client-id!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "_id",
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "deep",
          "in": "query",
          "schema": {
            "type": "boolean"
          }
        },
        {
          "name": "exactName",
          "in": "query",
          "schema": {
            "type": "boolean"
          }
        },
        {
          "name": "first",
          "in": "query",
          "schema": {
            "format": "int32",
            "type": "integer"
          }
        },
        {
          "name": "matchingUri",
          "in": "query",
          "schema": {
            "type": "boolean"
          }
        },
        {
          "name": "max",
          "in": "query",
          "schema": {
            "format": "int32",
            "type": "integer"
          }
        },
        {
          "name": "name",
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "owner",
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "scope",
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "type",
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "uri",
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}/authz/resource-server/resource/{resource-id}/attributes": {
      "get": {
        "parameters": [
          {
            "name": "resource-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "branch-auth"
        ]
      },
      "parameters": [
        {
          "name": "client-uuid",
          "in": "path",
          "description": "id of client (not client-id!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "_id",
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "deep",
          "in": "query",
          "schema": {
            "type": "boolean"
          }
        },
        {
          "name": "exactName",
          "in": "query",
          "schema": {
            "type": "boolean"
          }
        },
        {
          "name": "first",
          "in": "query",
          "schema": {
            "format": "int32",
            "type": "integer"
          }
        },
        {
          "name": "matchingUri",
          "in": "query",
          "schema": {
            "type": "boolean"
          }
        },
        {
          "name": "max",
          "in": "query",
          "schema": {
            "format": "int32",
            "type": "integer"
          }
        },
        {
          "name": "name",
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "owner",
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "scope",
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "type",
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "uri",
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}/authz/resource-server/resource/{resource-id}/permissions": {
      "get": {
        "parameters": [
          {
            "name": "resource-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PolicyRepresentation"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        },
        "tags": [
          "branch-auth"
        ]
      },
      "parameters": [
        {
          "name": "client-uuid",
          "in": "path",
          "description": "id of client (not client-id!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "_id",
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "deep",
          "in": "query",
          "schema": {
            "type": "boolean"
          }
        },
        {
          "name": "exactName",
          "in": "query",
          "schema": {
            "type": "boolean"
          }
        },
        {
          "name": "first",
          "in": "query",
          "schema": {
            "format": "int32",
            "type": "integer"
          }
        },
        {
          "name": "matchingUri",
          "in": "query",
          "schema": {
            "type": "boolean"
          }
        },
        {
          "name": "max",
          "in": "query",
          "schema": {
            "format": "int32",
            "type": "integer"
          }
        },
        {
          "name": "name",
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "owner",
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "scope",
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "type",
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "uri",
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}/authz/resource-server/resource/{resource-id}/scopes": {
      "get": {
        "parameters": [
          {
            "name": "resource-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScopeRepresentation"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        },
        "tags": [
          "branch-auth"
        ]
      },
      "parameters": [
        {
          "name": "client-uuid",
          "in": "path",
          "description": "id of client (not client-id!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "_id",
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "deep",
          "in": "query",
          "schema": {
            "type": "boolean"
          }
        },
        {
          "name": "exactName",
          "in": "query",
          "schema": {
            "type": "boolean"
          }
        },
        {
          "name": "first",
          "in": "query",
          "schema": {
            "format": "int32",
            "type": "integer"
          }
        },
        {
          "name": "matchingUri",
          "in": "query",
          "schema": {
            "type": "boolean"
          }
        },
        {
          "name": "max",
          "in": "query",
          "schema": {
            "format": "int32",
            "type": "integer"
          }
        },
        {
          "name": "name",
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "owner",
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "scope",
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "type",
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "uri",
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}/authz/resource-server/scope": {
      "get": {
        "parameters": [
          {
            "name": "first",
            "in": "query",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "max",
            "in": "query",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scopeId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScopeRepresentation"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "branch-auth"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScopeRepresentation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "branch-auth"
        ]
      },
      "parameters": [
        {
          "name": "client-uuid",
          "in": "path",
          "description": "id of client (not client-id!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}/authz/resource-server/scope/search": {
      "get": {
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScopeRepresentation"
                  }
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "tags": [
          "branch-auth"
        ]
      },
      "parameters": [
        {
          "name": "client-uuid",
          "in": "path",
          "description": "id of client (not client-id!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}/authz/resource-server/scope/{scope-id}": {
      "get": {
        "parameters": [
          {
            "name": "scope-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScopeRepresentation"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        },
        "tags": [
          "branch-auth"
        ]
      },
      "put": {
        "parameters": [
          {
            "name": "scope-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScopeRepresentation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "branch-auth"
        ]
      },
      "delete": {
        "parameters": [
          {
            "name": "scope-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "branch-auth"
        ]
      },
      "parameters": [
        {
          "name": "client-uuid",
          "in": "path",
          "description": "id of client (not client-id!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}/authz/resource-server/scope/{scope-id}/permissions": {
      "get": {
        "parameters": [
          {
            "name": "scope-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PolicyRepresentation"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        },
        "tags": [
          "branch-auth"
        ]
      },
      "parameters": [
        {
          "name": "client-uuid",
          "in": "path",
          "description": "id of client (not client-id!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}/authz/resource-server/scope/{scope-id}/resources": {
      "get": {
        "parameters": [
          {
            "name": "scope-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResourceRepresentation"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        },
        "tags": [
          "branch-auth"
        ]
      },
      "parameters": [
        {
          "name": "client-uuid",
          "in": "path",
          "description": "id of client (not client-id!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}/authz/resource-server/settings": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceServerRepresentation"
                }
              }
            }
          }
        },
        "tags": [
          "branch-auth"
        ]
      },
      "parameters": [
        {
          "name": "client-uuid",
          "in": "path",
          "description": "id of client (not client-id!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}/certificates/{attr}": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get key info",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CertificateRepresentation"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "client-uuid",
          "in": "path",
          "description": "id of client (not client-id!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "attr",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}/certificates/{attr}/download": {
      "post": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get a keystore file for the client, containing private key and public certificate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KeyStoreConfig"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "format": "binary",
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "client-uuid",
          "in": "path",
          "description": "id of client (not client-id!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "attr",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}/certificates/{attr}/generate": {
      "post": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Generate a new certificate with new key pair",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CertificateRepresentation"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "client-uuid",
          "in": "path",
          "description": "id of client (not client-id!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "attr",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}/certificates/{attr}/generate-and-download": {
      "post": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Generate a new keypair and certificate, and get the private key file\n\nGenerates a keypair and certificate and serves the private key in a specified keystore format.\nOnly generated public certificate is saved in Keycloak DB - the private key is not.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KeyStoreConfig"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "format": "binary",
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "client-uuid",
          "in": "path",
          "description": "id of client (not client-id!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "attr",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}/certificates/{attr}/upload": {
      "post": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Upload certificate and eventually private key",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CertificateRepresentation"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "client-uuid",
          "in": "path",
          "description": "id of client (not client-id!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "attr",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}/certificates/{attr}/upload-certificate": {
      "post": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Upload only certificate, not private key",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CertificateRepresentation"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "client-uuid",
          "in": "path",
          "description": "id of client (not client-id!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "attr",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}/client-secret": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get the client secret",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CredentialRepresentation"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Generate a new secret for the client",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CredentialRepresentation"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "client-uuid",
          "in": "path",
          "description": "id of client (not client-id!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}/client-secret/rotated": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get the rotated client secret",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CredentialRepresentation"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Invalidate the rotated secret for the client",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "parameters": [
        {
          "name": "client-uuid",
          "in": "path",
          "description": "id of client (not client-id!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}/default-client-scopes": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get default client scopes.  Only name and ids are returned.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientScopeRepresentation"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "client-uuid",
          "in": "path",
          "description": "id of client (not client-id!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}/default-client-scopes/{clientScopeId}": {
      "put": {
        "tags": [
          "branch-auth"
        ],
        "parameters": [
          {
            "name": "clientScopeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "delete": {
        "tags": [
          "branch-auth"
        ],
        "parameters": [
          {
            "name": "clientScopeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "parameters": [
        {
          "name": "client-uuid",
          "in": "path",
          "description": "id of client (not client-id!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}/evaluate-scopes/generate-example-access-token": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Create JSON with payload of example access token",
        "parameters": [
          {
            "name": "audience",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scope",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessToken"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "parameters": [
        {
          "name": "client-uuid",
          "in": "path",
          "description": "id of client (not client-id!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}/evaluate-scopes/generate-example-id-token": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Create JSON with payload of example id token",
        "parameters": [
          {
            "name": "audience",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scope",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IDToken"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "parameters": [
        {
          "name": "client-uuid",
          "in": "path",
          "description": "id of client (not client-id!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}/evaluate-scopes/generate-example-userinfo": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Create JSON with payload of example user info",
        "parameters": [
          {
            "name": "scope",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "parameters": [
        {
          "name": "client-uuid",
          "in": "path",
          "description": "id of client (not client-id!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}/evaluate-scopes/protocol-mappers": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Return list of all protocol mappers, which will be used when generating tokens issued for particular client.",
        "description": "This means protocol mappers assigned to this client directly and protocol mappers assigned to all client scopes of this client.",
        "parameters": [
          {
            "name": "scope",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProtocolMapperEvaluationRepresentation"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "parameters": [
        {
          "name": "client-uuid",
          "in": "path",
          "description": "id of client (not client-id!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}/evaluate-scopes/scope-mappings/{roleContainerId}/granted": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get effective scope mapping of all roles of particular role container, which this client is defacto allowed to have in the accessToken issued for him.",
        "description": "This contains scope mappings, which this client has directly, as well as scope mappings, which are granted to all client scopes, which are linked with this client.",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleRepresentation"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "parameters": [
        {
          "name": "client-uuid",
          "in": "path",
          "description": "id of client (not client-id!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "roleContainerId",
          "in": "path",
          "description": "either realm name OR client UUID",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "scope",
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}/evaluate-scopes/scope-mappings/{roleContainerId}/not-granted": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get roles, which this client doesn't have scope for and can't have them in the accessToken issued for him.",
        "description": "Defacto all the other roles of particular role container, which are not in {@link #getGrantedScopeMappings()}",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleRepresentation"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "parameters": [
        {
          "name": "client-uuid",
          "in": "path",
          "description": "id of client (not client-id!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "roleContainerId",
          "in": "path",
          "description": "either realm name OR client UUID",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "scope",
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}/installation/providers/{providerId}": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "parameters": [
          {
            "name": "providerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "parameters": [
        {
          "name": "client-uuid",
          "in": "path",
          "description": "id of client (not client-id!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}/management/permissions": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Return object stating whether client Authorization permissions have been initialized or not and a reference",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagementPermissionReference"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Return object stating whether client Authorization permissions have been initialized or not and a reference",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManagementPermissionReference"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagementPermissionReference"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "client-uuid",
          "in": "path",
          "description": "id of client (not client-id!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}/nodes": {
      "post": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Register a cluster node with the client Manually register cluster node to this client - usually it’s not needed to call this directly as adapter should handle by sending registration request to Keycloak",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "parameters": [
        {
          "name": "client-uuid",
          "in": "path",
          "description": "id of client (not client-id!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}/nodes/{node}": {
      "delete": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Unregister a cluster node from the client",
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "parameters": [
        {
          "name": "client-uuid",
          "in": "path",
          "description": "id of client (not client-id!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}/offline-session-count": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get application offline session count Returns a number of offline user sessions associated with this client { \"count\": number }",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "format": "int64",
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "client-uuid",
          "in": "path",
          "description": "id of client (not client-id!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}/offline-sessions": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get offline sessions for client Returns a list of offline user sessions associated with this client",
        "parameters": [
          {
            "name": "first",
            "in": "query",
            "description": "Paging offset",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "max",
            "in": "query",
            "description": "Maximum results size (defaults to 100)",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserSessionRepresentation"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "client-uuid",
          "in": "path",
          "description": "id of client (not client-id!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}/optional-client-scopes": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get optional client scopes.  Only name and ids are returned.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientScopeRepresentation"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "client-uuid",
          "in": "path",
          "description": "id of client (not client-id!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}/optional-client-scopes/{clientScopeId}": {
      "put": {
        "tags": [
          "branch-auth"
        ],
        "parameters": [
          {
            "name": "clientScopeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "delete": {
        "tags": [
          "branch-auth"
        ],
        "parameters": [
          {
            "name": "clientScopeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "parameters": [
        {
          "name": "client-uuid",
          "in": "path",
          "description": "id of client (not client-id!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}/protocol-mappers/add-models": {
      "post": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Create multiple mappers",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProtocolMapperRepresentation"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "parameters": [
        {
          "name": "client-uuid",
          "in": "path",
          "description": "id of client (not client-id!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}/protocol-mappers/models": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get mappers",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProtocolMapperRepresentation"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Create a mapper",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProtocolMapperRepresentation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "409": {
            "description": "Conflict"
          }
        }
      },
      "parameters": [
        {
          "name": "client-uuid",
          "in": "path",
          "description": "id of client (not client-id!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}/protocol-mappers/models/{id}": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get mapper by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Mapper id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProtocolMapperRepresentation"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Update the mapper",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Mapper id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProtocolMapperRepresentation"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "delete": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Delete the mapper",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Mapper id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "parameters": [
        {
          "name": "client-uuid",
          "in": "path",
          "description": "id of client (not client-id!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}/protocol-mappers/protocol/{protocol}": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get mappers by name for a specific protocol",
        "parameters": [
          {
            "name": "protocol",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProtocolMapperRepresentation"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "client-uuid",
          "in": "path",
          "description": "id of client (not client-id!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}/push-revocation": {
      "post": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Push the client's revocation policy to its admin URL If the client has an admin URL, push revocation policy to it.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalRequestResult"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "client-uuid",
          "in": "path",
          "description": "id of client (not client-id!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}/registration-access-token": {
      "post": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Generate a new registration access token for the client",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientRepresentation"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "client-uuid",
          "in": "path",
          "description": "id of client (not client-id!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}/roles": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get all roles for the realm or client",
        "parameters": [
          {
            "name": "briefRepresentation",
            "in": "query",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "name": "first",
            "in": "query",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "max",
            "in": "query",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "search",
            "in": "query",
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleRepresentation"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Create a new role for the realm or client",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleRepresentation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "parameters": [
        {
          "name": "client-uuid",
          "in": "path",
          "description": "id of client (not client-id!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}/roles/{role-name}": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get a role by name",
        "parameters": [
          {
            "name": "role-name",
            "in": "path",
            "description": "role's name (not id!)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleRepresentation"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Update a role by name",
        "parameters": [
          {
            "name": "role-name",
            "in": "path",
            "description": "role's name (not id!)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleRepresentation"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          }
        }
      },
      "delete": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Delete a role by name",
        "parameters": [
          {
            "name": "role-name",
            "in": "path",
            "description": "role's name (not id!)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "parameters": [
        {
          "name": "client-uuid",
          "in": "path",
          "description": "id of client (not client-id!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}/roles/{role-name}/composites": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get composites of the role",
        "parameters": [
          {
            "name": "role-name",
            "in": "path",
            "description": "role's name (not id!)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleRepresentation"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Add a composite to the role",
        "parameters": [
          {
            "name": "role-name",
            "in": "path",
            "description": "role's name (not id!)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RoleRepresentation"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Remove roles from the role's composite",
        "parameters": [
          {
            "name": "role-name",
            "in": "path",
            "description": "role's name (not id!)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RoleRepresentation"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "parameters": [
        {
          "name": "client-uuid",
          "in": "path",
          "description": "id of client (not client-id!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}/roles/{role-name}/composites/clients/{client-uuid}": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get client-level roles for the client that are in the role's composite",
        "parameters": [
          {
            "name": "client-uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "role-name",
            "in": "path",
            "description": "role's name (not id!)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleRepresentation"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}/roles/{role-name}/composites/realm": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get realm-level roles of the role's composite",
        "parameters": [
          {
            "name": "role-name",
            "in": "path",
            "description": "role's name (not id!)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleRepresentation"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "parameters": [
        {
          "name": "client-uuid",
          "in": "path",
          "description": "id of client (not client-id!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}/roles/{role-name}/groups": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Returns a stream of groups that have the specified role name",
        "parameters": [
          {
            "name": "role-name",
            "in": "path",
            "description": "the role name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "briefRepresentation",
            "in": "query",
            "description": "if false, return a full representation of the {@code GroupRepresentation} objects.",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "name": "first",
            "in": "query",
            "description": "first result to return. Ignored if negative or {@code null}.",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "max",
            "in": "query",
            "description": "maximum number of results to return. Ignored if negative or {@code null}.",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserRepresentation"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "parameters": [
        {
          "name": "client-uuid",
          "in": "path",
          "description": "id of client (not client-id!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}/roles/{role-name}/management/permissions": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Return object stating whether role Authorization permissions have been initialized or not and a reference",
        "parameters": [
          {
            "name": "role-name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagementPermissionReference"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Return object stating whether role Authorization permissions have been initialized or not and a reference",
        "parameters": [
          {
            "name": "role-name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManagementPermissionReference"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagementPermissionReference"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "parameters": [
        {
          "name": "client-uuid",
          "in": "path",
          "description": "id of client (not client-id!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}/roles/{role-name}/users": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Returns a stream of users that have the specified role name.",
        "parameters": [
          {
            "name": "role-name",
            "in": "path",
            "description": "the role name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "briefRepresentation",
            "in": "query",
            "description": "Boolean which defines whether brief representations are returned (default: false)",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "first",
            "in": "query",
            "description": "first result to return. Ignored if negative or {@code null}.",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "max",
            "in": "query",
            "description": "maximum number of results to return. Ignored if negative or {@code null}.",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserRepresentation"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "parameters": [
        {
          "name": "client-uuid",
          "in": "path",
          "description": "id of client (not client-id!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}/scope-mappings": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get all scope mappings for the client",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MappingsRepresentation"
                }
              }
            }
          }
        },
        "deprecated": true
      },
      "parameters": [
        {
          "name": "client-uuid",
          "in": "path",
          "description": "id of client (not client-id!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}/scope-mappings/clients/{client}": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get the roles associated with a client's scope Returns roles for the client.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleRepresentation"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Add client-level roles to the client's scope",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RoleRepresentation"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "delete": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Remove client-level roles from the client's scope.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RoleRepresentation"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "parameters": [
        {
          "name": "client-uuid",
          "in": "path",
          "description": "id of client (not client-id!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "client",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}/scope-mappings/clients/{client}/available": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "The available client-level roles Returns the roles for the client that can be associated with the client's scope",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleRepresentation"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "client-uuid",
          "in": "path",
          "description": "id of client (not client-id!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "client",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}/scope-mappings/clients/{client}/composite": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get effective client roles Returns the roles for the client that are associated with the client's scope.",
        "parameters": [
          {
            "name": "briefRepresentation",
            "in": "query",
            "description": "if false, return roles with their attributes",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleRepresentation"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "client-uuid",
          "in": "path",
          "description": "id of client (not client-id!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "client",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}/scope-mappings/realm": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get realm-level roles associated with the client's scope",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleRepresentation"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Add a set of realm-level roles to the client's scope",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RoleRepresentation"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "delete": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Remove a set of realm-level roles from the client's scope",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RoleRepresentation"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "parameters": [
        {
          "name": "client-uuid",
          "in": "path",
          "description": "id of client (not client-id!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}/scope-mappings/realm/available": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get realm-level roles that are available to attach to this client's scope",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleRepresentation"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "client-uuid",
          "in": "path",
          "description": "id of client (not client-id!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}/scope-mappings/realm/composite": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get effective realm-level roles associated with the client’s scope What this does is recurse any composite roles associated with the client’s scope and adds the roles to this lists.",
        "description": "The method is really to show a comprehensive total view of realm-level roles associated with the client.",
        "parameters": [
          {
            "name": "briefRepresentation",
            "in": "query",
            "description": "if false, return roles with their attributes",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleRepresentation"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "client-uuid",
          "in": "path",
          "description": "id of client (not client-id!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}/service-account-user": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get a user dedicated to the service account",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRepresentation"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "client-uuid",
          "in": "path",
          "description": "id of client (not client-id!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}/session-count": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get application session count Returns a number of user sessions associated with this client { \"count\": number }",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "format": "int64",
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "client-uuid",
          "in": "path",
          "description": "id of client (not client-id!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}/test-nodes-available": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Test if registered cluster nodes are available Tests availability by sending 'ping' request to all cluster nodes.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalRequestResult"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "client-uuid",
          "in": "path",
          "description": "id of client (not client-id!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/clients/{client-uuid}/user-sessions": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get user sessions for client Returns a list of user sessions associated with this client\n",
        "parameters": [
          {
            "name": "first",
            "in": "query",
            "description": "Paging offset",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "max",
            "in": "query",
            "description": "Maximum results size (defaults to 100)",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserSessionRepresentation"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "client-uuid",
          "in": "path",
          "description": "id of client (not client-id!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/components": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "parent",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ComponentRepresentation"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "branch-auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentRepresentation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/components/{id}": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentRepresentation"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "branch-auth"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentRepresentation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "branch-auth"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/components/{id}/sub-component-types": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "List of subcomponent types that are available to configure for a particular parent component.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ComponentTypeRepresentation"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/credential-registrators": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/default-default-client-scopes": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get realm default client scopes. Only name and ids are returned.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientScopeRepresentation"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/default-default-client-scopes/{clientScopeId}": {
      "put": {
        "tags": [
          "branch-auth"
        ],
        "parameters": [
          {
            "name": "clientScopeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "branch-auth"
        ],
        "parameters": [
          {
            "name": "clientScopeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/default-groups": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get group hierarchy.  Only name and ids are returned.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GroupRepresentation"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/default-groups/{groupId}": {
      "put": {
        "tags": [
          "branch-auth"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "branch-auth"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/default-optional-client-scopes": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get realm optional client scopes. Only name and ids are returned.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientScopeRepresentation"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/default-optional-client-scopes/{clientScopeId}": {
      "put": {
        "tags": [
          "branch-auth"
        ],
        "parameters": [
          {
            "name": "clientScopeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "branch-auth"
        ],
        "parameters": [
          {
            "name": "clientScopeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/events": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get events Returns all events, or filters them based on URL query parameters listed here",
        "parameters": [
          {
            "name": "client",
            "in": "query",
            "description": "App or oauth client name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateFrom",
            "in": "query",
            "description": "From (inclusive) date (yyyy-MM-dd) or time in Epoch timestamp millis (number of milliseconds since January 1, 1970, 00:00:00 GMT)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateTo",
            "in": "query",
            "description": "To (inclusive) date (yyyy-MM-dd) or time in Epoch timestamp millis (number of milliseconds since January 1, 1970, 00:00:00 GMT)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "direction",
            "in": "query",
            "description": "The direction to sort events by (asc or desc)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "first",
            "in": "query",
            "description": "Paging offset",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "ipAddress",
            "in": "query",
            "description": "IP Address",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "max",
            "in": "query",
            "description": "Maximum results size (defaults to 100)",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "The types of events to return",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "user",
            "in": "query",
            "description": "User id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventRepresentation"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Delete all events",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/events/config": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get the events provider configuration Returns JSON object with events provider configuration",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealmEventsConfigRepresentation"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "put": {
        "tags": [
          "branch-auth"
        ],
        "description": "Update the events provider Change the events provider and/or its configuration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RealmEventsConfigRepresentation"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/group-by-path/{path}": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": ".*",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupRepresentation"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/groups": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get group hierarchy.  Only `name` and `id` are returned.  `subGroups` are only returned when using the `search` or `q` parameter. If none of these parameters is provided, the top-level groups are returned without `subGroups` being filled.",
        "parameters": [
          {
            "name": "briefRepresentation",
            "in": "query",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "name": "exact",
            "in": "query",
            "schema": {
              "default": "false",
              "type": "boolean"
            }
          },
          {
            "name": "first",
            "in": "query",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "max",
            "in": "query",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "populateHierarchy",
            "in": "query",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subGroupsCount",
            "in": "query",
            "description": "Boolean which defines whether to return the count of subgroups for each group (default: true",
            "schema": {
              "default": "true",
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GroupRepresentation"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "branch-auth"
        ],
        "summary": "create or add a top level realm groupSet or create child.",
        "description": "This will update the group and set the parent if it exists. Create it and set the parent if the group doesn’t exist.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupRepresentation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "409": {
            "description": "Conflict"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/groups/count": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Returns the groups counts.",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "top",
            "in": "query",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "format": "int64",
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/groups/{group-id}": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupRepresentation"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Update group, ignores subgroups.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupRepresentation"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "409": {
            "description": "Conflict"
          }
        }
      },
      "delete": {
        "tags": [
          "branch-auth"
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "parameters": [
        {
          "name": "group-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/groups/{group-id}/children": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Return a paginated list of subgroups that have a parent group corresponding to the group on the URL",
        "parameters": [
          {
            "name": "briefRepresentation",
            "in": "query",
            "description": "Boolean which defines whether brief groups representations are returned or not (default: false)",
            "schema": {
              "default": "false",
              "type": "boolean"
            }
          },
          {
            "name": "exact",
            "in": "query",
            "description": "Boolean which defines whether the params \"search\" must match exactly or not",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "first",
            "in": "query",
            "description": "The position of the first result to be returned (pagination offset).",
            "schema": {
              "format": "int32",
              "default": "0",
              "type": "integer"
            }
          },
          {
            "name": "max",
            "in": "query",
            "description": "The maximum number of results that are to be returned. Defaults to 10",
            "schema": {
              "format": "int32",
              "default": "10",
              "type": "integer"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "A String representing either an exact group name or a partial name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subGroupsCount",
            "in": "query",
            "description": "Boolean which defines whether to return the count of subgroups for each subgroup of this group (default: true",
            "schema": {
              "default": "true",
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GroupRepresentation"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Set or create child.",
        "description": "This will just set the parent if it exists. Create it and set the parent if the group doesn’t exist.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupRepresentation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "409": {
            "description": "Conflict"
          }
        }
      },
      "parameters": [
        {
          "name": "group-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/groups/{group-id}/management/permissions": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Return object stating whether client Authorization permissions have been initialized or not and a reference",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagementPermissionReference"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Return object stating whether client Authorization permissions have been initialized or not and a reference",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManagementPermissionReference"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagementPermissionReference"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "group-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/groups/{group-id}/members": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get users Returns a stream of users, filtered according to query parameters",
        "parameters": [
          {
            "name": "briefRepresentation",
            "in": "query",
            "description": "Only return basic information (only guaranteed to return id, username, created, first and last name, email, enabled state, email verification state, federation link, and access. Note that it means that namely user attributes, required actions, and not before are not returned.)",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "first",
            "in": "query",
            "description": "Pagination offset",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "max",
            "in": "query",
            "description": "Maximum results size (defaults to 100)",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserRepresentation"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "group-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/groups/{group-id}/role-mappings": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get role mappings",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MappingsRepresentation"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "parameters": [
        {
          "name": "group-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/groups/{group-id}/role-mappings/clients/{client-id}": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get client-level role mappings for the user or group, and the app",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleRepresentation"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Add client-level roles to the user or group role mapping",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RoleRepresentation"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "delete": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Delete client-level roles from user or group role mapping",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RoleRepresentation"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "parameters": [
        {
          "name": "group-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "client-id",
          "in": "path",
          "description": "client id (not clientId!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/groups/{group-id}/role-mappings/clients/{client-id}/available": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get available client-level roles that can be mapped to the user or group",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleRepresentation"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "group-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "client-id",
          "in": "path",
          "description": "client id (not clientId!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/groups/{group-id}/role-mappings/clients/{client-id}/composite": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get effective client-level role mappings This recurses any composite roles",
        "parameters": [
          {
            "name": "briefRepresentation",
            "in": "query",
            "description": "if false, return roles with their attributes",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleRepresentation"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "group-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "client-id",
          "in": "path",
          "description": "client id (not clientId!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/groups/{group-id}/role-mappings/realm": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get realm-level role mappings",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleRepresentation"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Add realm-level role mappings to the user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RoleRepresentation"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Delete realm-level role mappings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RoleRepresentation"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "parameters": [
        {
          "name": "group-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/groups/{group-id}/role-mappings/realm/available": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get realm-level roles that can be mapped",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleRepresentation"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "parameters": [
        {
          "name": "group-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/groups/{group-id}/role-mappings/realm/composite": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get effective realm-level role mappings This will recurse all composite roles to get the result.",
        "parameters": [
          {
            "name": "briefRepresentation",
            "in": "query",
            "description": "if false, return roles with their attributes",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleRepresentation"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "parameters": [
        {
          "name": "group-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/identity-provider/import-config": {
      "post": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Import identity provider from JSON body",
        "description": "Import identity provider from uploaded JSON file",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {}
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/identity-provider/instances": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "List identity providers",
        "parameters": [
          {
            "name": "briefRepresentation",
            "in": "query",
            "description": "Boolean which defines whether brief representations are returned (default: false)",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "first",
            "in": "query",
            "description": "Pagination offset",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "max",
            "in": "query",
            "description": "Maximum results size (defaults to 100)",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "realmOnly",
            "in": "query",
            "description": "Boolean which defines if only realm-level IDPs (not associated with orgs) should be returned (default: false)",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Filter specific providers by name. Search can be prefix (name*), contains (*name*) or exact (\"name\"). Default prefixed.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IdentityProviderRepresentation"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Create a new identity provider",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdentityProviderRepresentation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "409": {
            "description": "Conflict"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/identity-provider/instances/{alias}": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get the identity provider",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdentityProviderRepresentation"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Update the identity provider",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdentityProviderRepresentation"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "409": {
            "description": "Conflict"
          }
        }
      },
      "delete": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Delete the identity provider",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "parameters": [
        {
          "name": "alias",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/identity-provider/instances/{alias}/export": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Export public broker configuration for identity provider",
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "description": "Format to use",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "parameters": [
        {
          "name": "alias",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/identity-provider/instances/{alias}/management/permissions": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Return object stating whether client Authorization permissions have been initialized or not and a reference",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagementPermissionReference"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Return object stating whether client Authorization permissions have been initialized or not and a reference",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManagementPermissionReference"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagementPermissionReference"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "alias",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/identity-provider/instances/{alias}/mapper-types": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get mapper types for identity provider",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/IdentityProviderMapperTypeRepresentation"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "alias",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/identity-provider/instances/{alias}/mappers": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get mappers for identity provider",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IdentityProviderMapperRepresentation"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Add a mapper to identity provider",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdentityProviderMapperRepresentation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "parameters": [
        {
          "name": "alias",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/identity-provider/instances/{alias}/mappers/{id}": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get mapper by id for the identity provider",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdentityProviderMapperRepresentation"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Update a mapper for the identity provider",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Mapper id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdentityProviderMapperRepresentation"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "delete": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Delete a mapper for the identity provider",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Mapper id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "parameters": [
        {
          "name": "alias",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/identity-provider/instances/{alias}/reload-keys": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Reaload keys for the identity provider if the provider supports it, \"true\" is returned if reload was performed, \"false\" if not.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "alias",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/identity-provider/providers/{provider_id}": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get the identity provider factory for that provider id",
        "parameters": [
          {
            "name": "provider_id",
            "in": "path",
            "description": "The provider id to get the factory",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/keys": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KeysMetadataRepresentation"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/localization": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/localization/{locale}": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useRealmDefaultLocaleFallback",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "deprecated": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Import localization from uploaded JSON file",
        "parameters": [
          {
            "name": "locale",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "tags": [
          "branch-auth"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/localization/{locale}/{key}": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "locale",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "branch-auth"
        ],
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "locale",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "tags": [
          "branch-auth"
        ],
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "locale",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/logout-all": {
      "post": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Removes all user sessions.",
        "description": "Any client that has an admin url will also be told to invalidate any sessions they have.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalRequestResult"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/organizations": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Returns a paginated list of organizations filtered according to the specified parameters",
        "parameters": [
          {
            "name": "briefRepresentation",
            "in": "query",
            "description": "if false, return the full representation. Otherwise, only the basic fields are returned.",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "name": "exact",
            "in": "query",
            "description": "Boolean which defines whether the param 'search' must match exactly or not",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "first",
            "in": "query",
            "description": "The position of the first result to be processed (pagination offset)",
            "schema": {
              "format": "int32",
              "default": "0",
              "type": "integer"
            }
          },
          {
            "name": "max",
            "in": "query",
            "description": "The maximum number of results to be returned - defaults to 10",
            "schema": {
              "format": "int32",
              "default": "10",
              "type": "integer"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "A query to search for custom attributes, in the format 'key1:value2 key2:value2'",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "A String representing either an organization name or domain",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganizationRepresentation"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Creates a new organization",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationRepresentation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/organizations/count": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Returns the organizations counts.",
        "parameters": [
          {
            "name": "exact",
            "in": "query",
            "description": "Boolean which defines whether the param 'search' must match exactly or not",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "A query to search for custom attributes, in the format 'key1:value2 key2:value2'",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "A String representing either an organization name or domain",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "format": "int64",
                  "type": "integer"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/organizations/members/{member-id}/organizations": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Returns the organizations associated with the user that has the specified id",
        "parameters": [
          {
            "name": "member-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "briefRepresentation",
            "in": "query",
            "description": "if false, return the full representation. Otherwise, only the basic fields are returned.",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganizationRepresentation"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/organizations/{org-id}": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Returns the organization representation",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationRepresentation"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Updates the organization",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationRepresentation"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "409": {
            "description": "Conflict"
          }
        }
      },
      "delete": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Deletes the organization",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "parameters": [
        {
          "name": "org-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/organizations/{org-id}/identity-providers": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Returns all identity providers associated with the organization",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IdentityProviderRepresentation"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Adds the identity provider with the specified id to the organization",
        "description": "Adds, or associates, an existing identity provider with the organization. If no identity provider is found, or if it is already associated with the organization, an error response is returned",
        "requestBody": {
          "description": "Payload should contain only id or alias of the identity provider to be associated with the organization (id or alias with or without quotes). Surrounding whitespace characters will be trimmed.",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "409": {
            "description": "Conflict"
          }
        }
      },
      "parameters": [
        {
          "name": "org-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/organizations/{org-id}/identity-providers/{alias}": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Returns the identity provider associated with the organization that has the specified alias",
        "description": "Searches for an identity provider with the given alias. If one is found and is associated with the organization, it is returned. Otherwise, an error response with status NOT_FOUND is returned",
        "parameters": [
          {
            "name": "alias",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdentityProviderRepresentation"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Removes the identity provider with the specified alias from the organization",
        "description": "Breaks the association between the identity provider and the organization. The provider itself is not deleted. If no provider is found, or if it is not currently associated with the org, an error response is returned",
        "parameters": [
          {
            "name": "alias",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "parameters": [
        {
          "name": "org-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/organizations/{org-id}/members": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Returns a paginated list of organization members filtered according to the specified parameters",
        "parameters": [
          {
            "name": "exact",
            "in": "query",
            "description": "Boolean which defines whether the param 'search' must match exactly or not",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "first",
            "in": "query",
            "description": "The position of the first result to be processed (pagination offset)",
            "schema": {
              "format": "int32",
              "default": "0",
              "type": "integer"
            }
          },
          {
            "name": "max",
            "in": "query",
            "description": "The maximum number of results to be returned. Defaults to 10",
            "schema": {
              "format": "int32",
              "default": "10",
              "type": "integer"
            }
          },
          {
            "name": "membershipType",
            "in": "query",
            "description": "The membership type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "A String representing either a member's username, e-mail, first name, or last name.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MemberRepresentation"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Adds the user with the specified id as a member of the organization",
        "description": "Adds, or associates, an existing user with the organization. If no user is found, or if it is already associated with the organization, an error response is returned",
        "requestBody": {
          "description": "Payload should contain only id of the user to be added to the organization (UUID with or without quotes). Surrounding whitespace characters will be trimmed.",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "409": {
            "description": "Conflict"
          }
        }
      },
      "parameters": [
        {
          "name": "org-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/organizations/{org-id}/members/count": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Returns number of members in the organization.",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "format": "int64",
                  "type": "integer"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "org-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/organizations/{org-id}/members/invite-existing-user": {
      "post": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Invites an existing user to the organization, using the specified user id",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "parameters": [
        {
          "name": "org-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/organizations/{org-id}/members/invite-user": {
      "post": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Invites an existing user or sends a registration link to a new user, based on the provided e-mail address.",
        "description": "If the user with the given e-mail address exists, it sends an invitation link, otherwise it sends a registration link.",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "parameters": [
        {
          "name": "org-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/organizations/{org-id}/members/{member-id}": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Returns the member of the organization with the specified id",
        "description": "Searches for auser with the given id. If one is found, and is currently a member of the organization, returns it. Otherwise,an error response with status NOT_FOUND is returned",
        "parameters": [
          {
            "name": "member-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberRepresentation"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Removes the user with the specified id from the organization",
        "description": "Breaks the association between the user and organization. The user itself is deleted in case the membership is managed, otherwise the user is not deleted. If no user is found, or if they are not a member of the organization, an error response is returned",
        "parameters": [
          {
            "name": "member-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "parameters": [
        {
          "name": "org-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/organizations/{org-id}/members/{member-id}/organizations": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Returns the organizations associated with the user that has the specified id",
        "parameters": [
          {
            "name": "member-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "briefRepresentation",
            "in": "query",
            "description": "if false, return the full representation. Otherwise, only the basic fields are returned.",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganizationRepresentation"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "parameters": [
        {
          "name": "org-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/partial-export": {
      "post": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Partial export of existing realm into a JSON file.",
        "parameters": [
          {
            "name": "exportClients",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "exportGroupsAndRoles",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealmRepresentation"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/partialImport": {
      "post": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Partial import from a JSON file to an existing realm.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "format": "binary",
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "409": {
            "description": "Conflict"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/push-revocation": {
      "post": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Push the realm's revocation policy to any client that has an admin url associated with it.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalRequestResult"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/roles": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get all roles for the realm or client",
        "parameters": [
          {
            "name": "briefRepresentation",
            "in": "query",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "name": "first",
            "in": "query",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "max",
            "in": "query",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "search",
            "in": "query",
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleRepresentation"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Create a new role for the realm or client",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleRepresentation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/roles-by-id/{role-id}": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get a specific role's representation",
        "parameters": [
          {
            "name": "role-id",
            "in": "path",
            "description": "id of role",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleRepresentation"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "put": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Update the role",
        "parameters": [
          {
            "name": "role-id",
            "in": "path",
            "description": "id of role",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleRepresentation"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Delete the role",
        "parameters": [
          {
            "name": "role-id",
            "in": "path",
            "description": "id of role",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/roles-by-id/{role-id}/composites": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get role's children Returns a set of role's children provided the role is a composite.",
        "parameters": [
          {
            "name": "role-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "first",
            "in": "query",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "max",
            "in": "query",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleRepresentation"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Make the role a composite role by associating some child roles",
        "parameters": [
          {
            "name": "role-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RoleRepresentation"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Remove a set of roles from the role's composite",
        "parameters": [
          {
            "name": "role-id",
            "in": "path",
            "description": "Role id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RoleRepresentation"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/roles-by-id/{role-id}/composites/clients/{clientUuid}": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get client-level roles for the client that are in the role's composite",
        "parameters": [
          {
            "name": "clientUuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "role-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleRepresentation"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/roles-by-id/{role-id}/composites/realm": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get realm-level roles that are in the role's composite",
        "parameters": [
          {
            "name": "role-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleRepresentation"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/roles-by-id/{role-id}/management/permissions": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Return object stating whether role Authorization permissions have been initialized or not and a reference",
        "parameters": [
          {
            "name": "role-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagementPermissionReference"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "put": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Return object stating whether role Authorization permissions have been initialized or not and a reference",
        "parameters": [
          {
            "name": "role-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManagementPermissionReference"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagementPermissionReference"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/roles/{role-name}": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get a role by name",
        "parameters": [
          {
            "name": "role-name",
            "in": "path",
            "description": "role's name (not id!)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleRepresentation"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Update a role by name",
        "parameters": [
          {
            "name": "role-name",
            "in": "path",
            "description": "role's name (not id!)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleRepresentation"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          }
        }
      },
      "delete": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Delete a role by name",
        "parameters": [
          {
            "name": "role-name",
            "in": "path",
            "description": "role's name (not id!)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/roles/{role-name}/composites": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get composites of the role",
        "parameters": [
          {
            "name": "role-name",
            "in": "path",
            "description": "role's name (not id!)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleRepresentation"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Add a composite to the role",
        "parameters": [
          {
            "name": "role-name",
            "in": "path",
            "description": "role's name (not id!)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RoleRepresentation"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Remove roles from the role's composite",
        "parameters": [
          {
            "name": "role-name",
            "in": "path",
            "description": "role's name (not id!)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RoleRepresentation"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/roles/{role-name}/composites/clients/{client-uuid}": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get client-level roles for the client that are in the role's composite",
        "parameters": [
          {
            "name": "client-uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "role-name",
            "in": "path",
            "description": "role's name (not id!)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleRepresentation"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/roles/{role-name}/composites/realm": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get realm-level roles of the role's composite",
        "parameters": [
          {
            "name": "role-name",
            "in": "path",
            "description": "role's name (not id!)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleRepresentation"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/roles/{role-name}/groups": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Returns a stream of groups that have the specified role name",
        "parameters": [
          {
            "name": "role-name",
            "in": "path",
            "description": "the role name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "briefRepresentation",
            "in": "query",
            "description": "if false, return a full representation of the {@code GroupRepresentation} objects.",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "name": "first",
            "in": "query",
            "description": "first result to return. Ignored if negative or {@code null}.",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "max",
            "in": "query",
            "description": "maximum number of results to return. Ignored if negative or {@code null}.",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserRepresentation"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/roles/{role-name}/management/permissions": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Return object stating whether role Authorization permissions have been initialized or not and a reference",
        "parameters": [
          {
            "name": "role-name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagementPermissionReference"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Return object stating whether role Authorization permissions have been initialized or not and a reference",
        "parameters": [
          {
            "name": "role-name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManagementPermissionReference"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagementPermissionReference"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/roles/{role-name}/users": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Returns a stream of users that have the specified role name.",
        "parameters": [
          {
            "name": "role-name",
            "in": "path",
            "description": "the role name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "briefRepresentation",
            "in": "query",
            "description": "Boolean which defines whether brief representations are returned (default: false)",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "first",
            "in": "query",
            "description": "first result to return. Ignored if negative or {@code null}.",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "max",
            "in": "query",
            "description": "maximum number of results to return. Ignored if negative or {@code null}.",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserRepresentation"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/sessions/{session}": {
      "delete": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Remove a specific user session.",
        "description": "Any client that has an admin url will also be told to invalidate this particular session.",
        "parameters": [
          {
            "name": "session",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isOffline",
            "in": "query",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/testSMTPConnection": {
      "post": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Test SMTP connection with current logged in user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "config": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/users": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get users Returns a stream of users, filtered according to query parameters.",
        "parameters": [
          {
            "name": "briefRepresentation",
            "in": "query",
            "description": "Boolean which defines whether brief representations are returned (default: false)",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "email",
            "in": "query",
            "description": "A String contained in email, or the complete email, if param \"exact\" is true",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "emailVerified",
            "in": "query",
            "description": "whether the email has been verified",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "enabled",
            "in": "query",
            "description": "Boolean representing if user is enabled or not",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "exact",
            "in": "query",
            "description": "Boolean which defines whether the params \"last\", \"first\", \"email\" and \"username\" must match exactly",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "first",
            "in": "query",
            "description": "Pagination offset",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "firstName",
            "in": "query",
            "description": "A String contained in firstName, or the complete firstName, if param \"exact\" is true",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "idpAlias",
            "in": "query",
            "description": "The alias of an Identity Provider linked to the user",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "idpUserId",
            "in": "query",
            "description": "The userId at an Identity Provider linked to the user",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastName",
            "in": "query",
            "description": "A String contained in lastName, or the complete lastName, if param \"exact\" is true",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "max",
            "in": "query",
            "description": "Maximum results size (defaults to 100)",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "A query to search for custom attributes, in the format 'key1:value2 key2:value2'",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "A String contained in username, first or last name, or email. Default search behavior is prefix-based (e.g., foo or foo*). Use *foo* for infix search and \"foo\" for exact search.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "username",
            "in": "query",
            "description": "A String contained in username, or the complete username, if param \"exact\" is true",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserRepresentation"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Create a new user Username must be unique.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRepresentation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "403": {
            "description": "Forbidden"
          },
          "409": {
            "description": "Conflict",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/users-management-permissions": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagementPermissionReference"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "put": {
        "tags": [
          "branch-auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManagementPermissionReference"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagementPermissionReference"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/users/count": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Returns the number of users that match the given criteria.",
        "description": "It can be called in three different ways. 1. Don’t specify any criteria and pass {@code null}. The number of all users within that realm will be returned. <p> 2. If {@code search} is specified other criteria such as {@code last} will be ignored even though you set them. The {@code search} string will be matched against the first and last name, the username and the email of a user. <p> 3. If {@code search} is unspecified but any of {@code last}, {@code first}, {@code email} or {@code username} those criteria are matched against their respective fields on a user entity. Combined with a logical and.",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "A String contained in email, or the complete email, if param \"exact\" is true",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "emailVerified",
            "in": "query",
            "description": "whether the email has been verified",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "enabled",
            "in": "query",
            "description": "Boolean representing if user is enabled or not",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "exact",
            "in": "query",
            "description": "Boolean which defines whether the params \"last\", \"first\", \"email\" and \"username\" must match exactly",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "firstName",
            "in": "query",
            "description": "A String contained in firstName, or the complete firstName, if param \"exact\" is true",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "idpAlias",
            "in": "query",
            "description": "The alias of an Identity Provider linked to the user",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "idpUserId",
            "in": "query",
            "description": "The userId at an Identity Provider linked to the user",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastName",
            "in": "query",
            "description": "A String contained in lastName, or the complete lastName, if param \"exact\" is true",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "A query to search for custom attributes, in the format 'key1:value2 key2:value2'",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "A String contained in username, first or last name, or email. Default search behavior is prefix-based (e.g., foo or foo*). Use *foo* for infix search and \"foo\" for exact search.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "username",
            "in": "query",
            "description": "A String contained in username, or the complete username, if param \"exact\" is true",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/users/profile": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "description": "Get the configuration for the user profile",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UPConfig"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "put": {
        "tags": [
          "branch-auth"
        ],
        "description": "Set the configuration for the user profile",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UPConfig"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UPConfig"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/users/profile/metadata": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "description": "Get the UserProfileMetadata from the configuration",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileMetadata"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "parameters": [
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/users/{user-id}": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get representation of the user",
        "parameters": [
          {
            "name": "userProfileMetadata",
            "in": "query",
            "description": "Indicates if the user profile metadata should be added to the response",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRepresentation"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "put": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Update the user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRepresentation"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "403": {
            "description": "Forbidden"
          },
          "409": {
            "description": "Conflict",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Delete the user",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "parameters": [
        {
          "name": "user-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/users/{user-id}/configured-user-storage-credential-types": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Return credential types, which are provided by the user storage where user is stored.",
        "description": "Returned values can contain for example \"password\", \"otp\" etc. This will always return empty list for \"local\" users, which are not backed by any user storage",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "parameters": [
        {
          "name": "user-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/users/{user-id}/consents": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get consents granted by the user",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {}
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "parameters": [
        {
          "name": "user-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/users/{user-id}/consents/{client}": {
      "delete": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Revoke consent and offline tokens for particular client from user",
        "parameters": [
          {
            "name": "client",
            "in": "path",
            "description": "Client id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "parameters": [
        {
          "name": "user-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/users/{user-id}/credentials": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CredentialRepresentation"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "parameters": [
        {
          "name": "user-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/users/{user-id}/credentials/{credentialId}": {
      "delete": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Remove a credential for a user",
        "parameters": [
          {
            "name": "credentialId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "parameters": [
        {
          "name": "user-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/users/{user-id}/credentials/{credentialId}/moveAfter/{newPreviousCredentialId}": {
      "post": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Move a credential to a position behind another credential",
        "parameters": [
          {
            "name": "credentialId",
            "in": "path",
            "description": "The credential to move",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "newPreviousCredentialId",
            "in": "path",
            "description": "The credential that will be the previous element in the list. If set to null, the moved credential will be the first element in the list.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "parameters": [
        {
          "name": "user-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/users/{user-id}/credentials/{credentialId}/moveToFirst": {
      "post": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Move a credential to a first position in the credentials list of the user",
        "parameters": [
          {
            "name": "credentialId",
            "in": "path",
            "description": "The credential to move",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "parameters": [
        {
          "name": "user-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/users/{user-id}/credentials/{credentialId}/userLabel": {
      "put": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Update a credential label for a user",
        "parameters": [
          {
            "name": "credentialId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "parameters": [
        {
          "name": "user-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/users/{user-id}/disable-credential-types": {
      "put": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Disable all credentials for a user of a specific type",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "parameters": [
        {
          "name": "user-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/users/{user-id}/execute-actions-email": {
      "put": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Send an email to the user with a link they can click to execute particular actions.",
        "description": "An email contains a link the user can click to perform a set of required actions. The redirectUri and clientId parameters are optional. If no redirect is given, then there will be no link back to click after actions have completed. Redirect uri must be a valid uri for the particular clientId.",
        "parameters": [
          {
            "name": "client_id",
            "in": "query",
            "description": "Client id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lifespan",
            "in": "query",
            "description": "Number of seconds after which the generated token expires",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "redirect_uri",
            "in": "query",
            "description": "Redirect uri",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "parameters": [
        {
          "name": "user-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/users/{user-id}/federated-identity": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get social logins associated with the user",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FederatedIdentityRepresentation"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "parameters": [
        {
          "name": "user-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/users/{user-id}/federated-identity/{provider}": {
      "post": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Add a social login provider to the user",
        "parameters": [
          {
            "name": "provider",
            "in": "path",
            "description": "Social login provider id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FederatedIdentityRepresentation"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          },
          "409": {
            "description": "Conflict",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Remove a social login provider from user",
        "parameters": [
          {
            "name": "provider",
            "in": "path",
            "description": "Social login provider id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "parameters": [
        {
          "name": "user-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/users/{user-id}/groups": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "parameters": [
          {
            "name": "briefRepresentation",
            "in": "query",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "name": "first",
            "in": "query",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "max",
            "in": "query",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GroupRepresentation"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "parameters": [
        {
          "name": "user-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/users/{user-id}/groups/count": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "format": "int64",
                    "type": "integer"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "parameters": [
        {
          "name": "user-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/users/{user-id}/groups/{groupId}": {
      "put": {
        "tags": [
          "branch-auth"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "branch-auth"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "parameters": [
        {
          "name": "user-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/users/{user-id}/impersonation": {
      "post": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Impersonate the user",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {}
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorRepresentation"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "parameters": [
        {
          "name": "user-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/users/{user-id}/logout": {
      "post": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Remove all user sessions associated with the user Also send notification to all clients that have an admin URL to invalidate the sessions for the particular user.",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "parameters": [
        {
          "name": "user-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/users/{user-id}/offline-sessions/{clientUuid}": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get offline sessions associated with the user and client",
        "parameters": [
          {
            "name": "clientUuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserSessionRepresentation"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "parameters": [
        {
          "name": "user-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/users/{user-id}/reset-password": {
      "put": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Set up a new password for the user.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CredentialRepresentation"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "parameters": [
        {
          "name": "user-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/users/{user-id}/reset-password-email": {
      "put": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Send an email to the user with a link they can click to reset their password.",
        "description": "The redirectUri and clientId parameters are optional. The default for the redirect is the account client. This endpoint has been deprecated.  Please use the execute-actions-email passing a list with UPDATE_PASSWORD within it.",
        "parameters": [
          {
            "name": "client_id",
            "in": "query",
            "description": "client id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "redirect_uri",
            "in": "query",
            "description": "redirect uri",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        },
        "deprecated": true
      },
      "parameters": [
        {
          "name": "user-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/users/{user-id}/role-mappings": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get role mappings",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MappingsRepresentation"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "parameters": [
        {
          "name": "user-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/users/{user-id}/role-mappings/clients/{client-id}": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get client-level role mappings for the user or group, and the app",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleRepresentation"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Add client-level roles to the user or group role mapping",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RoleRepresentation"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "delete": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Delete client-level roles from user or group role mapping",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RoleRepresentation"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "parameters": [
        {
          "name": "user-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "client-id",
          "in": "path",
          "description": "client id (not clientId!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/users/{user-id}/role-mappings/clients/{client-id}/available": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get available client-level roles that can be mapped to the user or group",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleRepresentation"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "user-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "client-id",
          "in": "path",
          "description": "client id (not clientId!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/users/{user-id}/role-mappings/clients/{client-id}/composite": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get effective client-level role mappings This recurses any composite roles",
        "parameters": [
          {
            "name": "briefRepresentation",
            "in": "query",
            "description": "if false, return roles with their attributes",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleRepresentation"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "user-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "client-id",
          "in": "path",
          "description": "client id (not clientId!)",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/users/{user-id}/role-mappings/realm": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get realm-level role mappings",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleRepresentation"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Add realm-level role mappings to the user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RoleRepresentation"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Delete realm-level role mappings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RoleRepresentation"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "parameters": [
        {
          "name": "user-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/users/{user-id}/role-mappings/realm/available": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get realm-level roles that can be mapped",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleRepresentation"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "parameters": [
        {
          "name": "user-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/users/{user-id}/role-mappings/realm/composite": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get effective realm-level role mappings This will recurse all composite roles to get the result.",
        "parameters": [
          {
            "name": "briefRepresentation",
            "in": "query",
            "description": "if false, return roles with their attributes",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleRepresentation"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "parameters": [
        {
          "name": "user-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/users/{user-id}/send-verify-email": {
      "put": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Send an email-verification email to the user An email contains a link the user can click to verify their email address.",
        "description": "The redirectUri, clientId and lifespan parameters are optional. The default for the redirect is the account client. The default for the lifespan is 12 hours",
        "parameters": [
          {
            "name": "client_id",
            "in": "query",
            "description": "Client id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lifespan",
            "in": "query",
            "description": "Number of seconds after which the generated token expires",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "redirect_uri",
            "in": "query",
            "description": "Redirect uri",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "parameters": [
        {
          "name": "user-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/users/{user-id}/sessions": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "summary": "Get sessions associated with the user",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserSessionRepresentation"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "parameters": [
        {
          "name": "user-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    },
    "/organizations/{organization_id}/projects/{project_id}/branches/{branch_id}/auth/users/{user-id}/unmanagedAttributes": {
      "get": {
        "tags": [
          "branch-auth"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "parameters": [
        {
          "name": "user-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "organization_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Organization Id"
          }
        },
        {
          "name": "branch_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Branch Id"
          }
        },
        {
          "name": "project_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid",
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "minLength": 26,
            "maxLength": 26,
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ],
            "title": "Project Id"
          }
        }
      ]
    }
  },
  "components": {
    "schemas": {
      "AccessCheckRequest": {
        "properties": {
          "access": {
            "type": "string",
            "title": "Access"
          },
          "project_id": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 26,
                "minLength": 26,
                "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
                "format": "ulid",
                "title": "ULID",
                "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
                "examples": [
                  "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                  "01H945P9C3K2QJ8F7N6M4R2E8V"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Project Id"
          },
          "branch_id": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 26,
                "minLength": 26,
                "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
                "format": "ulid",
                "title": "ULID",
                "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
                "examples": [
                  "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                  "01H945P9C3K2QJ8F7N6M4R2E8V"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Branch Id"
          },
          "env_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Env Type"
          }
        },
        "type": "object",
        "required": [
          "access"
        ],
        "title": "AccessCheckRequest"
      },
      "Action": {
        "properties": {
          "metadata": {
            "items": {
              "$ref": "#/components/schemas/ActionMetadata"
            },
            "type": "array",
            "title": "Metadata"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "metadata",
          "name"
        ],
        "title": "Action"
      },
      "ActionMetadata": {
        "properties": {
          "method": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Method"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          }
        },
        "type": "object",
        "required": [
          "method",
          "status"
        ],
        "title": "ActionMetadata"
      },
      "Actor": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "type": {
            "anyOf": [
              {
                "type": "string",
                "const": "user"
              },
              {
                "type": "string"
              }
            ],
            "title": "Type"
          },
          "metadata": {
            "items": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "email"
                },
                {
                  "type": "null"
                }
              ]
            },
            "type": "array",
            "title": "Metadata"
          }
        },
        "type": "object",
        "required": [
          "id",
          "type",
          "metadata"
        ],
        "title": "Actor"
      },
      "ApiKeyDetails": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "api_key": {
            "type": "string",
            "title": "Api Key"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "hash": {
            "type": "string",
            "title": "Hash"
          },
          "prefix": {
            "type": "string",
            "title": "Prefix"
          },
          "description": {
            "type": "string",
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "name",
          "api_key",
          "id",
          "hash",
          "prefix",
          "description"
        ],
        "title": "ApiKeyDetails"
      },
      "AuditLog-Input": {
        "properties": {
          "action": {
            "$ref": "#/components/schemas/Action"
          },
          "actor": {
            "$ref": "#/components/schemas/Actor"
          },
          "target": {
            "$ref": "#/components/schemas/Target"
          },
          "occurred_at": {
            "type": "string",
            "format": "date-time",
            "title": "Occurred At"
          }
        },
        "type": "object",
        "required": [
          "action",
          "actor",
          "target",
          "occurred_at"
        ],
        "title": "AuditLog"
      },
      "AuditLog-Output": {
        "properties": {
          "action": {
            "$ref": "#/components/schemas/Action"
          },
          "actor": {
            "$ref": "#/components/schemas/Actor"
          },
          "target": {
            "$ref": "#/components/schemas/Target"
          },
          "occurred_at": {
            "type": "string",
            "format": "date-time",
            "title": "Occurred At"
          }
        },
        "type": "object",
        "required": [
          "action",
          "actor",
          "target",
          "occurred_at"
        ],
        "title": "AuditLog"
      },
      "AvailablePostgresqlVersion": {
        "properties": {
          "label": {
            "type": "string",
            "title": "Label"
          },
          "value": {
            "type": "string",
            "title": "Value"
          },
          "default": {
            "type": "boolean",
            "title": "Default"
          }
        },
        "type": "object",
        "required": [
          "label",
          "value",
          "default"
        ],
        "title": "AvailablePostgresqlVersion"
      },
      "BackupCreatePublic": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "backup_id": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "format": "ulid",
            "title": "ULID",
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ]
          }
        },
        "type": "object",
        "required": [
          "status",
          "backup_id"
        ],
        "title": "BackupCreatePublic"
      },
      "BackupDeletePublic": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "BackupDeletePublic"
      },
      "BackupInfoPublic": {
        "properties": {
          "schedule_id": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "format": "ulid",
            "title": "ULID",
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ]
          },
          "branch_id": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "format": "ulid",
            "title": "ULID",
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ]
          },
          "level": {
            "type": "string",
            "title": "Level"
          },
          "next_backup": {
            "type": "string",
            "format": "date-time",
            "title": "Next Backup"
          }
        },
        "type": "object",
        "required": [
          "schedule_id",
          "branch_id",
          "level",
          "next_backup"
        ],
        "title": "BackupInfoPublic"
      },
      "BackupPublic": {
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "format": "ulid",
            "title": "ULID",
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ]
          },
          "organization_id": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "format": "ulid",
            "title": "ULID",
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ]
          },
          "project_id": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "format": "ulid",
            "title": "ULID",
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ]
          },
          "branch_id": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "format": "ulid",
            "title": "ULID",
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ]
          },
          "row_index": {
            "type": "integer",
            "title": "Row Index"
          },
          "size_bytes": {
            "type": "integer",
            "title": "Size Bytes"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "organization_id",
          "project_id",
          "branch_id",
          "row_index",
          "size_bytes",
          "created_at"
        ],
        "title": "BackupPublic"
      },
      "BackupScheduleCreatePublic": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "schedule_id": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "format": "ulid",
            "title": "ULID",
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ]
          }
        },
        "type": "object",
        "required": [
          "status",
          "schedule_id"
        ],
        "title": "BackupScheduleCreatePublic"
      },
      "BackupScheduleDeletePublic": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "status",
          "message"
        ],
        "title": "BackupScheduleDeletePublic"
      },
      "BackupSchedulePublic": {
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "format": "ulid",
            "title": "ULID",
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ]
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 26,
                "minLength": 26,
                "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
                "format": "ulid",
                "title": "ULID",
                "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
                "examples": [
                  "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                  "01H945P9C3K2QJ8F7N6M4R2E8V"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "project_id": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 26,
                "minLength": 26,
                "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
                "format": "ulid",
                "title": "ULID",
                "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
                "examples": [
                  "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                  "01H945P9C3K2QJ8F7N6M4R2E8V"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Project Id"
          },
          "branch_id": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 26,
                "minLength": 26,
                "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
                "format": "ulid",
                "title": "ULID",
                "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
                "examples": [
                  "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                  "01H945P9C3K2QJ8F7N6M4R2E8V"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Branch Id"
          },
          "env_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Env Type"
          },
          "rows": {
            "items": {
              "$ref": "#/components/schemas/BackupScheduleRowPublic"
            },
            "type": "array",
            "title": "Rows"
          }
        },
        "type": "object",
        "required": [
          "id",
          "organization_id",
          "project_id",
          "branch_id",
          "env_type",
          "rows"
        ],
        "title": "BackupSchedulePublic"
      },
      "BackupScheduleRowPublic": {
        "properties": {
          "row_index": {
            "type": "integer",
            "title": "Row Index"
          },
          "interval": {
            "type": "integer",
            "title": "Interval"
          },
          "unit": {
            "type": "string",
            "title": "Unit"
          },
          "retention": {
            "type": "integer",
            "title": "Retention"
          }
        },
        "type": "object",
        "required": [
          "row_index",
          "interval",
          "unit",
          "retention"
        ],
        "title": "BackupScheduleRowPublic"
      },
      "BackupScheduleUpdate": {
        "properties": {
          "rows": {
            "items": {
              "$ref": "#/components/schemas/ScheduleRow"
            },
            "type": "array",
            "maxItems": 10,
            "minItems": 0,
            "title": "Rows"
          },
          "env_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Env Type"
          },
          "schedule_id": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 26,
                "minLength": 26,
                "pattern": "[0-7][0123456789ABCDEFGHJKMNPQRSTVWXYZ]{25}"
              },
              {
                "type": "string",
                "maxLength": 16,
                "minLength": 16,
                "format": "binary"
              }
            ],
            "title": "Schedule Id"
          }
        },
        "type": "object",
        "required": [
          "rows",
          "schedule_id"
        ],
        "title": "BackupScheduleUpdate"
      },
      "BranchAllocationPublic": {
        "properties": {
          "branch_id": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "format": "ulid",
            "title": "ULID",
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ]
          },
          "milli_vcpu": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Milli Vcpu"
          },
          "ram": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ram"
          },
          "iops": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Iops"
          },
          "storage_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Storage Size"
          },
          "database_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Database Size"
          }
        },
        "type": "object",
        "required": [
          "branch_id"
        ],
        "title": "BranchAllocationPublic"
      },
      "BranchApiKeys": {
        "properties": {
          "anon": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Anon"
          },
          "service_role": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Service Role"
          }
        },
        "type": "object",
        "required": [
          "anon",
          "service_role"
        ],
        "title": "BranchApiKeys"
      },
      "BranchCreate": {
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "pattern": "^[^\\x00]*$",
            "title": "Name"
          },
          "env_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Env Type"
          },
          "source": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/BranchSourceParameters"
              },
              {
                "type": "null"
              }
            ]
          },
          "deployment": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DeploymentParameters"
              },
              {
                "type": "null"
              }
            ]
          },
          "restore": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/BranchRestoreParameters"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "BranchCreate"
      },
      "BranchPasswordReset": {
        "properties": {
          "new_password": {
            "type": "string",
            "maxLength": 128,
            "minLength": 8,
            "pattern": "^[^\\x00]*$",
            "title": "New Password"
          }
        },
        "type": "object",
        "required": [
          "new_password"
        ],
        "title": "BranchPasswordReset"
      },
      "BranchPgbouncerConfigStatus": {
        "properties": {
          "pgbouncer_enabled": {
            "type": "boolean",
            "title": "Pgbouncer Enabled"
          },
          "pgbouncer_status": {
            "type": "string",
            "minLength": 1,
            "title": "Pgbouncer Status"
          },
          "pool_mode": {
            "type": "string",
            "minLength": 1,
            "title": "Pool Mode"
          },
          "max_client_conn": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Client Conn"
          },
          "default_pool_size": {
            "type": "integer",
            "title": "Default Pool Size"
          },
          "server_idle_timeout": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Server Idle Timeout"
          },
          "server_lifetime": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Server Lifetime"
          },
          "query_wait_timeout": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Query Wait Timeout"
          },
          "reserve_pool_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reserve Pool Size"
          }
        },
        "type": "object",
        "required": [
          "pgbouncer_enabled",
          "pgbouncer_status",
          "pool_mode",
          "default_pool_size"
        ],
        "title": "BranchPgbouncerConfigStatus"
      },
      "BranchPgbouncerConfigUpdate": {
        "properties": {
          "default_pool_size": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 20.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Pool Size",
            "description": "Number of client connections allowed per database/user pair."
          },
          "max_client_conn": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 100.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Client Conn"
          },
          "server_idle_timeout": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 60.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Server Idle Timeout"
          },
          "server_lifetime": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 600.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Server Lifetime"
          },
          "query_wait_timeout": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 30.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Query Wait Timeout"
          },
          "reserve_pool_size": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Reserve Pool Size"
          }
        },
        "type": "object",
        "title": "BranchPgbouncerConfigUpdate"
      },
      "BranchProvisionPublic": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "BranchProvisionPublic"
      },
      "BranchPublic": {
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "format": "ulid",
            "title": "ULID",
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ]
          },
          "name": {
            "type": "string",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$",
            "title": "Name"
          },
          "env_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Env Type"
          },
          "project_id": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "format": "ulid",
            "title": "ULID",
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ]
          },
          "organization_id": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "format": "ulid",
            "title": "ULID",
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ]
          },
          "database": {
            "$ref": "#/components/schemas/DatabaseInformation"
          },
          "max_resources": {
            "$ref": "#/components/schemas/ResourcesDefinition"
          },
          "resize_status": {
            "type": "string",
            "enum": [
              "NONE",
              "PENDING",
              "RESIZING",
              "FILESYSTEM_RESIZE_PENDING",
              "COMPLETED",
              "FAILED"
            ],
            "title": "Resize Status"
          },
          "resize_statuses": {
            "additionalProperties": {
              "$ref": "#/components/schemas/BranchResizeStatusEntry"
            },
            "type": "object",
            "title": "Resize Statuses"
          },
          "assigned_labels": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Assigned Labels"
          },
          "used_resources": {
            "$ref": "#/components/schemas/ResourceUsageDefinition"
          },
          "api_keys": {
            "$ref": "#/components/schemas/BranchApiKeys"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE_HEALTHY",
              "STOPPED",
              "STARTING",
              "ACTIVE_UNHEALTHY",
              "CREATING",
              "DELETING",
              "UPDATING",
              "RESTARTING",
              "STOPPING",
              "UNKNOWN",
              "ERROR"
            ],
            "title": "Status"
          },
          "service_status": {
            "$ref": "#/components/schemas/BranchStatus"
          },
          "pitr_enabled": {
            "type": "boolean",
            "title": "Pitr Enabled"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "env_type",
          "project_id",
          "organization_id",
          "database",
          "max_resources",
          "resize_status",
          "resize_statuses",
          "assigned_labels",
          "used_resources",
          "api_keys",
          "status",
          "service_status",
          "pitr_enabled",
          "created_at",
          "created_by"
        ],
        "title": "BranchPublic"
      },
      "BranchResizeStatusEntry": {
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "NONE",
              "PENDING",
              "RESIZING",
              "FILESYSTEM_RESIZE_PENDING",
              "COMPLETED",
              "FAILED"
            ],
            "title": "Status"
          },
          "timestamp": {
            "type": "string",
            "title": "Timestamp"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "status",
          "timestamp"
        ],
        "title": "BranchResizeStatusEntry",
        "description": "Single service's resize state and the timestamp when it was observed."
      },
      "BranchRestoreParameters": {
        "properties": {
          "backup_id": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "format": "ulid",
            "title": "ULID",
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ]
          },
          "config_copy": {
            "type": "boolean",
            "title": "Config Copy",
            "default": true
          },
          "deployment_parameters": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/BranchSourceDeploymentParameters"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "backup_id"
        ],
        "title": "BranchRestoreParameters"
      },
      "BranchSourceDeploymentParameters": {
        "properties": {
          "database_size": {
            "anyOf": [
              {
                "type": "integer",
                "multipleOf": 1000000000.0,
                "maximum": 100000000000000.0,
                "minimum": 1000000000.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Database Size"
          },
          "storage_size": {
            "anyOf": [
              {
                "type": "integer",
                "multipleOf": 1000000000.0,
                "maximum": 1000000000000.0,
                "minimum": 500000000.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Storage Size"
          },
          "milli_vcpu": {
            "anyOf": [
              {
                "type": "integer",
                "multipleOf": 100.0,
                "maximum": 64000.0,
                "minimum": 2000.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Milli Vcpu"
          },
          "memory_bytes": {
            "anyOf": [
              {
                "type": "integer",
                "multipleOf": 134217728.0,
                "maximum": 274877906944.0,
                "minimum": 2147483648.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Memory Bytes"
          },
          "iops": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 2147483647.0,
                "minimum": 100.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Iops"
          },
          "enable_file_storage": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Enable File Storage"
          }
        },
        "type": "object",
        "title": "BranchSourceDeploymentParameters"
      },
      "BranchSourceParameters": {
        "properties": {
          "branch_id": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "format": "ulid",
            "title": "ULID",
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ]
          },
          "config_copy": {
            "type": "boolean",
            "title": "Config Copy",
            "default": false
          },
          "data_copy": {
            "type": "boolean",
            "title": "Data Copy",
            "default": false
          },
          "deployment_parameters": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/BranchSourceDeploymentParameters"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "branch_id"
        ],
        "title": "BranchSourceParameters"
      },
      "BranchStatus": {
        "properties": {
          "database": {
            "type": "string",
            "enum": [
              "ACTIVE_HEALTHY",
              "STOPPED",
              "STARTING",
              "ACTIVE_UNHEALTHY",
              "CREATING",
              "DELETING",
              "UPDATING",
              "RESTARTING",
              "STOPPING",
              "UNKNOWN",
              "ERROR"
            ],
            "title": "Database"
          },
          "storage": {
            "type": "string",
            "enum": [
              "ACTIVE_HEALTHY",
              "STOPPED",
              "STARTING",
              "ACTIVE_UNHEALTHY",
              "CREATING",
              "DELETING",
              "UPDATING",
              "RESTARTING",
              "STOPPING",
              "UNKNOWN",
              "ERROR"
            ],
            "title": "Storage"
          },
          "realtime": {
            "type": "string",
            "enum": [
              "ACTIVE_HEALTHY",
              "STOPPED",
              "STARTING",
              "ACTIVE_UNHEALTHY",
              "CREATING",
              "DELETING",
              "UPDATING",
              "RESTARTING",
              "STOPPING",
              "UNKNOWN",
              "ERROR"
            ],
            "title": "Realtime"
          },
          "meta": {
            "type": "string",
            "enum": [
              "ACTIVE_HEALTHY",
              "STOPPED",
              "STARTING",
              "ACTIVE_UNHEALTHY",
              "CREATING",
              "DELETING",
              "UPDATING",
              "RESTARTING",
              "STOPPING",
              "UNKNOWN",
              "ERROR"
            ],
            "title": "Meta"
          },
          "rest": {
            "type": "string",
            "enum": [
              "ACTIVE_HEALTHY",
              "STOPPED",
              "STARTING",
              "ACTIVE_UNHEALTHY",
              "CREATING",
              "DELETING",
              "UPDATING",
              "RESTARTING",
              "STOPPING",
              "UNKNOWN",
              "ERROR"
            ],
            "title": "Rest"
          }
        },
        "type": "object",
        "required": [
          "database",
          "storage",
          "realtime",
          "meta",
          "rest"
        ],
        "title": "BranchStatus"
      },
      "BranchUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "pattern": "^[^\\x00]*$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          }
        },
        "type": "object",
        "title": "BranchUpdate"
      },
      "ConsumptionLimitPublic": {
        "properties": {
          "resource": {
            "type": "string",
            "enum": [
              "milli_vcpu",
              "ram",
              "iops",
              "storage_size",
              "database_size"
            ],
            "title": "Resource"
          },
          "max_total_minutes": {
            "type": "integer",
            "title": "Max Total Minutes"
          }
        },
        "type": "object",
        "required": [
          "resource",
          "max_total_minutes"
        ],
        "title": "ConsumptionLimitPublic"
      },
      "ConsumptionPayload": {
        "properties": {
          "resource": {
            "type": "string",
            "enum": [
              "milli_vcpu",
              "ram",
              "iops",
              "storage_size",
              "database_size"
            ],
            "title": "Resource"
          },
          "max_total_minutes": {
            "type": "integer",
            "title": "Max Total Minutes"
          }
        },
        "type": "object",
        "required": [
          "resource",
          "max_total_minutes"
        ],
        "title": "ConsumptionPayload"
      },
      "DatabaseInformation": {
        "properties": {
          "host": {
            "type": "string",
            "title": "Host"
          },
          "port": {
            "type": "integer",
            "title": "Port"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "encrypted_connection_string": {
            "type": "string",
            "title": "Encrypted Connection String"
          },
          "service_endpoint_uri": {
            "type": "string",
            "title": "Service Endpoint Uri"
          },
          "version": {
            "type": "string",
            "title": "Version"
          },
          "has_replicas": {
            "type": "boolean",
            "title": "Has Replicas"
          }
        },
        "type": "object",
        "required": [
          "host",
          "port",
          "username",
          "name",
          "encrypted_connection_string",
          "service_endpoint_uri",
          "version",
          "has_replicas"
        ],
        "title": "DatabaseInformation"
      },
      "DeploymentParameters": {
        "properties": {
          "database_password": {
            "type": "string",
            "maxLength": 128,
            "minLength": 8,
            "pattern": "^[^\\x00]*$",
            "title": "Database Password"
          },
          "database_size": {
            "type": "integer",
            "multipleOf": 1000000000.0,
            "maximum": 100000000000000.0,
            "minimum": 1000000000.0,
            "title": "Database Size"
          },
          "storage_size": {
            "anyOf": [
              {
                "type": "integer",
                "multipleOf": 1000000000.0,
                "maximum": 1000000000000.0,
                "minimum": 500000000.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Storage Size"
          },
          "milli_vcpu": {
            "type": "integer",
            "multipleOf": 100.0,
            "maximum": 64000.0,
            "minimum": 2000.0,
            "title": "Milli Vcpu"
          },
          "memory_bytes": {
            "type": "integer",
            "multipleOf": 134217728.0,
            "maximum": 274877906944.0,
            "minimum": 2147483648.0,
            "title": "Memory Bytes"
          },
          "iops": {
            "type": "integer",
            "maximum": 2147483647.0,
            "minimum": 100.0,
            "title": "Iops"
          },
          "database_image_tag": {
            "type": "string",
            "const": "15.1.0.147",
            "title": "Database Image Tag"
          },
          "enable_file_storage": {
            "type": "boolean",
            "title": "Enable File Storage",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "database_password",
          "database_size",
          "milli_vcpu",
          "memory_bytes",
          "iops",
          "database_image_tag"
        ],
        "title": "DeploymentParameters"
      },
      "HTTPError": {
        "properties": {
          "detail": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "additionalProperties": true,
                "type": "object"
              }
            ],
            "title": "Detail"
          }
        },
        "type": "object",
        "required": [
          "detail"
        ],
        "title": "HTTPError"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "LimitResultPublic": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "limit": {
            "type": "string",
            "title": "Limit"
          }
        },
        "type": "object",
        "required": [
          "status",
          "limit"
        ],
        "title": "LimitResultPublic"
      },
      "Organization": {
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "format": "ulid",
            "title": "ULID",
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ]
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "pattern": "^[^\\x00]*$",
            "title": "Name"
          },
          "locked": {
            "type": "boolean",
            "title": "Locked",
            "default": false
          },
          "require_mfa": {
            "type": "boolean",
            "title": "Require Mfa",
            "default": false
          },
          "max_backups": {
            "type": "integer",
            "title": "Max Backups"
          },
          "environments": {
            "type": "string",
            "title": "Environments"
          }
        },
        "type": "object",
        "required": [
          "name",
          "max_backups",
          "environments"
        ],
        "title": "Organization"
      },
      "OrganizationAuditLog": {
        "properties": {
          "result": {
            "items": {
              "$ref": "#/components/schemas/AuditLog-Output"
            },
            "type": "array",
            "title": "Result"
          },
          "retention_period": {
            "type": "integer",
            "title": "Retention Period"
          }
        },
        "type": "object",
        "required": [
          "result",
          "retention_period"
        ],
        "title": "OrganizationAuditLog"
      },
      "OrganizationCreate": {
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "pattern": "^[^\\x00]*$",
            "title": "Name"
          },
          "locked": {
            "type": "boolean",
            "title": "Locked",
            "default": false
          },
          "require_mfa": {
            "type": "boolean",
            "title": "Require Mfa",
            "default": false
          },
          "max_backups": {
            "type": "integer",
            "title": "Max Backups"
          },
          "environments": {
            "type": "string",
            "title": "Environments"
          }
        },
        "type": "object",
        "required": [
          "name",
          "max_backups",
          "environments"
        ],
        "title": "OrganizationCreate"
      },
      "OrganizationUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "pattern": "^[^\\x00]*$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "locked": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Locked"
          },
          "require_mfa": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Require Mfa"
          },
          "max_backups": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Backups"
          },
          "environments": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Environments"
          }
        },
        "type": "object",
        "title": "OrganizationUpdate"
      },
      "PermissionAccessCheckPublic": {
        "properties": {
          "access_granted": {
            "type": "boolean",
            "title": "Access Granted"
          },
          "context": {
            "$ref": "#/components/schemas/PermissionCheckContextPublic"
          }
        },
        "type": "object",
        "required": [
          "access_granted",
          "context"
        ],
        "title": "PermissionAccessCheckPublic"
      },
      "PermissionCheckContextPublic": {
        "properties": {
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 26,
                "minLength": 26,
                "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
                "format": "ulid",
                "title": "ULID",
                "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
                "examples": [
                  "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                  "01H945P9C3K2QJ8F7N6M4R2E8V"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "project_id": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 26,
                "minLength": 26,
                "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
                "format": "ulid",
                "title": "ULID",
                "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
                "examples": [
                  "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                  "01H945P9C3K2QJ8F7N6M4R2E8V"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Project Id"
          },
          "branch_id": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 26,
                "minLength": 26,
                "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
                "format": "ulid",
                "title": "ULID",
                "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
                "examples": [
                  "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                  "01H945P9C3K2QJ8F7N6M4R2E8V"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Branch Id"
          },
          "env_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Env Type"
          }
        },
        "type": "object",
        "required": [
          "organization_id",
          "project_id",
          "branch_id",
          "env_type"
        ],
        "title": "PermissionCheckContextPublic"
      },
      "ProjectCreate": {
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "pattern": "^[^\\x00]*$",
            "title": "Name"
          },
          "per_branch_limits": {
            "$ref": "#/components/schemas/ResourceLimitsPublic"
          },
          "project_limits": {
            "$ref": "#/components/schemas/ResourceLimitsPublic"
          },
          "max_backups": {
            "type": "integer",
            "title": "Max Backups"
          }
        },
        "type": "object",
        "required": [
          "name",
          "per_branch_limits",
          "project_limits",
          "max_backups"
        ],
        "title": "ProjectCreate"
      },
      "ProjectPublic": {
        "properties": {
          "organization_id": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "format": "ulid",
            "title": "ULID",
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ]
          },
          "id": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "format": "ulid",
            "title": "ULID",
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ]
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "pattern": "^[^\\x00]*$",
            "title": "Name"
          },
          "max_backups": {
            "type": "integer",
            "title": "Max Backups"
          },
          "status": {
            "type": "string",
            "enum": [
              "PAUSING",
              "PAUSED",
              "STARTING",
              "STARTED",
              "MIGRATING",
              "DELETING",
              "ERROR",
              "UNKNOWN"
            ],
            "title": "Status"
          },
          "default_branch_id": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 26,
                "minLength": 26,
                "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
                "format": "ulid",
                "title": "ULID",
                "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
                "examples": [
                  "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                  "01H945P9C3K2QJ8F7N6M4R2E8V"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Branch Id"
          }
        },
        "type": "object",
        "required": [
          "organization_id",
          "id",
          "name",
          "max_backups",
          "status",
          "default_branch_id"
        ],
        "title": "ProjectPublic"
      },
      "ProjectUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "pattern": "^[^\\x00]*$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "max_backups": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Backups"
          }
        },
        "type": "object",
        "title": "ProjectUpdate"
      },
      "ProvLimitPayload": {
        "properties": {
          "resource": {
            "type": "string",
            "enum": [
              "milli_vcpu",
              "ram",
              "iops",
              "storage_size",
              "database_size"
            ],
            "title": "Resource"
          },
          "max_total": {
            "type": "integer",
            "title": "Max Total"
          },
          "max_per_branch": {
            "type": "integer",
            "title": "Max Per Branch"
          }
        },
        "type": "object",
        "required": [
          "resource",
          "max_total",
          "max_per_branch"
        ],
        "title": "ProvLimitPayload"
      },
      "ProvisioningLimitPublic": {
        "properties": {
          "resource": {
            "type": "string",
            "enum": [
              "milli_vcpu",
              "ram",
              "iops",
              "storage_size",
              "database_size"
            ],
            "title": "Resource"
          },
          "max_total": {
            "type": "integer",
            "title": "Max Total"
          },
          "max_per_branch": {
            "type": "integer",
            "title": "Max Per Branch"
          }
        },
        "type": "object",
        "required": [
          "resource",
          "max_total",
          "max_per_branch"
        ],
        "title": "ProvisioningLimitPublic"
      },
      "ResizeParameters": {
        "properties": {
          "database_size": {
            "anyOf": [
              {
                "type": "integer",
                "multipleOf": 1000000000.0,
                "maximum": 100000000000000.0,
                "minimum": 1000000000.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Database Size"
          },
          "storage_size": {
            "anyOf": [
              {
                "type": "integer",
                "multipleOf": 1000000000.0,
                "maximum": 1000000000000.0,
                "minimum": 500000000.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Storage Size"
          },
          "memory_bytes": {
            "anyOf": [
              {
                "type": "integer",
                "multipleOf": 134217728.0,
                "maximum": 274877906944.0,
                "minimum": 2147483648.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Memory Bytes"
          },
          "milli_vcpu": {
            "anyOf": [
              {
                "type": "integer",
                "multipleOf": 100.0,
                "maximum": 64000.0,
                "minimum": 2000.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Milli Vcpu"
          },
          "iops": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 2147483647.0,
                "minimum": 100.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Iops"
          }
        },
        "type": "object",
        "title": "ResizeParameters"
      },
      "ResourceLimitDefinitionPublic": {
        "properties": {
          "resource_type": {
            "type": "string",
            "enum": [
              "milli_vcpu",
              "ram",
              "iops",
              "storage_size",
              "database_size"
            ],
            "title": "Resource Type"
          },
          "min": {
            "type": "integer",
            "title": "Min"
          },
          "max": {
            "type": "integer",
            "title": "Max"
          },
          "step": {
            "type": "integer",
            "title": "Step"
          },
          "unit": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Unit"
          }
        },
        "type": "object",
        "required": [
          "resource_type",
          "min",
          "max",
          "step",
          "unit"
        ],
        "title": "ResourceLimitDefinitionPublic"
      },
      "ResourceLimitsPublic": {
        "properties": {
          "milli_vcpu": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Milli Vcpu",
            "description": "Requested milli vCPU per branch; omit or null to inherit higher-level limit."
          },
          "ram": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ram",
            "description": "Requested RAM (bytes) per branch; omit or null to inherit higher-level limit."
          },
          "iops": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Iops",
            "description": "Requested IOPS per branch; omit or null to inherit higher-level limit."
          },
          "storage_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Storage Size",
            "description": "Requested storage size (bytes) per branch; omit or null to inherit higher-level limit."
          },
          "database_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Database Size",
            "description": "Requested database size (bytes) per branch; omit or null to inherit higher-level limit."
          }
        },
        "type": "object",
        "title": "ResourceLimitsPublic",
        "example": {}
      },
      "ResourceUsageDefinition": {
        "properties": {
          "milli_vcpu": {
            "type": "integer",
            "maximum": 2147483647.0,
            "minimum": 0.0,
            "title": "Milli Vcpu",
            "description": "Measured vCPU consumption for the branch."
          },
          "ram_bytes": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Ram Bytes",
            "description": "Measured RAM usage in bytes."
          },
          "nvme_bytes": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Nvme Bytes",
            "description": "Measured NVMe usage in bytes."
          },
          "iops": {
            "type": "integer",
            "maximum": 2147483647.0,
            "minimum": 0.0,
            "title": "Iops",
            "description": "Measured IOPS consumption."
          },
          "storage_bytes": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Storage Bytes",
            "description": "Measured storage usage in bytes, if available."
          }
        },
        "type": "object",
        "required": [
          "milli_vcpu",
          "ram_bytes",
          "nvme_bytes",
          "iops"
        ],
        "title": "ResourceUsageDefinition"
      },
      "ResourcesDefinition": {
        "properties": {
          "milli_vcpu": {
            "type": "integer",
            "multipleOf": 100.0,
            "maximum": 64000.0,
            "minimum": 2000.0,
            "title": "Milli Vcpu",
            "description": "Number of milli vCPUs provisioned (matches Branch.milli_vcpu constraints)."
          },
          "ram_bytes": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Ram Bytes",
            "description": "Guest memory expressed in bytes (mirrors Branch.memory)."
          },
          "nvme_bytes": {
            "type": "integer",
            "multipleOf": 1000000000.0,
            "maximum": 100000000000000.0,
            "minimum": 1000000000.0,
            "title": "Nvme Bytes",
            "description": "Provisioned NVMe volume capacity in bytes (derived from Branch.database_size)."
          },
          "iops": {
            "type": "integer",
            "maximum": 2147483647.0,
            "minimum": 100.0,
            "title": "Iops",
            "description": "Configured storage IOPS budget (matches Branch.iops constraints)."
          },
          "storage_bytes": {
            "anyOf": [
              {
                "type": "integer",
                "multipleOf": 1000000000.0,
                "maximum": 1000000000000.0,
                "minimum": 500000000.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Storage Bytes",
            "description": "Storage capacity in bytes to be used for Storage API (mirrors Branch.storage_size)."
          }
        },
        "type": "object",
        "required": [
          "milli_vcpu",
          "ram_bytes",
          "nvme_bytes",
          "iops"
        ],
        "title": "ResourcesDefinition"
      },
      "ResourcesPayload": {
        "properties": {
          "resources": {
            "$ref": "#/components/schemas/ResourceLimitsPublic"
          }
        },
        "type": "object",
        "required": [
          "resources"
        ],
        "title": "ResourcesPayload"
      },
      "ResponseType": {
        "type": "string",
        "enum": [
          "empty",
          "full"
        ]
      },
      "RoleAssignmentPayload": {
        "properties": {
          "project_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "maxLength": 26,
                  "minLength": 26,
                  "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
                  "format": "ulid",
                  "title": "ULID",
                  "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
                  "examples": [
                    "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                    "01H945P9C3K2QJ8F7N6M4R2E8V"
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Project Ids"
          },
          "branch_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "maxLength": 26,
                  "minLength": 26,
                  "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
                  "format": "ulid",
                  "title": "ULID",
                  "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
                  "examples": [
                    "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                    "01H945P9C3K2QJ8F7N6M4R2E8V"
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Branch Ids"
          },
          "env_types": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Env Types"
          }
        },
        "type": "object",
        "title": "RoleAssignmentPayload"
      },
      "RoleAssignmentPublic": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/RoleUserLinkPublic"
            },
            "type": "array",
            "title": "Links"
          }
        },
        "type": "object",
        "required": [
          "status",
          "count",
          "links"
        ],
        "title": "RoleAssignmentPublic"
      },
      "RoleAssignmentsPublic": {
        "properties": {
          "count": {
            "type": "integer",
            "title": "Count"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/RoleUserLinkPublic"
            },
            "type": "array",
            "title": "Links"
          }
        },
        "type": "object",
        "required": [
          "count",
          "links"
        ],
        "title": "RoleAssignmentsPublic"
      },
      "RoleDeletePublic": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "RoleDeletePublic"
      },
      "RolePayload": {
        "properties": {
          "role_id": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "format": "ulid",
            "title": "ULID",
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ]
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "role_type": {
            "type": "string",
            "enum": [
              "organization",
              "environment",
              "project",
              "branch"
            ],
            "title": "Role Type"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "is_deletable": {
            "type": "boolean",
            "title": "Is Deletable",
            "default": true
          },
          "access_rights": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Access Rights",
            "default": []
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "role_id",
          "name",
          "role_type"
        ],
        "title": "RolePayload"
      },
      "RolePayloadUpdate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "role_type": {
            "type": "string",
            "enum": [
              "organization",
              "environment",
              "project",
              "branch"
            ],
            "title": "Role Type"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "access_rights": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Access Rights",
            "default": []
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "name",
          "role_type"
        ],
        "title": "RolePayloadUpdate"
      },
      "RolePublic": {
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "format": "ulid",
            "title": "ULID",
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ]
          },
          "organization_id": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "format": "ulid",
            "title": "ULID",
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ]
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "role_type": {
            "type": "string",
            "enum": [
              "organization",
              "environment",
              "project",
              "branch"
            ],
            "title": "Role Type"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "is_deletable": {
            "type": "boolean",
            "title": "Is Deletable"
          },
          "user_count": {
            "type": "integer",
            "title": "User Count"
          }
        },
        "type": "object",
        "required": [
          "id",
          "organization_id",
          "name",
          "description",
          "role_type",
          "is_active",
          "is_deletable",
          "user_count"
        ],
        "title": "RolePublic"
      },
      "RoleUnassignmentPublic": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          }
        },
        "type": "object",
        "required": [
          "status",
          "count"
        ],
        "title": "RoleUnassignmentPublic"
      },
      "RoleUserLinkPublic": {
        "properties": {
          "organization_id": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "format": "ulid",
            "title": "ULID",
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ]
          },
          "project_id": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 26,
                "minLength": 26,
                "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
                "format": "ulid",
                "title": "ULID",
                "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
                "examples": [
                  "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                  "01H945P9C3K2QJ8F7N6M4R2E8V"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Project Id"
          },
          "branch_id": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 26,
                "minLength": 26,
                "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
                "format": "ulid",
                "title": "ULID",
                "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
                "examples": [
                  "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                  "01H945P9C3K2QJ8F7N6M4R2E8V"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Branch Id"
          },
          "role_id": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "format": "ulid",
            "title": "ULID",
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ]
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "env_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Env Type"
          }
        },
        "type": "object",
        "required": [
          "organization_id",
          "project_id",
          "branch_id",
          "role_id",
          "user_id",
          "env_type"
        ],
        "title": "RoleUserLinkPublic"
      },
      "RoleWithPermissionsPublic": {
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "format": "ulid",
            "title": "ULID",
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ]
          },
          "organization_id": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
            "format": "ulid",
            "title": "ULID",
            "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
            "examples": [
              "01ARZ3NDEKTSV4RRFFQ69G5FAV",
              "01H945P9C3K2QJ8F7N6M4R2E8V"
            ]
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "role_type": {
            "type": "string",
            "enum": [
              "organization",
              "environment",
              "project",
              "branch"
            ],
            "title": "Role Type"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "is_deletable": {
            "type": "boolean",
            "title": "Is Deletable"
          },
          "user_count": {
            "type": "integer",
            "title": "User Count"
          },
          "access_rights": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Access Rights"
          }
        },
        "type": "object",
        "required": [
          "id",
          "organization_id",
          "name",
          "description",
          "role_type",
          "is_active",
          "is_deletable",
          "user_count",
          "access_rights"
        ],
        "title": "RoleWithPermissionsPublic"
      },
      "SchedulePayload": {
        "properties": {
          "rows": {
            "items": {
              "$ref": "#/components/schemas/ScheduleRow"
            },
            "type": "array",
            "maxItems": 10,
            "minItems": 0,
            "title": "Rows"
          },
          "env_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Env Type"
          }
        },
        "type": "object",
        "required": [
          "rows"
        ],
        "title": "SchedulePayload"
      },
      "ScheduleRow": {
        "properties": {
          "row_index": {
            "type": "integer",
            "title": "Row Index"
          },
          "interval": {
            "type": "integer",
            "title": "Interval"
          },
          "unit": {
            "type": "string",
            "title": "Unit"
          },
          "retention": {
            "type": "integer",
            "title": "Retention"
          }
        },
        "type": "object",
        "required": [
          "row_index",
          "interval",
          "unit",
          "retention"
        ],
        "title": "ScheduleRow"
      },
      "Status": {
        "properties": {
          "service": {
            "type": "string",
            "const": "vela",
            "title": "Service",
            "default": "vela"
          }
        },
        "type": "object",
        "title": "Status"
      },
      "Target": {
        "properties": {
          "description": {
            "type": "string",
            "title": "Description"
          },
          "metadata": {
            "items": {
              "$ref": "#/components/schemas/TargetMetadata"
            },
            "type": "array",
            "title": "Metadata"
          }
        },
        "type": "object",
        "required": [
          "description",
          "metadata"
        ],
        "title": "Target"
      },
      "TargetMetadata": {
        "properties": {
          "organization": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50,
                "minLength": 1,
                "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization"
          },
          "project": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50,
                "minLength": 1,
                "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Project"
          }
        },
        "type": "object",
        "required": [
          "organization",
          "project"
        ],
        "title": "TargetMetadata"
      },
      "UserCreationResult": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "id",
          "password"
        ],
        "title": "UserCreationResult"
      },
      "UserID": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "id"
        ],
        "title": "UserID"
      },
      "UserParameters": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "first_name": {
            "type": "string",
            "title": "First Name"
          },
          "last_name": {
            "type": "string",
            "title": "Last Name"
          }
        },
        "type": "object",
        "required": [
          "email",
          "first_name",
          "last_name"
        ],
        "title": "UserParameters"
      },
      "UserPermissionPublic": {
        "properties": {
          "permission": {
            "type": "string",
            "title": "Permission"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 26,
                "minLength": 26,
                "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
                "format": "ulid",
                "title": "ULID",
                "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
                "examples": [
                  "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                  "01H945P9C3K2QJ8F7N6M4R2E8V"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "project_id": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 26,
                "minLength": 26,
                "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
                "format": "ulid",
                "title": "ULID",
                "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
                "examples": [
                  "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                  "01H945P9C3K2QJ8F7N6M4R2E8V"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Project Id"
          },
          "branch_id": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 26,
                "minLength": 26,
                "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$",
                "format": "ulid",
                "title": "ULID",
                "description": "A ULID (Universally Unique Lexicographically Sortable Identifier)",
                "examples": [
                  "01ARZ3NDEKTSV4RRFFQ69G5FAV",
                  "01H945P9C3K2QJ8F7N6M4R2E8V"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Branch Id"
          },
          "env_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Env Type"
          }
        },
        "type": "object",
        "required": [
          "permission",
          "organization_id",
          "project_id",
          "branch_id",
          "env_type"
        ],
        "title": "UserPermissionPublic"
      },
      "UserPublic": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "email_verified": {
            "type": "boolean",
            "title": "Email Verified"
          },
          "first_name": {
            "type": "string",
            "title": "First Name"
          },
          "last_name": {
            "type": "string",
            "title": "Last Name"
          }
        },
        "type": "object",
        "required": [
          "id",
          "email",
          "email_verified",
          "first_name",
          "last_name"
        ],
        "title": "UserPublic"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "AbstractPolicyRepresentation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "policies": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "resources": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "scopes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "logic": {
            "$ref": "#/components/schemas/Logic"
          },
          "decisionStrategy": {
            "$ref": "#/components/schemas/DecisionStrategy"
          },
          "owner": {
            "type": "string"
          },
          "resourceType": {
            "type": "string"
          },
          "resourcesData": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceRepresentation"
            }
          },
          "scopesData": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScopeRepresentation"
            }
          }
        }
      },
      "Access": {
        "type": "object",
        "properties": {
          "roles": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "verify_caller": {
            "type": "boolean"
          }
        }
      },
      "AccessToken": {
        "type": "object",
        "properties": {
          "jti": {
            "type": "string"
          },
          "exp": {
            "format": "int64",
            "type": "integer"
          },
          "nbf": {
            "format": "int64",
            "type": "integer"
          },
          "iat": {
            "format": "int64",
            "type": "integer"
          },
          "iss": {
            "type": "string"
          },
          "sub": {
            "type": "string"
          },
          "typ": {
            "type": "string"
          },
          "azp": {
            "type": "string"
          },
          "otherClaims": {
            "type": "object",
            "additionalProperties": {}
          },
          "nonce": {
            "type": "string"
          },
          "auth_time": {
            "format": "int64",
            "type": "integer"
          },
          "sid": {
            "type": "string"
          },
          "at_hash": {
            "type": "string"
          },
          "c_hash": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "given_name": {
            "type": "string"
          },
          "family_name": {
            "type": "string"
          },
          "middle_name": {
            "type": "string"
          },
          "nickname": {
            "type": "string"
          },
          "preferred_username": {
            "type": "string"
          },
          "profile": {
            "type": "string"
          },
          "picture": {
            "type": "string"
          },
          "website": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "email_verified": {
            "type": "boolean"
          },
          "gender": {
            "type": "string"
          },
          "birthdate": {
            "type": "string"
          },
          "zoneinfo": {
            "type": "string"
          },
          "locale": {
            "type": "string"
          },
          "phone_number": {
            "type": "string"
          },
          "phone_number_verified": {
            "type": "boolean"
          },
          "address": {
            "$ref": "#/components/schemas/AddressClaimSet"
          },
          "updated_at": {
            "format": "int64",
            "type": "integer"
          },
          "claims_locales": {
            "type": "string"
          },
          "acr": {
            "type": "string"
          },
          "s_hash": {
            "type": "string"
          },
          "trusted-certs": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "allowed-origins": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "realm_access": {
            "$ref": "#/components/schemas/Access"
          },
          "resource_access": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Access"
            },
            "writeOnly": true
          },
          "authorization": {
            "$ref": "#/components/schemas/Authorization"
          },
          "cnf": {
            "$ref": "#/components/schemas/Confirmation"
          },
          "scope": {
            "type": "string"
          }
        }
      },
      "AddressClaimSet": {
        "type": "object",
        "properties": {
          "formatted": {
            "type": "string"
          },
          "street_address": {
            "type": "string"
          },
          "locality": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "postal_code": {
            "type": "string"
          },
          "country": {
            "type": "string"
          }
        }
      },
      "AdminEventRepresentation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "time": {
            "format": "int64",
            "type": "integer"
          },
          "realmId": {
            "type": "string"
          },
          "authDetails": {
            "$ref": "#/components/schemas/AuthDetailsRepresentation"
          },
          "operationType": {
            "type": "string"
          },
          "resourceType": {
            "type": "string"
          },
          "resourcePath": {
            "type": "string"
          },
          "representation": {
            "type": "string"
          },
          "error": {
            "type": "string"
          },
          "details": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "ApplicationRepresentation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "clientId": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "rootUrl": {
            "type": "string"
          },
          "adminUrl": {
            "type": "string"
          },
          "baseUrl": {
            "type": "string"
          },
          "surrogateAuthRequired": {
            "type": "boolean"
          },
          "enabled": {
            "type": "boolean"
          },
          "alwaysDisplayInConsole": {
            "type": "boolean"
          },
          "clientAuthenticatorType": {
            "type": "string"
          },
          "secret": {
            "type": "string"
          },
          "registrationAccessToken": {
            "type": "string"
          },
          "defaultRoles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "deprecated": true
          },
          "redirectUris": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "webOrigins": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "notBefore": {
            "format": "int32",
            "type": "integer"
          },
          "bearerOnly": {
            "type": "boolean"
          },
          "consentRequired": {
            "type": "boolean"
          },
          "standardFlowEnabled": {
            "type": "boolean"
          },
          "implicitFlowEnabled": {
            "type": "boolean"
          },
          "directAccessGrantsEnabled": {
            "type": "boolean"
          },
          "serviceAccountsEnabled": {
            "type": "boolean"
          },
          "authorizationServicesEnabled": {
            "type": "boolean"
          },
          "directGrantsOnly": {
            "type": "boolean",
            "deprecated": true
          },
          "publicClient": {
            "type": "boolean"
          },
          "frontchannelLogout": {
            "type": "boolean"
          },
          "protocol": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "authenticationFlowBindingOverrides": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "fullScopeAllowed": {
            "type": "boolean"
          },
          "nodeReRegistrationTimeout": {
            "format": "int32",
            "type": "integer"
          },
          "registeredNodes": {
            "type": "object",
            "additionalProperties": {
              "format": "int32",
              "type": "integer"
            }
          },
          "protocolMappers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProtocolMapperRepresentation"
            }
          },
          "clientTemplate": {
            "type": "string",
            "deprecated": true
          },
          "useTemplateConfig": {
            "type": "boolean",
            "deprecated": true
          },
          "useTemplateScope": {
            "type": "boolean",
            "deprecated": true
          },
          "useTemplateMappers": {
            "type": "boolean",
            "deprecated": true
          },
          "defaultClientScopes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "optionalClientScopes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "authorizationSettings": {
            "$ref": "#/components/schemas/ResourceServerRepresentation"
          },
          "access": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean"
            }
          },
          "origin": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "claims": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/ClaimRepresentation"
              }
            ],
            "deprecated": true
          }
        },
        "deprecated": true
      },
      "AuthDetailsRepresentation": {
        "type": "object",
        "properties": {
          "realmId": {
            "type": "string"
          },
          "clientId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "ipAddress": {
            "type": "string"
          }
        }
      },
      "AuthenticationExecutionExportRepresentation": {
        "type": "object",
        "properties": {
          "authenticatorConfig": {
            "type": "string"
          },
          "authenticator": {
            "type": "string"
          },
          "authenticatorFlow": {
            "type": "boolean"
          },
          "requirement": {
            "type": "string"
          },
          "priority": {
            "format": "int32",
            "type": "integer"
          },
          "autheticatorFlow": {
            "type": "boolean",
            "deprecated": true
          },
          "flowAlias": {
            "type": "string"
          },
          "userSetupAllowed": {
            "type": "boolean"
          }
        }
      },
      "AuthenticationExecutionInfoRepresentation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "requirement": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "alias": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "requirementChoices": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "configurable": {
            "type": "boolean"
          },
          "authenticationFlow": {
            "type": "boolean"
          },
          "providerId": {
            "type": "string"
          },
          "authenticationConfig": {
            "type": "string"
          },
          "flowId": {
            "type": "string"
          },
          "level": {
            "format": "int32",
            "type": "integer"
          },
          "index": {
            "format": "int32",
            "type": "integer"
          },
          "priority": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "AuthenticationExecutionRepresentation": {
        "type": "object",
        "properties": {
          "authenticatorConfig": {
            "type": "string"
          },
          "authenticator": {
            "type": "string"
          },
          "authenticatorFlow": {
            "type": "boolean"
          },
          "requirement": {
            "type": "string"
          },
          "priority": {
            "format": "int32",
            "type": "integer"
          },
          "autheticatorFlow": {
            "type": "boolean",
            "deprecated": true
          },
          "id": {
            "type": "string"
          },
          "flowId": {
            "type": "string"
          },
          "parentFlow": {
            "type": "string"
          }
        }
      },
      "AuthenticationFlowRepresentation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "alias": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "providerId": {
            "type": "string"
          },
          "topLevel": {
            "type": "boolean"
          },
          "builtIn": {
            "type": "boolean"
          },
          "authenticationExecutions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuthenticationExecutionExportRepresentation"
            }
          }
        }
      },
      "AuthenticatorConfigInfoRepresentation": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "providerId": {
            "type": "string"
          },
          "helpText": {
            "type": "string"
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConfigPropertyRepresentation"
            }
          }
        }
      },
      "AuthenticatorConfigRepresentation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "alias": {
            "type": "string"
          },
          "config": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "Authorization": {
        "type": "object",
        "properties": {
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Permission"
            }
          }
        }
      },
      "AuthorizationSchema": {
        "type": "object",
        "properties": {
          "resourceTypes": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ResourceType"
            }
          }
        }
      },
      "BruteForceStrategy": {
        "enum": [
          "LINEAR",
          "MULTIPLE"
        ],
        "type": "string"
      },
      "CertificateRepresentation": {
        "type": "object",
        "properties": {
          "privateKey": {
            "type": "string"
          },
          "publicKey": {
            "type": "string"
          },
          "certificate": {
            "type": "string"
          },
          "kid": {
            "type": "string"
          }
        }
      },
      "ClaimRepresentation": {
        "type": "object",
        "properties": {
          "name": {
            "type": "boolean"
          },
          "username": {
            "type": "boolean"
          },
          "profile": {
            "type": "boolean"
          },
          "picture": {
            "type": "boolean"
          },
          "website": {
            "type": "boolean"
          },
          "email": {
            "type": "boolean"
          },
          "gender": {
            "type": "boolean"
          },
          "locale": {
            "type": "boolean"
          },
          "address": {
            "type": "boolean"
          },
          "phone": {
            "type": "boolean"
          }
        }
      },
      "ClientInitialAccessCreatePresentation": {
        "type": "object",
        "properties": {
          "expiration": {
            "format": "int32",
            "type": "integer"
          },
          "count": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "ClientInitialAccessPresentation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "timestamp": {
            "format": "int32",
            "type": "integer"
          },
          "expiration": {
            "format": "int32",
            "type": "integer"
          },
          "count": {
            "format": "int32",
            "type": "integer"
          },
          "remainingCount": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "ClientMappingsRepresentation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "client": {
            "type": "string"
          },
          "mappings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleRepresentation"
            }
          }
        }
      },
      "ClientPoliciesRepresentation": {
        "type": "object",
        "properties": {
          "policies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClientPolicyRepresentation"
            }
          },
          "globalPolicies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClientPolicyRepresentation"
            }
          }
        }
      },
      "ClientPolicyConditionRepresentation": {
        "type": "object",
        "properties": {
          "condition": {
            "type": "string"
          },
          "configuration": {
            "description": "Configuration settings as a JSON object",
            "type": "object",
            "additionalProperties": true
          }
        }
      },
      "ClientPolicyExecutorRepresentation": {
        "type": "object",
        "properties": {
          "executor": {
            "type": "string"
          },
          "configuration": {
            "description": "Configuration settings as a JSON object",
            "type": "object",
            "additionalProperties": true
          }
        }
      },
      "ClientPolicyRepresentation": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "conditions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClientPolicyConditionRepresentation"
            }
          },
          "profiles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ClientProfileRepresentation": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "executors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClientPolicyExecutorRepresentation"
            }
          }
        }
      },
      "ClientProfilesRepresentation": {
        "type": "object",
        "properties": {
          "profiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClientProfileRepresentation"
            }
          },
          "globalProfiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClientProfileRepresentation"
            }
          }
        }
      },
      "ClientRepresentation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "clientId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "rootUrl": {
            "type": "string"
          },
          "adminUrl": {
            "type": "string"
          },
          "baseUrl": {
            "type": "string"
          },
          "surrogateAuthRequired": {
            "type": "boolean"
          },
          "enabled": {
            "type": "boolean"
          },
          "alwaysDisplayInConsole": {
            "type": "boolean"
          },
          "clientAuthenticatorType": {
            "type": "string"
          },
          "secret": {
            "type": "string"
          },
          "registrationAccessToken": {
            "type": "string"
          },
          "defaultRoles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "deprecated": true
          },
          "redirectUris": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "webOrigins": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "notBefore": {
            "format": "int32",
            "type": "integer"
          },
          "bearerOnly": {
            "type": "boolean"
          },
          "consentRequired": {
            "type": "boolean"
          },
          "standardFlowEnabled": {
            "type": "boolean"
          },
          "implicitFlowEnabled": {
            "type": "boolean"
          },
          "directAccessGrantsEnabled": {
            "type": "boolean"
          },
          "serviceAccountsEnabled": {
            "type": "boolean"
          },
          "authorizationServicesEnabled": {
            "type": "boolean"
          },
          "directGrantsOnly": {
            "type": "boolean",
            "deprecated": true
          },
          "publicClient": {
            "type": "boolean"
          },
          "frontchannelLogout": {
            "type": "boolean"
          },
          "protocol": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "authenticationFlowBindingOverrides": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "fullScopeAllowed": {
            "type": "boolean"
          },
          "nodeReRegistrationTimeout": {
            "format": "int32",
            "type": "integer"
          },
          "registeredNodes": {
            "type": "object",
            "additionalProperties": {
              "format": "int32",
              "type": "integer"
            }
          },
          "protocolMappers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProtocolMapperRepresentation"
            }
          },
          "clientTemplate": {
            "type": "string",
            "deprecated": true
          },
          "useTemplateConfig": {
            "type": "boolean",
            "deprecated": true
          },
          "useTemplateScope": {
            "type": "boolean",
            "deprecated": true
          },
          "useTemplateMappers": {
            "type": "boolean",
            "deprecated": true
          },
          "defaultClientScopes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "optionalClientScopes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "authorizationSettings": {
            "$ref": "#/components/schemas/ResourceServerRepresentation"
          },
          "access": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean"
            }
          },
          "origin": {
            "type": "string"
          }
        }
      },
      "ClientScopeRepresentation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "protocol": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "protocolMappers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProtocolMapperRepresentation"
            }
          }
        }
      },
      "ClientTemplateRepresentation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "protocol": {
            "type": "string"
          },
          "fullScopeAllowed": {
            "type": "boolean"
          },
          "bearerOnly": {
            "type": "boolean"
          },
          "consentRequired": {
            "type": "boolean"
          },
          "standardFlowEnabled": {
            "type": "boolean"
          },
          "implicitFlowEnabled": {
            "type": "boolean"
          },
          "directAccessGrantsEnabled": {
            "type": "boolean"
          },
          "serviceAccountsEnabled": {
            "type": "boolean"
          },
          "publicClient": {
            "type": "boolean"
          },
          "frontchannelLogout": {
            "type": "boolean"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "protocolMappers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProtocolMapperRepresentation"
            }
          }
        },
        "deprecated": true
      },
      "ClientTypeRepresentation": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "provider": {
            "type": "string"
          },
          "parent": {
            "type": "string"
          },
          "config": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/PropertyConfig"
            }
          }
        }
      },
      "ClientTypesRepresentation": {
        "type": "object",
        "properties": {
          "client-types": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClientTypeRepresentation"
            }
          },
          "global-client-types": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClientTypeRepresentation"
            }
          }
        }
      },
      "ComponentExportRepresentation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "providerId": {
            "type": "string"
          },
          "subType": {
            "type": "string"
          },
          "subComponents": {
            "$ref": "#/components/schemas/MultivaluedHashMapStringComponentExportRepresentation"
          },
          "config": {
            "$ref": "#/components/schemas/MultivaluedHashMapStringString"
          }
        }
      },
      "ComponentRepresentation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "providerId": {
            "type": "string"
          },
          "providerType": {
            "type": "string"
          },
          "parentId": {
            "type": "string"
          },
          "subType": {
            "type": "string"
          },
          "config": {
            "$ref": "#/components/schemas/MultivaluedHashMapStringString"
          }
        }
      },
      "ComponentTypeRepresentation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "helpText": {
            "type": "string"
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConfigPropertyRepresentation"
            }
          },
          "clientProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConfigPropertyRepresentation"
            }
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {}
          }
        }
      },
      "Composites": {
        "type": "object",
        "properties": {
          "realm": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "client": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "application": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": true
          }
        }
      },
      "ConfigPropertyRepresentation": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "helpText": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "defaultValue": {},
          "options": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "secret": {
            "type": "boolean"
          },
          "required": {
            "type": "boolean"
          },
          "readOnly": {
            "type": "boolean"
          }
        }
      },
      "Confirmation": {
        "type": "object",
        "properties": {
          "x5t#S256": {
            "type": "string"
          },
          "jkt": {
            "type": "string"
          }
        }
      },
      "CredentialRepresentation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "userLabel": {
            "type": "string"
          },
          "createdDate": {
            "format": "int64",
            "type": "integer"
          },
          "secretData": {
            "type": "string"
          },
          "credentialData": {
            "type": "string"
          },
          "priority": {
            "format": "int32",
            "type": "integer"
          },
          "value": {
            "type": "string"
          },
          "temporary": {
            "type": "boolean"
          },
          "device": {
            "type": "string",
            "deprecated": true
          },
          "hashedSaltedValue": {
            "type": "string",
            "deprecated": true
          },
          "salt": {
            "type": "string",
            "deprecated": true
          },
          "hashIterations": {
            "format": "int32",
            "type": "integer",
            "deprecated": true
          },
          "counter": {
            "format": "int32",
            "type": "integer",
            "deprecated": true
          },
          "algorithm": {
            "type": "string",
            "deprecated": true
          },
          "digits": {
            "format": "int32",
            "type": "integer",
            "deprecated": true
          },
          "period": {
            "format": "int32",
            "type": "integer",
            "deprecated": true
          },
          "config": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/MultivaluedHashMapStringString"
              }
            ],
            "deprecated": true
          },
          "federationLink": {
            "type": "string"
          }
        }
      },
      "DecisionEffect": {
        "enum": [
          "PERMIT",
          "DENY"
        ],
        "type": "string"
      },
      "DecisionStrategy": {
        "enum": [
          "AFFIRMATIVE",
          "UNANIMOUS",
          "CONSENSUS"
        ],
        "type": "string"
      },
      "EnforcementMode": {
        "enum": [
          "PERMISSIVE",
          "ENFORCING",
          "DISABLED"
        ],
        "type": "string"
      },
      "ErrorRepresentation": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string"
          },
          "errorMessage": {
            "type": "string"
          },
          "params": {
            "type": "array",
            "items": {}
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorRepresentation"
            }
          }
        }
      },
      "EvaluationResultRepresentation": {
        "type": "object",
        "properties": {
          "resource": {
            "$ref": "#/components/schemas/ResourceRepresentation"
          },
          "scopes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScopeRepresentation"
            }
          },
          "policies": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PolicyResultRepresentation"
            }
          },
          "status": {
            "$ref": "#/components/schemas/DecisionEffect"
          },
          "allowedScopes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScopeRepresentation"
            }
          },
          "deniedScopes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScopeRepresentation"
            }
          }
        }
      },
      "EventRepresentation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "time": {
            "format": "int64",
            "type": "integer"
          },
          "type": {
            "type": "string"
          },
          "realmId": {
            "type": "string"
          },
          "clientId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "sessionId": {
            "type": "string"
          },
          "ipAddress": {
            "type": "string"
          },
          "error": {
            "type": "string"
          },
          "details": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "FederatedIdentityRepresentation": {
        "type": "object",
        "properties": {
          "identityProvider": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "userName": {
            "type": "string"
          }
        }
      },
      "GlobalRequestResult": {
        "type": "object",
        "properties": {
          "successRequests": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "failedRequests": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "GroupRepresentation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "parentId": {
            "type": "string"
          },
          "subGroupCount": {
            "format": "int64",
            "type": "integer"
          },
          "subGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupRepresentation"
            }
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "realmRoles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "clientRoles": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "access": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean"
            }
          }
        }
      },
      "IDToken": {
        "type": "object",
        "properties": {
          "jti": {
            "type": "string"
          },
          "exp": {
            "format": "int64",
            "type": "integer"
          },
          "nbf": {
            "format": "int64",
            "type": "integer"
          },
          "iat": {
            "format": "int64",
            "type": "integer"
          },
          "iss": {
            "type": "string"
          },
          "sub": {
            "type": "string"
          },
          "typ": {
            "type": "string"
          },
          "azp": {
            "type": "string"
          },
          "otherClaims": {
            "type": "object",
            "additionalProperties": {}
          },
          "nonce": {
            "type": "string"
          },
          "auth_time": {
            "format": "int64",
            "type": "integer"
          },
          "sid": {
            "type": "string"
          },
          "at_hash": {
            "type": "string"
          },
          "c_hash": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "given_name": {
            "type": "string"
          },
          "family_name": {
            "type": "string"
          },
          "middle_name": {
            "type": "string"
          },
          "nickname": {
            "type": "string"
          },
          "preferred_username": {
            "type": "string"
          },
          "profile": {
            "type": "string"
          },
          "picture": {
            "type": "string"
          },
          "website": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "email_verified": {
            "type": "boolean"
          },
          "gender": {
            "type": "string"
          },
          "birthdate": {
            "type": "string"
          },
          "zoneinfo": {
            "type": "string"
          },
          "locale": {
            "type": "string"
          },
          "phone_number": {
            "type": "string"
          },
          "phone_number_verified": {
            "type": "boolean"
          },
          "address": {
            "$ref": "#/components/schemas/AddressClaimSet"
          },
          "updated_at": {
            "format": "int64",
            "type": "integer"
          },
          "claims_locales": {
            "type": "string"
          },
          "acr": {
            "type": "string"
          },
          "s_hash": {
            "type": "string"
          }
        }
      },
      "IdentityProviderMapperRepresentation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "identityProviderAlias": {
            "type": "string"
          },
          "identityProviderMapper": {
            "type": "string"
          },
          "config": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "IdentityProviderMapperTypeRepresentation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "helpText": {
            "type": "string"
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConfigPropertyRepresentation"
            }
          }
        }
      },
      "IdentityProviderRepresentation": {
        "type": "object",
        "properties": {
          "alias": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "internalId": {
            "type": "string"
          },
          "providerId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "updateProfileFirstLoginMode": {
            "type": "string",
            "deprecated": true
          },
          "trustEmail": {
            "type": "boolean"
          },
          "storeToken": {
            "type": "boolean"
          },
          "addReadTokenRoleOnCreate": {
            "type": "boolean"
          },
          "authenticateByDefault": {
            "type": "boolean"
          },
          "linkOnly": {
            "type": "boolean"
          },
          "hideOnLogin": {
            "type": "boolean"
          },
          "firstBrokerLoginFlowAlias": {
            "type": "string"
          },
          "postBrokerLoginFlowAlias": {
            "type": "string"
          },
          "organizationId": {
            "type": "string"
          },
          "config": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "updateProfileFirstLogin": {
            "type": "boolean",
            "deprecated": true
          }
        }
      },
      "InstallationAdapterConfig": {
        "type": "object",
        "properties": {
          "realm": {
            "type": "string"
          },
          "realm-public-key": {
            "type": "string"
          },
          "auth-server-url": {
            "type": "string"
          },
          "ssl-required": {
            "type": "string"
          },
          "bearer-only": {
            "type": "boolean"
          },
          "resource": {
            "type": "string"
          },
          "public-client": {
            "type": "boolean"
          },
          "verify-token-audience": {
            "type": "boolean"
          },
          "credentials": {
            "type": "object",
            "additionalProperties": {}
          },
          "use-resource-role-mappings": {
            "type": "boolean"
          },
          "confidential-port": {
            "format": "int32",
            "type": "integer"
          },
          "policy-enforcer": {
            "$ref": "#/components/schemas/PolicyEnforcerConfig"
          }
        }
      },
      "KeyMetadataRepresentation": {
        "type": "object",
        "properties": {
          "providerId": {
            "type": "string"
          },
          "providerPriority": {
            "format": "int64",
            "type": "integer"
          },
          "kid": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "algorithm": {
            "type": "string"
          },
          "publicKey": {
            "type": "string"
          },
          "certificate": {
            "type": "string"
          },
          "use": {
            "$ref": "#/components/schemas/KeyUse"
          },
          "validTo": {
            "format": "int64",
            "type": "integer"
          }
        }
      },
      "KeyStoreConfig": {
        "type": "object",
        "properties": {
          "realmCertificate": {
            "type": "boolean"
          },
          "storePassword": {
            "type": "string"
          },
          "keyPassword": {
            "type": "string"
          },
          "keyAlias": {
            "type": "string"
          },
          "realmAlias": {
            "type": "string"
          },
          "format": {
            "type": "string"
          },
          "keySize": {
            "format": "int32",
            "type": "integer"
          },
          "validity": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "KeyUse": {
        "enum": [
          "SIG",
          "ENC",
          "JWT_SVID"
        ],
        "type": "string"
      },
      "KeysMetadataRepresentation": {
        "type": "object",
        "properties": {
          "active": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "keys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeyMetadataRepresentation"
            }
          }
        }
      },
      "Logic": {
        "enum": [
          "POSITIVE",
          "NEGATIVE"
        ],
        "type": "string"
      },
      "ManagementPermissionReference": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "resource": {
            "type": "string"
          },
          "scopePermissions": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "MappingsRepresentation": {
        "type": "object",
        "properties": {
          "realmMappings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleRepresentation"
            }
          },
          "clientMappings": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ClientMappingsRepresentation"
            }
          }
        }
      },
      "MemberRepresentation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "emailVerified": {
            "type": "boolean"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "userProfileMetadata": {
            "$ref": "#/components/schemas/UserProfileMetadata"
          },
          "enabled": {
            "type": "boolean"
          },
          "self": {
            "type": "string"
          },
          "origin": {
            "type": "string"
          },
          "createdTimestamp": {
            "format": "int64",
            "type": "integer"
          },
          "totp": {
            "type": "boolean"
          },
          "federationLink": {
            "type": "string"
          },
          "serviceAccountClientId": {
            "type": "string"
          },
          "credentials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CredentialRepresentation"
            }
          },
          "disableableCredentialTypes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "requiredActions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "federatedIdentities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FederatedIdentityRepresentation"
            }
          },
          "realmRoles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "clientRoles": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "clientConsents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserConsentRepresentation"
            }
          },
          "notBefore": {
            "format": "int32",
            "type": "integer"
          },
          "applicationRoles": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": true
          },
          "socialLinks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SocialLinkRepresentation"
            },
            "deprecated": true
          },
          "groups": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "access": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean"
            }
          },
          "membershipType": {
            "$ref": "#/components/schemas/MembershipType"
          }
        }
      },
      "MembershipType": {
        "enum": [
          "UNMANAGED",
          "MANAGED"
        ],
        "type": "string"
      },
      "MethodConfig": {
        "type": "object",
        "properties": {
          "method": {
            "type": "string"
          },
          "scopes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "scopes-enforcement-mode": {
            "$ref": "#/components/schemas/ScopeEnforcementMode"
          }
        }
      },
      "MultivaluedHashMapStringComponentExportRepresentation": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/ComponentExportRepresentation"
          }
        }
      },
      "MultivaluedHashMapStringString": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "OAuthClientRepresentation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "clientId": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "rootUrl": {
            "type": "string"
          },
          "adminUrl": {
            "type": "string"
          },
          "baseUrl": {
            "type": "string"
          },
          "surrogateAuthRequired": {
            "type": "boolean"
          },
          "enabled": {
            "type": "boolean"
          },
          "alwaysDisplayInConsole": {
            "type": "boolean"
          },
          "clientAuthenticatorType": {
            "type": "string"
          },
          "secret": {
            "type": "string"
          },
          "registrationAccessToken": {
            "type": "string"
          },
          "defaultRoles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "deprecated": true
          },
          "redirectUris": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "webOrigins": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "notBefore": {
            "format": "int32",
            "type": "integer"
          },
          "bearerOnly": {
            "type": "boolean"
          },
          "consentRequired": {
            "type": "boolean"
          },
          "standardFlowEnabled": {
            "type": "boolean"
          },
          "implicitFlowEnabled": {
            "type": "boolean"
          },
          "directAccessGrantsEnabled": {
            "type": "boolean"
          },
          "serviceAccountsEnabled": {
            "type": "boolean"
          },
          "authorizationServicesEnabled": {
            "type": "boolean"
          },
          "directGrantsOnly": {
            "type": "boolean",
            "deprecated": true
          },
          "publicClient": {
            "type": "boolean"
          },
          "frontchannelLogout": {
            "type": "boolean"
          },
          "protocol": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "authenticationFlowBindingOverrides": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "fullScopeAllowed": {
            "type": "boolean"
          },
          "nodeReRegistrationTimeout": {
            "format": "int32",
            "type": "integer"
          },
          "registeredNodes": {
            "type": "object",
            "additionalProperties": {
              "format": "int32",
              "type": "integer"
            }
          },
          "protocolMappers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProtocolMapperRepresentation"
            }
          },
          "clientTemplate": {
            "type": "string",
            "deprecated": true
          },
          "useTemplateConfig": {
            "type": "boolean",
            "deprecated": true
          },
          "useTemplateScope": {
            "type": "boolean",
            "deprecated": true
          },
          "useTemplateMappers": {
            "type": "boolean",
            "deprecated": true
          },
          "defaultClientScopes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "optionalClientScopes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "authorizationSettings": {
            "$ref": "#/components/schemas/ResourceServerRepresentation"
          },
          "access": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean"
            }
          },
          "origin": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "claims": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/ClaimRepresentation"
              }
            ],
            "deprecated": true
          }
        },
        "deprecated": true
      },
      "OrganizationDomainRepresentation": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "verified": {
            "type": "boolean"
          }
        }
      },
      "OrganizationRepresentation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "alias": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          },
          "redirectUrl": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "domains": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationDomainRepresentation"
            }
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MemberRepresentation"
            }
          },
          "identityProviders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdentityProviderRepresentation"
            }
          }
        }
      },
      "PathCacheConfig": {
        "type": "object",
        "properties": {
          "max-entries": {
            "format": "int32",
            "type": "integer"
          },
          "lifespan": {
            "format": "int64",
            "type": "integer"
          }
        }
      },
      "PathConfig": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "methods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MethodConfig"
            }
          },
          "scopes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "type": "string"
          },
          "enforcement-mode": {
            "$ref": "#/components/schemas/EnforcementMode"
          },
          "claim-information-point": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {}
            }
          },
          "invalidated": {
            "type": "boolean"
          },
          "staticPath": {
            "type": "boolean"
          },
          "static": {
            "type": "boolean"
          }
        }
      },
      "Permission": {
        "type": "object",
        "properties": {
          "rsid": {
            "type": "string"
          },
          "rsname": {
            "type": "string"
          },
          "scopes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "claims": {
            "type": "object",
            "additionalProperties": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "PolicyEnforcementMode": {
        "enum": [
          "ENFORCING",
          "PERMISSIVE",
          "DISABLED"
        ],
        "type": "string"
      },
      "PolicyEnforcerConfig": {
        "type": "object",
        "properties": {
          "enforcement-mode": {
            "$ref": "#/components/schemas/EnforcementMode"
          },
          "paths": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PathConfig"
            }
          },
          "path-cache": {
            "$ref": "#/components/schemas/PathCacheConfig"
          },
          "lazy-load-paths": {
            "type": "boolean"
          },
          "on-deny-redirect-to": {
            "type": "string"
          },
          "user-managed-access": {
            "$ref": "#/components/schemas/UserManagedAccessConfig"
          },
          "claim-information-point": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {}
            }
          },
          "http-method-as-scope": {
            "type": "boolean"
          },
          "realm": {
            "type": "string"
          },
          "auth-server-url": {
            "type": "string"
          },
          "credentials": {
            "type": "object",
            "additionalProperties": {}
          },
          "resource": {
            "type": "string"
          }
        }
      },
      "PolicyEvaluationRequest": {
        "type": "object",
        "properties": {
          "context": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "resources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceRepresentation"
            }
          },
          "resourceType": {
            "type": "string"
          },
          "clientId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "roleIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "entitlements": {
            "type": "boolean"
          }
        }
      },
      "PolicyEvaluationResponse": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EvaluationResultRepresentation"
            }
          },
          "entitlements": {
            "type": "boolean"
          },
          "status": {
            "$ref": "#/components/schemas/DecisionEffect"
          },
          "rpt": {
            "$ref": "#/components/schemas/AccessToken"
          }
        }
      },
      "PolicyProviderRepresentation": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "group": {
            "type": "string"
          }
        }
      },
      "PolicyRepresentation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "policies": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "resources": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "scopes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "logic": {
            "$ref": "#/components/schemas/Logic"
          },
          "decisionStrategy": {
            "$ref": "#/components/schemas/DecisionStrategy"
          },
          "owner": {
            "type": "string"
          },
          "resourceType": {
            "type": "string"
          },
          "resourcesData": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceRepresentation"
            }
          },
          "scopesData": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScopeRepresentation"
            }
          },
          "config": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "PolicyResultRepresentation": {
        "type": "object",
        "properties": {
          "policy": {
            "$ref": "#/components/schemas/PolicyRepresentation"
          },
          "status": {
            "$ref": "#/components/schemas/DecisionEffect"
          },
          "associatedPolicies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PolicyResultRepresentation"
            }
          },
          "scopes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "resourceType": {
            "type": "string"
          }
        }
      },
      "PropertyConfig": {
        "type": "object",
        "properties": {
          "applicable": {
            "type": "boolean"
          },
          "value": {}
        }
      },
      "ProtocolMapperEvaluationRepresentation": {
        "type": "object",
        "properties": {
          "mapperId": {
            "type": "string"
          },
          "mapperName": {
            "type": "string"
          },
          "containerId": {
            "type": "string"
          },
          "containerName": {
            "type": "string"
          },
          "containerType": {
            "type": "string"
          },
          "protocolMapper": {
            "type": "string"
          }
        }
      },
      "ProtocolMapperRepresentation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "protocol": {
            "type": "string"
          },
          "protocolMapper": {
            "type": "string"
          },
          "consentRequired": {
            "type": "boolean",
            "deprecated": true
          },
          "consentText": {
            "type": "string",
            "deprecated": true
          },
          "config": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "PublishedRealmRepresentation": {
        "type": "object",
        "properties": {
          "realm": {
            "type": "string"
          },
          "public_key": {
            "type": "string"
          },
          "token-service": {
            "type": "string"
          },
          "account-service": {
            "type": "string"
          },
          "tokens-not-before": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "RealmEventsConfigRepresentation": {
        "type": "object",
        "properties": {
          "eventsEnabled": {
            "type": "boolean"
          },
          "eventsExpiration": {
            "format": "int64",
            "type": "integer"
          },
          "eventsListeners": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "enabledEventTypes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "adminEventsEnabled": {
            "type": "boolean"
          },
          "adminEventsDetailsEnabled": {
            "type": "boolean"
          }
        }
      },
      "RealmRepresentation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "realm": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "displayNameHtml": {
            "type": "string"
          },
          "notBefore": {
            "format": "int32",
            "type": "integer"
          },
          "defaultSignatureAlgorithm": {
            "type": "string"
          },
          "revokeRefreshToken": {
            "type": "boolean"
          },
          "refreshTokenMaxReuse": {
            "format": "int32",
            "type": "integer"
          },
          "accessTokenLifespan": {
            "format": "int32",
            "type": "integer"
          },
          "accessTokenLifespanForImplicitFlow": {
            "format": "int32",
            "type": "integer"
          },
          "ssoSessionIdleTimeout": {
            "format": "int32",
            "type": "integer"
          },
          "ssoSessionMaxLifespan": {
            "format": "int32",
            "type": "integer"
          },
          "ssoSessionIdleTimeoutRememberMe": {
            "format": "int32",
            "type": "integer"
          },
          "ssoSessionMaxLifespanRememberMe": {
            "format": "int32",
            "type": "integer"
          },
          "offlineSessionIdleTimeout": {
            "format": "int32",
            "type": "integer"
          },
          "offlineSessionMaxLifespanEnabled": {
            "type": "boolean"
          },
          "offlineSessionMaxLifespan": {
            "format": "int32",
            "type": "integer"
          },
          "clientSessionIdleTimeout": {
            "format": "int32",
            "type": "integer"
          },
          "clientSessionMaxLifespan": {
            "format": "int32",
            "type": "integer"
          },
          "clientOfflineSessionIdleTimeout": {
            "format": "int32",
            "type": "integer"
          },
          "clientOfflineSessionMaxLifespan": {
            "format": "int32",
            "type": "integer"
          },
          "accessCodeLifespan": {
            "format": "int32",
            "type": "integer"
          },
          "accessCodeLifespanUserAction": {
            "format": "int32",
            "type": "integer"
          },
          "accessCodeLifespanLogin": {
            "format": "int32",
            "type": "integer"
          },
          "actionTokenGeneratedByAdminLifespan": {
            "format": "int32",
            "type": "integer"
          },
          "actionTokenGeneratedByUserLifespan": {
            "format": "int32",
            "type": "integer"
          },
          "oauth2DeviceCodeLifespan": {
            "format": "int32",
            "type": "integer"
          },
          "oauth2DevicePollingInterval": {
            "format": "int32",
            "type": "integer"
          },
          "enabled": {
            "type": "boolean"
          },
          "sslRequired": {
            "type": "string"
          },
          "passwordCredentialGrantAllowed": {
            "type": "boolean",
            "deprecated": true
          },
          "registrationAllowed": {
            "type": "boolean"
          },
          "registrationEmailAsUsername": {
            "type": "boolean"
          },
          "rememberMe": {
            "type": "boolean"
          },
          "verifyEmail": {
            "type": "boolean"
          },
          "loginWithEmailAllowed": {
            "type": "boolean"
          },
          "duplicateEmailsAllowed": {
            "type": "boolean"
          },
          "resetPasswordAllowed": {
            "type": "boolean"
          },
          "editUsernameAllowed": {
            "type": "boolean"
          },
          "userCacheEnabled": {
            "type": "boolean",
            "deprecated": true
          },
          "realmCacheEnabled": {
            "type": "boolean",
            "deprecated": true
          },
          "bruteForceProtected": {
            "type": "boolean"
          },
          "permanentLockout": {
            "type": "boolean"
          },
          "maxTemporaryLockouts": {
            "format": "int32",
            "type": "integer"
          },
          "bruteForceStrategy": {
            "$ref": "#/components/schemas/BruteForceStrategy"
          },
          "maxFailureWaitSeconds": {
            "format": "int32",
            "type": "integer"
          },
          "minimumQuickLoginWaitSeconds": {
            "format": "int32",
            "type": "integer"
          },
          "waitIncrementSeconds": {
            "format": "int32",
            "type": "integer"
          },
          "quickLoginCheckMilliSeconds": {
            "format": "int64",
            "type": "integer"
          },
          "maxDeltaTimeSeconds": {
            "format": "int32",
            "type": "integer"
          },
          "failureFactor": {
            "format": "int32",
            "type": "integer"
          },
          "privateKey": {
            "type": "string",
            "deprecated": true
          },
          "publicKey": {
            "type": "string",
            "deprecated": true
          },
          "certificate": {
            "type": "string",
            "deprecated": true
          },
          "codeSecret": {
            "type": "string",
            "deprecated": true
          },
          "roles": {
            "$ref": "#/components/schemas/RolesRepresentation"
          },
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupRepresentation"
            }
          },
          "defaultRoles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "deprecated": true
          },
          "defaultRole": {
            "$ref": "#/components/schemas/RoleRepresentation"
          },
          "adminPermissionsClient": {
            "$ref": "#/components/schemas/ClientRepresentation"
          },
          "defaultGroups": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "requiredCredentials": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "deprecated": true
          },
          "passwordPolicy": {
            "type": "string"
          },
          "otpPolicyType": {
            "type": "string"
          },
          "otpPolicyAlgorithm": {
            "type": "string"
          },
          "otpPolicyInitialCounter": {
            "format": "int32",
            "type": "integer"
          },
          "otpPolicyDigits": {
            "format": "int32",
            "type": "integer"
          },
          "otpPolicyLookAheadWindow": {
            "format": "int32",
            "type": "integer"
          },
          "otpPolicyPeriod": {
            "format": "int32",
            "type": "integer"
          },
          "otpPolicyCodeReusable": {
            "type": "boolean"
          },
          "otpSupportedApplications": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "localizationTexts": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "webAuthnPolicyRpEntityName": {
            "type": "string"
          },
          "webAuthnPolicySignatureAlgorithms": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "webAuthnPolicyRpId": {
            "type": "string"
          },
          "webAuthnPolicyAttestationConveyancePreference": {
            "type": "string"
          },
          "webAuthnPolicyAuthenticatorAttachment": {
            "type": "string"
          },
          "webAuthnPolicyRequireResidentKey": {
            "type": "string"
          },
          "webAuthnPolicyUserVerificationRequirement": {
            "type": "string"
          },
          "webAuthnPolicyCreateTimeout": {
            "format": "int32",
            "type": "integer"
          },
          "webAuthnPolicyAvoidSameAuthenticatorRegister": {
            "type": "boolean"
          },
          "webAuthnPolicyAcceptableAaguids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "webAuthnPolicyExtraOrigins": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "webAuthnPolicyPasswordlessRpEntityName": {
            "type": "string"
          },
          "webAuthnPolicyPasswordlessSignatureAlgorithms": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "webAuthnPolicyPasswordlessRpId": {
            "type": "string"
          },
          "webAuthnPolicyPasswordlessAttestationConveyancePreference": {
            "type": "string"
          },
          "webAuthnPolicyPasswordlessAuthenticatorAttachment": {
            "type": "string"
          },
          "webAuthnPolicyPasswordlessRequireResidentKey": {
            "type": "string"
          },
          "webAuthnPolicyPasswordlessUserVerificationRequirement": {
            "type": "string"
          },
          "webAuthnPolicyPasswordlessCreateTimeout": {
            "format": "int32",
            "type": "integer"
          },
          "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": {
            "type": "boolean"
          },
          "webAuthnPolicyPasswordlessAcceptableAaguids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "webAuthnPolicyPasswordlessExtraOrigins": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "webAuthnPolicyPasswordlessPasskeysEnabled": {
            "type": "boolean"
          },
          "clientProfiles": {
            "$ref": "#/components/schemas/ClientProfilesRepresentation"
          },
          "clientPolicies": {
            "$ref": "#/components/schemas/ClientPoliciesRepresentation"
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserRepresentation"
            }
          },
          "federatedUsers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserRepresentation"
            }
          },
          "scopeMappings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScopeMappingRepresentation"
            }
          },
          "clientScopeMappings": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ScopeMappingRepresentation"
              }
            }
          },
          "clients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClientRepresentation"
            }
          },
          "clientScopes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClientScopeRepresentation"
            }
          },
          "defaultDefaultClientScopes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "defaultOptionalClientScopes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "browserSecurityHeaders": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "smtpServer": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "userFederationProviders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserFederationProviderRepresentation"
            }
          },
          "userFederationMappers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserFederationMapperRepresentation"
            }
          },
          "loginTheme": {
            "type": "string"
          },
          "accountTheme": {
            "type": "string"
          },
          "adminTheme": {
            "type": "string"
          },
          "emailTheme": {
            "type": "string"
          },
          "eventsEnabled": {
            "type": "boolean"
          },
          "eventsExpiration": {
            "format": "int64",
            "type": "integer"
          },
          "eventsListeners": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "enabledEventTypes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "adminEventsEnabled": {
            "type": "boolean"
          },
          "adminEventsDetailsEnabled": {
            "type": "boolean"
          },
          "identityProviders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdentityProviderRepresentation"
            }
          },
          "identityProviderMappers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdentityProviderMapperRepresentation"
            }
          },
          "protocolMappers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProtocolMapperRepresentation"
            }
          },
          "components": {
            "$ref": "#/components/schemas/MultivaluedHashMapStringComponentExportRepresentation"
          },
          "internationalizationEnabled": {
            "type": "boolean"
          },
          "supportedLocales": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "defaultLocale": {
            "type": "string"
          },
          "authenticationFlows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuthenticationFlowRepresentation"
            }
          },
          "authenticatorConfig": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuthenticatorConfigRepresentation"
            }
          },
          "requiredActions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RequiredActionProviderRepresentation"
            }
          },
          "browserFlow": {
            "type": "string"
          },
          "registrationFlow": {
            "type": "string"
          },
          "directGrantFlow": {
            "type": "string"
          },
          "resetCredentialsFlow": {
            "type": "string"
          },
          "clientAuthenticationFlow": {
            "type": "string"
          },
          "dockerAuthenticationFlow": {
            "type": "string"
          },
          "firstBrokerLoginFlow": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "keycloakVersion": {
            "type": "string"
          },
          "userManagedAccessAllowed": {
            "type": "boolean"
          },
          "organizationsEnabled": {
            "type": "boolean"
          },
          "organizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationRepresentation"
            }
          },
          "verifiableCredentialsEnabled": {
            "type": "boolean"
          },
          "adminPermissionsEnabled": {
            "type": "boolean"
          },
          "social": {
            "type": "boolean",
            "deprecated": true
          },
          "updateProfileOnInitialSocialLogin": {
            "type": "boolean",
            "deprecated": true
          },
          "socialProviders": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "deprecated": true
          },
          "applicationScopeMappings": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ScopeMappingRepresentation"
              }
            },
            "deprecated": true
          },
          "applications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationRepresentation"
            },
            "deprecated": true
          },
          "oauthClients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OAuthClientRepresentation"
            },
            "deprecated": true
          },
          "clientTemplates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClientTemplateRepresentation"
            },
            "deprecated": true
          }
        }
      },
      "RequiredActionConfigInfoRepresentation": {
        "type": "object",
        "properties": {
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConfigPropertyRepresentation"
            }
          }
        }
      },
      "RequiredActionConfigRepresentation": {
        "type": "object",
        "properties": {
          "config": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "RequiredActionProviderRepresentation": {
        "type": "object",
        "properties": {
          "alias": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "providerId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "defaultAction": {
            "type": "boolean"
          },
          "priority": {
            "format": "int32",
            "type": "integer"
          },
          "config": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "ResourceOwnerRepresentation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "ResourceRepresentation": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "uris": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "type": "string"
          },
          "scopes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScopeRepresentation"
            }
          },
          "icon_uri": {
            "type": "string"
          },
          "owner": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceOwnerRepresentation"
              }
            ],
            "readOnly": true
          },
          "ownerManagedAccess": {
            "type": "boolean"
          },
          "displayName": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "uri": {
            "type": "string",
            "writeOnly": true,
            "deprecated": true
          },
          "scopesUma": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScopeRepresentation"
            }
          }
        }
      },
      "ResourceServerRepresentation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "clientId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "allowRemoteResourceManagement": {
            "type": "boolean"
          },
          "policyEnforcementMode": {
            "$ref": "#/components/schemas/PolicyEnforcementMode"
          },
          "resources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceRepresentation"
            }
          },
          "policies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PolicyRepresentation"
            }
          },
          "scopes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScopeRepresentation"
            }
          },
          "decisionStrategy": {
            "$ref": "#/components/schemas/DecisionStrategy"
          },
          "authorizationSchema": {
            "$ref": "#/components/schemas/AuthorizationSchema"
          }
        }
      },
      "ResourceType": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "scopes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "scopeAliases": {
            "type": "object",
            "additionalProperties": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "groupType": {
            "type": "string"
          }
        }
      },
      "RoleRepresentation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "scopeParamRequired": {
            "type": "boolean",
            "deprecated": true
          },
          "composite": {
            "type": "boolean"
          },
          "composites": {
            "$ref": "#/components/schemas/Composites"
          },
          "clientRole": {
            "type": "boolean"
          },
          "containerId": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "RolesRepresentation": {
        "type": "object",
        "properties": {
          "realm": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleRepresentation"
            }
          },
          "client": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/RoleRepresentation"
              }
            }
          },
          "application": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/RoleRepresentation"
              }
            },
            "deprecated": true
          }
        }
      },
      "ScopeEnforcementMode": {
        "enum": [
          "ALL",
          "ANY",
          "DISABLED"
        ],
        "type": "string"
      },
      "ScopeMappingRepresentation": {
        "type": "object",
        "properties": {
          "self": {
            "type": "string"
          },
          "client": {
            "type": "string"
          },
          "clientTemplate": {
            "type": "string",
            "deprecated": true
          },
          "clientScope": {
            "type": "string"
          },
          "roles": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ScopeRepresentation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "iconUri": {
            "type": "string"
          },
          "policies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PolicyRepresentation"
            }
          },
          "resources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceRepresentation"
            }
          },
          "displayName": {
            "type": "string"
          }
        }
      },
      "SocialLinkRepresentation": {
        "type": "object",
        "properties": {
          "socialProvider": {
            "type": "string"
          },
          "socialUserId": {
            "type": "string"
          },
          "socialUsername": {
            "type": "string"
          }
        }
      },
      "UPAttribute": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "validations": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {}
            }
          },
          "annotations": {
            "type": "object",
            "additionalProperties": {}
          },
          "required": {
            "$ref": "#/components/schemas/UPAttributeRequired"
          },
          "permissions": {
            "$ref": "#/components/schemas/UPAttributePermissions"
          },
          "selector": {
            "$ref": "#/components/schemas/UPAttributeSelector"
          },
          "group": {
            "type": "string"
          },
          "multivalued": {
            "type": "boolean"
          },
          "defaultValue": {
            "type": "string"
          }
        }
      },
      "UPAttributePermissions": {
        "type": "object",
        "properties": {
          "view": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "edit": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "UPAttributeRequired": {
        "type": "object",
        "properties": {
          "roles": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "scopes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "UPAttributeSelector": {
        "type": "object",
        "properties": {
          "scopes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "UPConfig": {
        "type": "object",
        "properties": {
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UPAttribute"
            }
          },
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UPGroup"
            }
          },
          "unmanagedAttributePolicy": {
            "$ref": "#/components/schemas/UnmanagedAttributePolicy"
          }
        }
      },
      "UPGroup": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "displayHeader": {
            "type": "string"
          },
          "displayDescription": {
            "type": "string"
          },
          "annotations": {
            "type": "object",
            "additionalProperties": {}
          }
        }
      },
      "UnmanagedAttributePolicy": {
        "enum": [
          "ENABLED",
          "ADMIN_VIEW",
          "ADMIN_EDIT"
        ],
        "type": "string"
      },
      "UserConsentRepresentation": {
        "type": "object",
        "properties": {
          "clientId": {
            "type": "string"
          },
          "grantedClientScopes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "createdDate": {
            "format": "int64",
            "type": "integer"
          },
          "lastUpdatedDate": {
            "format": "int64",
            "type": "integer"
          },
          "grantedRealmRoles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "deprecated": true
          }
        }
      },
      "UserFederationMapperRepresentation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "federationProviderDisplayName": {
            "type": "string"
          },
          "federationMapperType": {
            "type": "string"
          },
          "config": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "UserFederationProviderRepresentation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "providerName": {
            "type": "string"
          },
          "config": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "priority": {
            "format": "int32",
            "type": "integer"
          },
          "fullSyncPeriod": {
            "format": "int32",
            "type": "integer"
          },
          "changedSyncPeriod": {
            "format": "int32",
            "type": "integer"
          },
          "lastSync": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "UserManagedAccessConfig": {
        "type": "object"
      },
      "UserProfileAttributeGroupMetadata": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "displayHeader": {
            "type": "string"
          },
          "displayDescription": {
            "type": "string"
          },
          "annotations": {
            "type": "object",
            "additionalProperties": {}
          }
        }
      },
      "UserProfileAttributeMetadata": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "required": {
            "type": "boolean"
          },
          "readOnly": {
            "type": "boolean"
          },
          "annotations": {
            "type": "object",
            "additionalProperties": {}
          },
          "validators": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {}
            }
          },
          "group": {
            "type": "string"
          },
          "multivalued": {
            "type": "boolean"
          },
          "defaultValue": {
            "type": "string"
          }
        }
      },
      "UserProfileMetadata": {
        "type": "object",
        "properties": {
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserProfileAttributeMetadata"
            }
          },
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserProfileAttributeGroupMetadata"
            }
          }
        }
      },
      "UserRepresentation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "emailVerified": {
            "type": "boolean"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "userProfileMetadata": {
            "$ref": "#/components/schemas/UserProfileMetadata"
          },
          "enabled": {
            "type": "boolean"
          },
          "self": {
            "type": "string"
          },
          "origin": {
            "type": "string"
          },
          "createdTimestamp": {
            "format": "int64",
            "type": "integer"
          },
          "totp": {
            "type": "boolean"
          },
          "federationLink": {
            "type": "string"
          },
          "serviceAccountClientId": {
            "type": "string"
          },
          "credentials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CredentialRepresentation"
            }
          },
          "disableableCredentialTypes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "requiredActions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "federatedIdentities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FederatedIdentityRepresentation"
            }
          },
          "realmRoles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "clientRoles": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "clientConsents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserConsentRepresentation"
            }
          },
          "notBefore": {
            "format": "int32",
            "type": "integer"
          },
          "applicationRoles": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": true
          },
          "socialLinks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SocialLinkRepresentation"
            },
            "deprecated": true
          },
          "groups": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "access": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean"
            }
          }
        }
      },
      "UserSessionRepresentation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "ipAddress": {
            "type": "string"
          },
          "start": {
            "format": "int64",
            "type": "integer"
          },
          "lastAccess": {
            "format": "int64",
            "type": "integer"
          },
          "rememberMe": {
            "type": "boolean"
          },
          "clients": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "transientUser": {
            "type": "boolean"
          }
        }
      },
      "WorkflowConditionRepresentation": {
        "type": "object",
        "properties": {
          "uses": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "config": {
            "$ref": "#/components/schemas/MultivaluedHashMapStringString"
          }
        }
      },
      "WorkflowRepresentation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "uses": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "on": {},
          "reset-on": {},
          "recurring": {
            "type": "boolean"
          },
          "if": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkflowConditionRepresentation"
            }
          },
          "steps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkflowStepRepresentation"
            }
          },
          "state": {
            "$ref": "#/components/schemas/WorkflowStateRepresentation"
          },
          "with": {
            "$ref": "#/components/schemas/MultivaluedHashMapStringString"
          },
          "onValues": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "onEventsReset": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "WorkflowSetRepresentation": {
        "type": "object",
        "properties": {
          "workflows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkflowRepresentation"
            }
          }
        }
      },
      "WorkflowStateRepresentation": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "WorkflowStepRepresentation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "uses": {
            "type": "string"
          },
          "after": {
            "type": "string"
          },
          "priority": {
            "type": "string"
          },
          "config": {
            "$ref": "#/components/schemas/MultivaluedHashMapStringString"
          }
        }
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "tags": [
    {
      "name": "user"
    },
    {
      "name": "organization"
    },
    {
      "name": "role",
      "parent": "organization"
    },
    {
      "name": "project",
      "parent": "organization"
    },
    {
      "name": "branch",
      "parent": "project"
    }
  ]
}